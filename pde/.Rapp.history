########################################################
d <- readRDS("~/GitHub/bTB-bruc-co-infection-ms/pde/Ro_confidence_interval_simulation_results.rds")#
#
# test figure with violin plots#
n = length(d$Ro_brucellosis_single)#
df <- data.frame(Ro = c(d$Ro_bTB_single, d$Ro_bTB_co, #
	d$Ro_brucellosis_single, d$Ro_brucellosis_co),#
	meanRo = c(rep(mean(d$Ro_bTB_single),n), #
		rep(mean(d$Ro_bTB_co),n),#
		rep(mean(d$Ro_brucellosis_single),n), #
		rep(mean(d$Ro_brucellosis_co),n)),#
	sdRo = c(rep(sd(d$Ro_bTB_single),n), #
		rep(sd(d$Ro_bTB_co),n),#
		rep(sd(d$Ro_brucellosis_single),n), #
		rep(sd(d$Ro_brucellosis_co),n)),#
	Prevalence = NA,#
	infection = c(rep("BTB", 2*n), rep("brucellosis", 2*n)) , #
	singleco = rep(c("single", "co-infection", "single",#
		"co-infection"), each = n),#
	X = rep(c("BTB-single", "BTB-co-infection", "bruc-single", #
		"bruc-co-infection"), each = n), #
	Xindex = rep(c(1.1, 1.4, 3.1, 3.4), each = n) )#
df$X <- factor(df$X, levels = c("BTB-single",#
	"BTB-co-infection", "bruc-single", "bruc-co-infection"))#
df$infection <- relevel(as.factor(df$infection), "BTB")#
df$singleco <- relevel(as.factor(df$singleco), "single")#
tapply(df$Ro, df$X, mean)
head(d)
head(df)
TB <- d$Ro_bTB_co - d$Ro_bTB_single
bruc <- d$Ro_brucellosis_co - d$Ro_brucellosis_single
summary(TB)
summary(bruc)
df <- data.frame(Ro = c(TB, bruc), #
	infection = c(rep("BTB", length(TB)), rep("brucellosis", length(bruc))))#
df$infection <- as.factor(df$infection)#
df$infection <- relevel(as.factor(df$infection), "BTB")
mu <- data.frame(infection = c("TB", "bruc"), r.mean = c(mean(TB), mean(bruc)) )
head(mu)
head(df)
summary(Ro)
summary(df$Ro)
phist <- ggplot(df, aes(x = Ro, colour = infection, fill = infection)) + #
	geom_histogram(aes(y = ..density..), position = "identity", alpha = 0.5, bins = 30) + #
	#geom_histogram(position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	scale_fill_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	xlab(expression(paste(Change~"in"~ R[o]))) + #"~with~"co-infection #
	ylab("Density") + #
	#geom_vline(data = mu, aes(xintercept= r.mean), linetype="dashed") +#
	theme_bw() +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14,  margin = margin(r = 3)),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 5.5), "points"))
phist
phist <- ggplot(df, aes(x = Ro, colour = infection, fill = infection)) + #
	stat_bin(aes(y = ..density..), position = "identity", alpha = 0.5, bins = 30) + #
	#geom_histogram(position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	scale_fill_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	xlab(expression(paste(Change~"in"~ R[o]))) + #"~with~"co-infection #
	ylab("Density") + #
	#geom_vline(data = mu, aes(xintercept= r.mean), linetype="dashed") +#
	theme_bw() +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14,  margin = margin(r = 3)),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 5.5), "points"))
phist
phist <- ggplot(df, aes(x = Ro, colour = infection, fill = infection)) + #
	geom_freqpoly(aes(y = ..density..), position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	scale_fill_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	xlab(expression(paste(Change~"in"~ R[o]))) + #"~with~"co-infection #
	ylab("Density") + #
	#geom_vline(data = mu, aes(xintercept= r.mean), linetype="dashed") +#
	theme_bw() +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14,  margin = margin(r = 3)),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 5.5), "points"))
phist
phist <- ggplot(df, aes(x = Ro, colour = infection, fill = infection)) + #
	stat_count(aes(y = ..density..), position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	scale_fill_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	xlab(expression(paste(Change~"in"~ R[o]))) + #"~with~"co-infection #
	ylab("Density") + #
	#geom_vline(data = mu, aes(xintercept= r.mean), linetype="dashed") +#
	theme_bw() +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14,  margin = margin(r = 3)),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 5.5), "points"))
phist <- ggplot(df, aes(x = Ro, colour = infection, fill = infection)) + #
	stat_count(aes(y = ..density..), position = "identity", alpha = 0.5) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	scale_fill_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	xlab(expression(paste(Change~"in"~ R[o]))) + #"~with~"co-infection #
	ylab("Density") + #
	#geom_vline(data = mu, aes(xintercept= r.mean), linetype="dashed") +#
	theme_bw() +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14,  margin = margin(r = 3)),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 5.5), "points"))
phist
d <- readRDS("~/GitHub/bTB-bruc-co-infection-ms/pde/Ro_confidence_interval_simulation_results.rds")#
#
# test figure with violin plots#
n = length(d$Ro_brucellosis_single)#
df <- data.frame(Ro = c(d$Ro_bTB_single, d$Ro_bTB_co, #
	d$Ro_brucellosis_single, d$Ro_brucellosis_co),#
	meanRo = c(rep(mean(d$Ro_bTB_single),n), #
		rep(mean(d$Ro_bTB_co),n),#
		rep(mean(d$Ro_brucellosis_single),n), #
		rep(mean(d$Ro_brucellosis_co),n)),#
	sdRo = c(rep(sd(d$Ro_bTB_single),n), #
		rep(sd(d$Ro_bTB_co),n),#
		rep(sd(d$Ro_brucellosis_single),n), #
		rep(sd(d$Ro_brucellosis_co),n)),#
	Prevalence = NA,#
	infection = c(rep("BTB", 2*n), rep("brucellosis", 2*n)) , #
	singleco = rep(c("single", "co-infection", "single",#
		"co-infection"), each = n),#
	X = rep(c("BTB-single", "BTB-co-infection", "bruc-single", #
		"bruc-co-infection"), each = n), #
	Xindex = rep(c(1.1, 1.4, 3.1, 3.4), each = n) )#
df$X <- factor(df$X, levels = c("BTB-single",#
	"BTB-co-infection", "bruc-single", "bruc-co-infection"))#
df$infection <- relevel(as.factor(df$infection), "BTB")#
df$singleco <- relevel(as.factor(df$singleco), "single")
pR <- ggplot(df, aes(x = infection, y = Ro, colour = infection, shape = singleco)) + 	#
	geom_point(aes(x = infection, y = meanRo), size = 3,#
		position= position_dodge(width = 0.9)) +#
	geom_errorbar(aes(x = infection, ymin = meanRo - sdRo, ymax = meanRo + sdRo),#
		width = 0, position= position_dodge(width = 0.9)) +#
	ylim(0.8, 6) +#
	xlab("") +#
	ylab(expression(R[0])) +#
	theme_bw() +#
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) +#
	scale_shape_manual(values = c(19, 17)) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust= - 0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=16, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14, margin = margin(r = 8)),#
        panel.border = element_blank(), #
		legend.position=c(0.85, 0.9),  #
		legend.text = element_text(size = 10),#
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key= element_blank(),#
        legend.title= element_blank())
pR
# Dot and error plots for Ro#
pR <- ggplot(df, aes(x = infection, y = Ro, colour = infection, shape = singleco)) + 	#
	geom_point(aes(x = infection, y = meanRo), size = 3,#
		position= position_dodge(width = 0.9)) +#
	geom_errorbar(aes(x = infection, ymin = meanRo - sdRo, ymax = meanRo + sdRo),#
		width = 0, position= position_dodge(width = 0.9)) +#
	ylim(0.8, 6) +#
	xlab("") +#
	ylab(expression(R[0])) +#
	theme_bw() +#
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) +#
	scale_shape_manual(values = c(19, 17)) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust= - 0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=16, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14, margin = margin(r = 8)),#
        panel.border = element_blank(), #
		legend.position=c(0.85, 0.9),  #
		legend.text = element_text(size = 10),#
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key= element_blank(),#
        legend.title= element_blank())
# Dot and error plots for Endemic Prevlanece#
d2 <- readRDS("~/GitHub/bTB-bruc-co-infection-ms/pde/EE_confidence_interval_simulation_results.rds")#
#
# in 81 simualtions, we lost brucellosis (so not useful comparison for bTB); 13 for bruc#
d2$remove <- "keep"#
d2$remove[d2$EE_brucellosis_co < 0.0001] <- "nobruc"#
d2$remove[d2$EE_bTB_co < 0.0001] <- "noTB"#
length(d2$remove[d2$remove == "nobruc"])#
length(d2$remove[d2$remove == "noTB"])#
#
d2$EE_bTB_co[d2$remove == "nobruc"] <- NA#
d2$EE_bTB_single[d2$remove == "nobruc"] <- NA#
d2$EE_brucellosis_co[d2$remove == "noTB"] <- NA#
d2$EE_brucellosis_single[d2$remove == "noTB"] <- NA
df$Prevalence <- c(d2$EE_bTB_single, d2$EE_bTB_co, d2$EE_brucellosis_single, d2$EE_brucellosis_co)#
#df <- df[!is.na(df$Prevalence),]#
#
df$meanprev <- c(rep(mean(df$Prevalence[df$X == "BTB-single"], na.rm = TRUE),#
	length(df$X[df$X == "BTB-single"])), #
	rep(mean(df$Prevalence[df$X == "BTB-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "BTB-co-infection"])),#
	rep(mean(df$Prevalence[df$X == "bruc-single"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-single"])),#
	rep(mean(df$Prevalence[df$X == "bruc-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-co-infection"])) )#
df$sd <- c(rep(sd(df$Prevalence[df$X == "BTB-single"], na.rm = TRUE), #
	length(df$X[df$X == "BTB-single"])), #
	rep(sd(df$Prevalence[df$X == "BTB-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "BTB-co-infection"])),#
	rep(sd(df$Prevalence[df$X == "bruc-single"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-single"])),#
	rep(sd(df$Prevalence[df$X == "bruc-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-co-infection"])) )
pEE <- ggplot(df, aes(x = infection, y = Prevalence, colour = infection, #
	shape = singleco, dodge = singleco)) + #
	geom_point(aes(x = infection, y = meanprev), size = 3, #
		position= position_dodge(width = 0.9)) +#
	geom_errorbar(aes(x = infection, ymin = meanprev - sd, ymax = meanprev + sd),#
		width = 0, position= position_dodge(width = 0.9)) +#
	ylim(0, 0.8) + #
	xlab("") +#
	ylab("Prevalence") + #
	theme_bw() +#
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) +#
	scale_shape_manual(values = c(19, 17), guide = FALSE) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=16, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14, margin = margin (r = 3)),#
        panel.border = element_blank())
phist <- ggplot(df, aes(x = Ro, colour = infection, fill = infection)) + #
	geom_histogram(aes(y = ..count..), position = "identity", alpha = 0.5, bins = 30) + #
#	geom_histogram(aes(y = ..density..), position = "identity", alpha = 0.5, bins = 30) + #
	#geom_histogram(position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	scale_fill_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	xlab(expression(paste(Change~"in"~ R[o]))) + #"~with~"co-infection #
	ylab("Frequency") + #
	#geom_vline(data = mu, aes(xintercept= r.mean), linetype="dashed") +#
	theme_bw() +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14,  margin = margin(r = 3)),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 5.5), "points"))
phist
summary(TB)
summary(burc)
summary(bruc)
df <- data.frame(Ro = c(TB, bruc), #
	infection = c(rep("BTB", length(TB)), rep("brucellosis", length(bruc))))#
df$infection <- as.factor(df$infection)#
df$infection <- relevel(as.factor(df$infection), "BTB")
summary(df[df$infection == "BTB"])
summary(df[df$infection == "BTB",])
phist <- ggplot(df, aes(x = Ro, colour = infection, fill = infection)) + #
	geom_histogram(aes(y = ..count..), position = "identity", alpha = 0.5, bins = 30)
phist
ggplot(df[df$infection == "BTB",], aes(x = Ro, colour = infection, fill = infection)) + #
	geom_histogram(aes(y = ..count..), position = "identity", alpha = 0.5, bins = 30)
ggplot(df[df$infection == "brucellosis",], aes(x = Ro, colour = infection, fill = infection)) + #
	geom_histogram(aes(y = ..count..), position = "identity", alpha = 0.5, bins = 30)
ggplot(df, aes(x = Ro, colour = infection, fill = infection)) + #
	geom_histogram(aes(y = ..count..), position = "identity", alpha = 0.5, bins = 30)
df$infection <- relevel(as.factor(df$infection), "brucellosis")
ggplot(df, aes(x = Ro, colour = infection, fill = infection)) + #
	geom_histogram(aes(y = ..count..), position = "identity", alpha = 0.5, bins = 30)
df$infection <- relevel(as.factor(df$infection), "BTB")
ggplot(df, aes(x = Ro, colour = infection, fill = infection)) + #
	geom_histogram(aes(y = ..count..), position = "identity", alpha = 0.5, bins = 30)
phist <- ggplot(df, aes(x = Ro, colour = infection, fill = infection)) + #
	geom_histogram(aes(y = ..count..), position = "identity", alpha = 0.5, bins = 30) + #
#	geom_histogram(aes(y = ..density..), position = "identity", alpha = 0.5, bins = 30) + #
	#geom_histogram(position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	scale_fill_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	xlab(expression(paste(Change~"in"~ R[o]))) + #"~with~"co-infection #
	ylab("Frequency") + #
	#geom_vline(data = mu, aes(xintercept= r.mean), linetype="dashed") +#
	theme_bw() +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14,  margin = margin(r = 3)),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 5.5), "points"))
phist
phist <- ggplot(df[df$infection == "BTB",], aes(x = Ro, colour = infection, fill = infection)) + #
	geom_histogram(aes(y = ..count..), position = "identity", alpha = 0.5, bins = 30) + #
#	geom_histogram(aes(y = ..density..), position = "identity", alpha = 0.5, bins = 30) + #
	#geom_histogram(position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	scale_fill_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	xlab(expression(paste(Change~"in"~ R[o]))) + #"~with~"co-infection #
	ylab("Frequency") + #
	#geom_vline(data = mu, aes(xintercept= r.mean), linetype="dashed") +#
	theme_bw() +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14,  margin = margin(r = 3)),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 5.5), "points"))
phist
phist <- ggplot(df, aes(x = Ro, colour = infection, fill = infection)) + #
	geom_histogram(aes(y = ..count..), position = "identity", alpha = 0.5, bins = 30) + #
#	geom_histogram(aes(y = ..density..), position = "identity", alpha = 0.5, bins = 30) + #
	#geom_histogram(position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	scale_fill_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	xlab(expression(paste(Change~"in"~ R[o]))) + #"~with~"co-infection #
	ylab("Frequency") + #
	#geom_vline(data = mu, aes(xintercept= r.mean), linetype="dashed") +#
	theme_bw() +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14,  margin = margin(r = 3)),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 5.5), "points"))
phist
# Histograms for Endemic Prevlanece#
TB <-d2$EE_bTB_co[!(d2$remove == "nobruc")] - #
	d2$EE_bTB_single[!(d2$remove == "nobruc")] #
Bruc <- d2$EE_brucellosis_co[!(d2$remove == "noTB")]  - #
	d2$EE_brucellosis_single[!(d2$remove == "noTB")] #
df <- data.frame(Prevalence = c(TB, Bruc), #
	infection = c(rep("BTB", length(d2$EE_bTB_single[!(d2$remove == "nobruc")])), #
	rep("brucellosis", length(d2$EE_brucellosis_single[!(d2$remove == "noTB")]) )))#
df <- df[!is.na(df$Prevalence),]#
df$infection <- as.factor(df$infection)#
df$infection <- relevel(as.factor(df$infection), "BTB")#
phistEE <- ggplot(df, aes(x = Prevalence, colour = infection, fill = infection)) + #
	geom_histogram(aes(y = ..count..), #
		position = "frequency", alpha = 0.5, bins = 30) + #
#		position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	scale_fill_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	xlab("Change in prevalence") + #
	ylab("Frequency") + #
	theme_bw() +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14, margin = margin(r = 3)),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 15), "points"))
library("grid")#
grid.newpage()#
pushViewport(viewport(layout = grid.layout(2,3)))#
define_region = function(row, col){#
	viewport(layout.pos.row = row, layout.pos.col = col)#
}#
print(pR, vp = define_region(1:2,1))#
print(pEE, vp = define_region(1:2, 2))#
print(phist, vp = define_region(1, 3))#
print(phistEE, vp = define_region(2, 3))
phistEE <- ggplot(df, aes(x = Prevalence, colour = infection, fill = infection)) + #
	geom_histogram(aes(y = ..count..), #
		position = "identity", alpha = 0.5, bins = 30) + #
#		position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	scale_fill_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	xlab("Change in prevalence") + #
	ylab("Frequency") + #
	theme_bw() +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14, margin = margin(r = 3)),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 15), "points"))  #
#
library("grid")#
grid.newpage()#
pushViewport(viewport(layout = grid.layout(2,3)))#
define_region = function(row, col){#
	viewport(layout.pos.row = row, layout.pos.col = col)#
}#
print(pR, vp = define_region(1:2,1))#
print(pEE, vp = define_region(1:2, 2))#
print(phist, vp = define_region(1, 3))#
print(phistEE, vp = define_region(2, 3))
library("grid")#
grid.newpage()#
pushViewport(viewport(layout = grid.layout(2,3)))#
define_region = function(row, col){#
	viewport(layout.pos.row = row, layout.pos.col = col)#
}#
print(pR, vp = define_region(1:2,1))#
print(pEE, vp = define_region(1:2, 2))#
print(phist, vp = define_region(1, 3))#
print(phistEE, vp = define_region(2, 3))
pEE <- ggplot(df, aes(x = infection, y = Prevalence, colour = infection, #
	shape = singleco, dodge = singleco)) + #
	geom_point(aes(x = infection, y = meanprev), size = 3, #
		position= position_dodge(width = 0.9)) +#
	geom_errorbar(aes(x = infection, ymin = meanprev - sd, ymax = meanprev + sd),#
		width = 0, position= position_dodge(width = 0.9)) +#
	ylim(0, 0.8) + #
	xlab("") +#
	ylab("Prevalence") + #
	labs(colour = "Populations with")#
	theme_bw() +#
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) +#
	scale_shape_manual(values = c(19, 17), guide = FALSE) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=16, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14, margin = margin (r = 3)),#
        panel.border = element_blank())
pEE
# Dot and error plots for Endemic Prevlanece#
d2 <- readRDS("~/GitHub/bTB-bruc-co-infection-ms/pde/EE_confidence_interval_simulation_results.rds")
df$Prevalence <- c(d2$EE_bTB_single, d2$EE_bTB_co, d2$EE_brucellosis_single, d2$EE_brucellosis_co)#
#df <- df[!is.na(df$Prevalence),]#
#
df$meanprev <- c(rep(mean(df$Prevalence[df$X == "BTB-single"], na.rm = TRUE),#
	length(df$X[df$X == "BTB-single"])), #
	rep(mean(df$Prevalence[df$X == "BTB-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "BTB-co-infection"])),#
	rep(mean(df$Prevalence[df$X == "bruc-single"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-single"])),#
	rep(mean(df$Prevalence[df$X == "bruc-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-co-infection"])) )#
df$sd <- c(rep(sd(df$Prevalence[df$X == "BTB-single"], na.rm = TRUE), #
	length(df$X[df$X == "BTB-single"])), #
	rep(sd(df$Prevalence[df$X == "BTB-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "BTB-co-infection"])),#
	rep(sd(df$Prevalence[df$X == "bruc-single"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-single"])),#
	rep(sd(df$Prevalence[df$X == "bruc-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-co-infection"])) )
########################################################
########################################################
# Figure 3- Ro and endemic prevalence figures#
########################################################
########################################################
d <- readRDS("~/GitHub/bTB-bruc-co-infection-ms/pde/Ro_confidence_interval_simulation_results.rds")#
#
# test figure with violin plots#
n = length(d$Ro_brucellosis_single)#
df <- data.frame(Ro = c(d$Ro_bTB_single, d$Ro_bTB_co, #
	d$Ro_brucellosis_single, d$Ro_brucellosis_co),#
	meanRo = c(rep(mean(d$Ro_bTB_single),n), #
		rep(mean(d$Ro_bTB_co),n),#
		rep(mean(d$Ro_brucellosis_single),n), #
		rep(mean(d$Ro_brucellosis_co),n)),#
	sdRo = c(rep(sd(d$Ro_bTB_single),n), #
		rep(sd(d$Ro_bTB_co),n),#
		rep(sd(d$Ro_brucellosis_single),n), #
		rep(sd(d$Ro_brucellosis_co),n)),#
	Prevalence = NA,#
	infection = c(rep("BTB", 2*n), rep("brucellosis", 2*n)) , #
	singleco = rep(c("single", "co-infection", "single",#
		"co-infection"), each = n),#
	X = rep(c("BTB-single", "BTB-co-infection", "bruc-single", #
		"bruc-co-infection"), each = n), #
	Xindex = rep(c(1.1, 1.4, 3.1, 3.4), each = n) )#
df$X <- factor(df$X, levels = c("BTB-single",#
	"BTB-co-infection", "bruc-single", "bruc-co-infection"))#
df$infection <- relevel(as.factor(df$infection), "BTB")#
df$singleco <- relevel(as.factor(df$singleco), "single")#
tapply(df$Ro, df$X, mean)#
# BTB-single  		BTB-co-infection       bruc-single 		bruc-co-infection #
#  3.400162          1.959214          			1.063543 			1.598819
# Dot and error plots for Ro#
pR <- ggplot(df, aes(x = infection, y = Ro, colour = infection, shape = singleco)) + 	#
	geom_point(aes(x = infection, y = meanRo), size = 3,#
		position= position_dodge(width = 0.9)) +#
	geom_errorbar(aes(x = infection, ymin = meanRo - sdRo, ymax = meanRo + sdRo),#
		width = 0, position= position_dodge(width = 0.9)) +#
	ylim(0.8, 6) +#
	xlab("") +#
	labs(shape = "Populations with") + #
	ylab(expression(R[0])) +#
	theme_bw() +#
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) +#
	scale_shape_manual(values = c(19, 17)) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust= - 0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=16, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14, margin = margin(r = 8)),#
        panel.border = element_blank(), #
		legend.position=c(0.85, 0.9),  #
		legend.text = element_text(size = 10),#
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key= element_blank(),#
        legend.title= element_blank())
pR
# Dot and error plots for Ro#
pR <- ggplot(df, aes(x = infection, y = Ro, colour = infection, shape = singleco)) + 	#
	geom_point(aes(x = infection, y = meanRo), size = 3,#
		position= position_dodge(width = 0.9)) +#
	geom_errorbar(aes(x = infection, ymin = meanRo - sdRo, ymax = meanRo + sdRo),#
		width = 0, position= position_dodge(width = 0.9)) +#
	ylim(0.8, 6) +#
	xlab("") +#
	labs(colour = "Populations with")#
	ylab(expression(R[0])) +#
	theme_bw() +#
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) +#
	scale_shape_manual(values = c(19, 17)) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust= - 0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=16, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14, margin = margin(r = 8)),#
        panel.border = element_blank(), #
		legend.position=c(0.85, 0.9),  #
		legend.text = element_text(size = 10),#
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key= element_blank())
# Dot and error plots for Ro#
pR <- ggplot(df, aes(x = infection, y = Ro, colour = infection, shape = singleco)) + 	#
	geom_point(aes(x = infection, y = meanRo), size = 3,#
		position= position_dodge(width = 0.9)) +#
	geom_errorbar(aes(x = infection, ymin = meanRo - sdRo, ymax = meanRo + sdRo),#
		width = 0, position= position_dodge(width = 0.9)) +#
	ylim(0.8, 6) +#
	xlab("") +#
	labs(colour = "Populations with") +#
	ylab(expression(R[0])) +#
	theme_bw() +#
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) +#
	scale_shape_manual(values = c(19, 17)) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust= - 0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=16, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14, margin = margin(r = 8)),#
        panel.border = element_blank(), #
		legend.position=c(0.85, 0.9),  #
		legend.text = element_text(size = 10),#
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key= element_blank())
pR
# Dot and error plots for Ro#
pR <- ggplot(df, aes(x = infection, y = Ro, colour = infection, shape = singleco)) + 	#
	geom_point(aes(x = infection, y = meanRo), size = 3,#
		position= position_dodge(width = 0.9)) +#
	geom_errorbar(aes(x = infection, ymin = meanRo - sdRo, ymax = meanRo + sdRo),#
		width = 0, position= position_dodge(width = 0.9)) +#
	ylim(0.8, 6) +#
	xlab("") +#
	labs(shape = "Populations with") +#
	ylab(expression(R[0])) +#
	theme_bw() +#
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) +#
	scale_shape_manual(values = c(19, 17)) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust= - 0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=16, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14, margin = margin(r = 8)),#
        panel.border = element_blank(), #
		legend.position=c(0.85, 0.9),  #
		legend.text = element_text(size = 10),#
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key= element_blank())
pR
########################################################
########################################################
d <- readRDS("~/GitHub/bTB-bruc-co-infection-ms/pde/Ro_confidence_interval_simulation_results.rds")#
#
# test figure with violin plots#
n = length(d$Ro_brucellosis_single)#
df <- data.frame(Ro = c(d$Ro_bTB_single, d$Ro_bTB_co, #
	d$Ro_brucellosis_single, d$Ro_brucellosis_co),#
	meanRo = c(rep(mean(d$Ro_bTB_single),n), #
		rep(mean(d$Ro_bTB_co),n),#
		rep(mean(d$Ro_brucellosis_single),n), #
		rep(mean(d$Ro_brucellosis_co),n)),#
	sdRo = c(rep(sd(d$Ro_bTB_single),n), #
		rep(sd(d$Ro_bTB_co),n),#
		rep(sd(d$Ro_brucellosis_single),n), #
		rep(sd(d$Ro_brucellosis_co),n)),#
	Prevalence = NA,#
	infection = c(rep("BTB", 2*n), rep("brucellosis", 2*n)) , #
	singleco = rep(c("single", "co-infection", "single",#
		"co-infection"), each = n),#
	X = rep(c("BTB-single", "BTB-co-infection", "bruc-single", #
		"bruc-co-infection"), each = n), #
	Xindex = rep(c(1.1, 1.4, 3.1, 3.4), each = n) )#
df$X <- factor(df$X, levels = c("BTB-single",#
	"BTB-co-infection", "bruc-single", "bruc-co-infection"))#
df$infection <- relevel(as.factor(df$infection), "BTB")#
df$singleco <- relevel(as.factor(df$singleco), "single")#
tapply(df$Ro, df$X, mean)#
# BTB-single  		BTB-co-infection       bruc-single 		bruc-co-infection #
#  3.400162          1.959214          			1.063543 			1.598819 #
#
# change legend label: #
df$singleco[df$singleco == "single"] <- "one infection"#
df$singleco[df$singleco == "co-infection"] <- "both infections"#
# Dot and error plots for Ro#
pR <- ggplot(df, aes(x = infection, y = Ro, colour = infection, shape = singleco)) + 	#
	geom_point(aes(x = infection, y = meanRo), size = 3,#
		position= position_dodge(width = 0.9)) +#
	geom_errorbar(aes(x = infection, ymin = meanRo - sdRo, ymax = meanRo + sdRo),#
		width = 0, position= position_dodge(width = 0.9)) +#
	ylim(0.8, 6) +#
	xlab("") +#
	labs(shape = "Populations with") +#
	ylab(expression(R[0])) +#
	theme_bw() +#
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) +#
	scale_shape_manual(values = c(19, 17)) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust= - 0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=16, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14, margin = margin(r = 8)),#
        panel.border = element_blank(), #
		legend.position=c(0.85, 0.9),  #
		legend.text = element_text(size = 10),#
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key= element_blank())
pR
summary(df)
########################################################
d <- readRDS("~/GitHub/bTB-bruc-co-infection-ms/pde/Ro_confidence_interval_simulation_results.rds")#
#
# test figure with violin plots#
n = length(d$Ro_brucellosis_single)#
df <- data.frame(Ro = c(d$Ro_bTB_single, d$Ro_bTB_co, #
	d$Ro_brucellosis_single, d$Ro_brucellosis_co),#
	meanRo = c(rep(mean(d$Ro_bTB_single),n), #
		rep(mean(d$Ro_bTB_co),n),#
		rep(mean(d$Ro_brucellosis_single),n), #
		rep(mean(d$Ro_brucellosis_co),n)),#
	sdRo = c(rep(sd(d$Ro_bTB_single),n), #
		rep(sd(d$Ro_bTB_co),n),#
		rep(sd(d$Ro_brucellosis_single),n), #
		rep(sd(d$Ro_brucellosis_co),n)),#
	Prevalence = NA,#
	infection = c(rep("BTB", 2*n), rep("brucellosis", 2*n)) , #
	singleco = rep(c("single", "co-infection", "single",#
		"co-infection"), each = n),#
	X = rep(c("BTB-single", "BTB-co-infection", "bruc-single", #
		"bruc-co-infection"), each = n), #
	Xindex = rep(c(1.1, 1.4, 3.1, 3.4), each = n) )#
df$X <- factor(df$X, levels = c("BTB-single",#
	"BTB-co-infection", "bruc-single", "bruc-co-infection"))#
df$infection <- relevel(as.factor(df$infection), "BTB")#
df$singleco <- relevel(as.factor(df$singleco), "single")#
tapply(df$Ro, df$X, mean)#
# BTB-single  		BTB-co-infection       bruc-single 		bruc-co-infection #
#  3.400162          1.959214          			1.063543 			1.598819 #
#
# change legend label: #
df$singleco[as.character(df$singleco) == "single"] <- "one infection"#
df$singleco[as.character(df$singleco) == "co-infection"] <- "both infections"
d <- readRDS("~/GitHub/bTB-bruc-co-infection-ms/pde/Ro_confidence_interval_simulation_results.rds")#
#
# test figure with violin plots#
n = length(d$Ro_brucellosis_single)#
df <- data.frame(Ro = c(d$Ro_bTB_single, d$Ro_bTB_co, #
	d$Ro_brucellosis_single, d$Ro_brucellosis_co),#
	meanRo = c(rep(mean(d$Ro_bTB_single),n), #
		rep(mean(d$Ro_bTB_co),n),#
		rep(mean(d$Ro_brucellosis_single),n), #
		rep(mean(d$Ro_brucellosis_co),n)),#
	sdRo = c(rep(sd(d$Ro_bTB_single),n), #
		rep(sd(d$Ro_bTB_co),n),#
		rep(sd(d$Ro_brucellosis_single),n), #
		rep(sd(d$Ro_brucellosis_co),n)),#
	Prevalence = NA,#
	infection = c(rep("BTB", 2*n), rep("brucellosis", 2*n)) , #
	singleco = rep(c("single", "co-infection", "single",#
		"co-infection"), each = n),#
	X = rep(c("BTB-single", "BTB-co-infection", "bruc-single", #
		"bruc-co-infection"), each = n), #
	Xindex = rep(c(1.1, 1.4, 3.1, 3.4), each = n) )#
df$X <- factor(df$X, levels = c("BTB-single",#
	"BTB-co-infection", "bruc-single", "bruc-co-infection"))#
df$infection <- relevel(as.factor(df$infection), "BTB")#
df$singleco <- relevel(as.factor(df$singleco), "single")#
tapply(df$Ro, df$X, mean)#
# BTB-single  		BTB-co-infection       bruc-single 		bruc-co-infection #
#  3.400162          1.959214          			1.063543 			1.598819 #
#
# change legend label: #
df$singleco <- as.character(df$singleco)#
df$singleco[df$singleco == "single"] <- "one infection"#
df$singleco[df$singleco == "co-infection"] <- "both infections"
head(df)
df$singleco <- as.factor(df$singleco)
str(df)
df$singleco <- relevel(as.factor(df$singleco), "one infection")
# Dot and error plots for Ro#
pR <- ggplot(df, aes(x = infection, y = Ro, colour = infection, shape = singleco)) + 	#
	geom_point(aes(x = infection, y = meanRo), size = 3,#
		position= position_dodge(width = 0.9)) +#
	geom_errorbar(aes(x = infection, ymin = meanRo - sdRo, ymax = meanRo + sdRo),#
		width = 0, position= position_dodge(width = 0.9)) +#
	ylim(0.8, 6) +#
	xlab("") +#
	labs(shape = "Populations with") +#
	ylab(expression(R[0])) +#
	theme_bw() +#
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) +#
	scale_shape_manual(values = c(19, 17)) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust= - 0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=16, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14, margin = margin(r = 8)),#
        panel.border = element_blank(), #
		legend.position=c(0.85, 0.9),  #
		legend.text = element_text(size = 10),#
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key= element_blank())
pR
# Dot and error plots for Endemic Prevlanece#
d2 <- readRDS("~/GitHub/bTB-bruc-co-infection-ms/pde/EE_confidence_interval_simulation_results.rds")#
#
df$Prevalence <- c(d2$EE_bTB_single, d2$EE_bTB_co, d2$EE_brucellosis_single, d2$EE_brucellosis_co)#
#df <- df[!is.na(df$Prevalence),]#
#
df$meanprev <- c(rep(mean(df$Prevalence[df$X == "BTB-single"], na.rm = TRUE),#
	length(df$X[df$X == "BTB-single"])), #
	rep(mean(df$Prevalence[df$X == "BTB-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "BTB-co-infection"])),#
	rep(mean(df$Prevalence[df$X == "bruc-single"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-single"])),#
	rep(mean(df$Prevalence[df$X == "bruc-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-co-infection"])) )#
df$sd <- c(rep(sd(df$Prevalence[df$X == "BTB-single"], na.rm = TRUE), #
	length(df$X[df$X == "BTB-single"])), #
	rep(sd(df$Prevalence[df$X == "BTB-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "BTB-co-infection"])),#
	rep(sd(df$Prevalence[df$X == "bruc-single"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-single"])),#
	rep(sd(df$Prevalence[df$X == "bruc-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-co-infection"])) )
pEE <- ggplot(df, aes(x = infection, y = Prevalence, colour = infection, #
	shape = singleco, dodge = singleco)) + #
	geom_point(aes(x = infection, y = meanprev), size = 3, #
		position= position_dodge(width = 0.9)) +#
	geom_errorbar(aes(x = infection, ymin = meanprev - sd, ymax = meanprev + sd),#
		width = 0, position= position_dodge(width = 0.9)) +#
	ylim(0, 0.8) + #
	xlab("") +#
	ylab("Prevalence") + #
	labs(infection = "Populations with")#
	theme_bw() +#
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) +#
	scale_shape_manual(values = c(19, 17), guide = FALSE) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=16, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14, margin = margin (r = 3)),#
        panel.border = element_blank())
pEE <- ggplot(df, aes(x = infection, y = Prevalence, colour = infection, #
	shape = singleco, dodge = singleco)) + #
	geom_point(aes(x = infection, y = meanprev), size = 3, #
		position= position_dodge(width = 0.9)) +#
	geom_errorbar(aes(x = infection, ymin = meanprev - sd, ymax = meanprev + sd),#
		width = 0, position= position_dodge(width = 0.9)) +#
	ylim(0, 0.8) + #
	xlab("") +#
	ylab("Prevalence") + #
	labs(infection = "Populations with") + #
	theme_bw() +#
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) +#
	scale_shape_manual(values = c(19, 17), guide = FALSE) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=16, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14, margin = margin (r = 3)),#
        panel.border = element_blank())
library("grid")#
grid.newpage()#
pushViewport(viewport(layout = grid.layout(2,3)))#
define_region = function(row, col){#
	viewport(layout.pos.row = row, layout.pos.col = col)#
}#
print(pR, vp = define_region(1:2,1))#
print(pEE, vp = define_region(1:2, 2))#
print(phist, vp = define_region(1, 3))#
print(phistEE, vp = define_region(2, 3))
########################################################
########################################################
d <- readRDS("~/GitHub/bTB-bruc-co-infection-ms/pde/Ro_confidence_interval_simulation_results.rds")#
#
# test figure with violin plots#
n = length(d$Ro_brucellosis_single)#
df <- data.frame(Ro = c(d$Ro_bTB_single, d$Ro_bTB_co, #
	d$Ro_brucellosis_single, d$Ro_brucellosis_co),#
	meanRo = c(rep(mean(d$Ro_bTB_single),n), #
		rep(mean(d$Ro_bTB_co),n),#
		rep(mean(d$Ro_brucellosis_single),n), #
		rep(mean(d$Ro_brucellosis_co),n)),#
	sdRo = c(rep(sd(d$Ro_bTB_single),n), #
		rep(sd(d$Ro_bTB_co),n),#
		rep(sd(d$Ro_brucellosis_single),n), #
		rep(sd(d$Ro_brucellosis_co),n)),#
	Prevalence = NA,#
	infection = c(rep("BTB", 2*n), rep("brucellosis", 2*n)) , #
	singleco = rep(c("single", "co-infection", "single",#
		"co-infection"), each = n),#
	X = rep(c("BTB-single", "BTB-co-infection", "bruc-single", #
		"bruc-co-infection"), each = n), #
	Xindex = rep(c(1.1, 1.4, 3.1, 3.4), each = n) )#
df$X <- factor(df$X, levels = c("BTB-single",#
	"BTB-co-infection", "bruc-single", "bruc-co-infection"))#
df$infection <- relevel(as.factor(df$infection), "BTB")#
df$singleco <- relevel(as.factor(df$singleco), "single")#
tapply(df$Ro, df$X, mean)#
# BTB-single  		BTB-co-infection       bruc-single 		bruc-co-infection #
#  3.400162          1.959214          			1.063543 			1.598819 #
#
# change legend label: #
df$singleco <- as.character(df$singleco)#
df$singleco[df$singleco == "single"] <- "one infection"#
df$singleco[df$singleco == "co-infection"] <- "both infections"#
df$singleco <- as.factor(df$singleco)         #
df$singleco <- relevel(as.factor(df$singleco), "one infection")#
#
# Dot and error plots for Ro#
pR <- ggplot(df, aes(x = infection, y = Ro, colour = infection, shape = singleco)) + 	#
	geom_point(aes(x = infection, y = meanRo), size = 3,#
		position= position_dodge(width = 0.9)) +#
	geom_errorbar(aes(x = infection, ymin = meanRo - sdRo, ymax = meanRo + sdRo),#
		width = 0, position= position_dodge(width = 0.9)) +#
	ylim(0.8, 6) +#
	xlab("") +#
	labs(shape = "Populations with") +#
	ylab(expression(R[0])) +#
	theme_bw() +#
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) +#
	scale_shape_manual(values = c(19, 17)) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust= - 0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=16, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14, margin = margin(r = 8)),#
        panel.border = element_blank(), #
		legend.position=c(0.82, 0.9),  #
		legend.text = element_text(size = 10),#
		legend.text = element_text(size = 10),#
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key= element_blank())#
# Dot and error plots for Endemic Prevlanece#
d2 <- readRDS("~/GitHub/bTB-bruc-co-infection-ms/pde/EE_confidence_interval_simulation_results.rds")#
#
df$Prevalence <- c(d2$EE_bTB_single, d2$EE_bTB_co, d2$EE_brucellosis_single, d2$EE_brucellosis_co)#
#df <- df[!is.na(df$Prevalence),]#
#
df$meanprev <- c(rep(mean(df$Prevalence[df$X == "BTB-single"], na.rm = TRUE),#
	length(df$X[df$X == "BTB-single"])), #
	rep(mean(df$Prevalence[df$X == "BTB-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "BTB-co-infection"])),#
	rep(mean(df$Prevalence[df$X == "bruc-single"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-single"])),#
	rep(mean(df$Prevalence[df$X == "bruc-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-co-infection"])) )#
df$sd <- c(rep(sd(df$Prevalence[df$X == "BTB-single"], na.rm = TRUE), #
	length(df$X[df$X == "BTB-single"])), #
	rep(sd(df$Prevalence[df$X == "BTB-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "BTB-co-infection"])),#
	rep(sd(df$Prevalence[df$X == "bruc-single"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-single"])),#
	rep(sd(df$Prevalence[df$X == "bruc-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-co-infection"])) )#
#
pEE <- ggplot(df, aes(x = infection, y = Prevalence, colour = infection, #
	shape = singleco, dodge = singleco)) + #
	geom_point(aes(x = infection, y = meanprev), size = 3, #
		position= position_dodge(width = 0.9)) +#
	geom_errorbar(aes(x = infection, ymin = meanprev - sd, ymax = meanprev + sd),#
		width = 0, position= position_dodge(width = 0.9)) +#
	ylim(0, 0.8) + #
	xlab("") +#
	ylab("Prevalence") + #
	labs(infection = "Populations with") + #
	theme_bw() +#
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) +#
	scale_shape_manual(values = c(19, 17), guide = FALSE) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=16, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14, margin = margin (r = 3)),#
        panel.border = element_blank()) #
# Populations with one infection or both infections#
# Histograms for Ro#
TB <- d$Ro_bTB_co - d$Ro_bTB_single#
bruc <- d$Ro_brucellosis_co - d$Ro_brucellosis_single#
df <- data.frame(Ro = c(TB, bruc), #
	infection = c(rep("BTB", length(TB)), rep("brucellosis", length(bruc))))#
df$infection <- as.factor(df$infection)#
df$infection <- relevel(as.factor(df$infection), "BTB")#
mu <- data.frame(infection = c("TB", "bruc"), r.mean = c(mean(TB), mean(bruc)) )
phist <- ggplot(df, aes(x = Ro, colour = infection, fill = infection)) + #
	geom_histogram(aes(y = ..count..), position = "identity", alpha = 0.5, bins = 30) + #
#	geom_histogram(aes(y = ..density..), position = "identity", alpha = 0.5, bins = 30) + #
	#geom_histogram(position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	scale_fill_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	xlab(expression(paste(Change~"in"~ R[o]))) + #"~with~"co-infection #
	ylab("Frequency") + #
	theme_bw() +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14,  margin = margin(r = 3)),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 5.5), "points"))
phist <- ggplot(df, aes(x = Ro, colour = infection, fill = infection)) + #
	geom_histogram(aes(y = ..count..), position = "identity", alpha = 0.5, bins = 30) + #
#	geom_histogram(aes(y = ..density..), position = "identity", alpha = 0.5, bins = 30) + #
	#geom_histogram(position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	scale_fill_manual(values = c("slateblue3","chartreuse4"), guide = T) + #
	xlab(expression(paste(Change~"in"~ R[o]))) + #"~with~"co-infection #
	ylab("Frequency") + #
	theme_bw() +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14,  margin = margin(r = 3)),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 5.5), "points"))
phist
phist <- ggplot(df, aes(x = Ro, colour = infection, fill = infection)) + #
	geom_histogram(aes(y = ..count..), position = "identity", alpha = 0.5, bins = 30) + #
#	geom_histogram(aes(y = ..density..), position = "identity", alpha = 0.5, bins = 30) + #
	#geom_histogram(position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	scale_fill_manual(values = c("slateblue3","chartreuse4")) + #, guide = F#
	xlab(expression(paste(Change~"in"~ R[o]))) + #"~with~"co-infection #
	ylab("Frequency") + #
	theme_bw() +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14,  margin = margin(r = 3)),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 5.5), "points"))
phist
library("grid")#
grid.newpage()#
pushViewport(viewport(layout = grid.layout(2,3)))#
define_region = function(row, col){#
	viewport(layout.pos.row = row, layout.pos.col = col)#
}#
print(pR, vp = define_region(1:2,1))#
print(pEE, vp = define_region(1:2, 2))#
print(phist, vp = define_region(1, 3))#
print(phistEE, vp = define_region(2, 3))
phist <- ggplot(df, aes(x = Ro, colour = infection, fill = infection)) + #
	geom_histogram(aes(y = ..count..), position = "identity", alpha = 0.5, bins = 30) + #
#	geom_histogram(aes(y = ..density..), position = "identity", alpha = 0.5, bins = 30) + #
	#geom_histogram(position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	scale_fill_manual(values = c("slateblue3","chartreuse4")) + #, guide = F#
	xlab(expression(paste(Change~"in"~ R[o]))) + #"~with~"co-infection #
	ylab("Frequency") + #
	theme_bw() +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14,  margin = margin(r = 3)),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 5.5), "points")#
        legend.position=c(0.82, 0.9),  #
		legend.text = element_text(size = 10),#
		legend.text = element_text(size = 10),#
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key= element_blank(), #
        legend.title = element_blank())
phist <- ggplot(df, aes(x = Ro, colour = infection, fill = infection)) + #
	geom_histogram(aes(y = ..count..), position = "identity", alpha = 0.5, bins = 30) + #
#	geom_histogram(aes(y = ..density..), position = "identity", alpha = 0.5, bins = 30) + #
	#geom_histogram(position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	scale_fill_manual(values = c("slateblue3","chartreuse4")) + #, guide = F#
	xlab(expression(paste(Change~"in"~ R[o]))) + #"~with~"co-infection #
	ylab("Frequency") + #
	theme_bw() +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14,  margin = margin(r = 3)),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 5.5), "points"),#
        legend.position=c(0.82, 0.9),  #
		legend.text = element_text(size = 10),#
		legend.text = element_text(size = 10),#
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key= element_blank(), #
        legend.title = element_blank())
phist
library("grid")#
grid.newpage()#
pushViewport(viewport(layout = grid.layout(2,3)))#
define_region = function(row, col){#
	viewport(layout.pos.row = row, layout.pos.col = col)#
}#
print(pR, vp = define_region(1:2,1))#
print(pEE, vp = define_region(1:2, 2))#
print(phist, vp = define_region(1, 3))#
print(phistEE, vp = define_region(2, 3))
library(grid)
grid.newpage()
grid.draw(
rbind(ggplotGrob(pR), ggplotGrop(pEE), cbind(ggplotGrop(phist), ggplotGrop(phistEE)) )
)
grid.newpage()
grid.draw(
rbind(ggplotGrob(pR), ggplotGrob(pEE), cbind(ggplotGrob(phist), ggplotGrob(phistEE)) )
)
grid.newpage()#
pushViewport(viewport(layout = grid.layout(2,3, respect = TRUE) ))#
define_region = function(row, col){#
	viewport(layout.pos.row = row, layout.pos.col = col)#
}#
print(pR, vp = define_region(1:2,1))#
print(pEE, vp = define_region(1:2, 2))#
print(phist, vp = define_region(1, 3))#
print(phistEE, vp = define_region(2, 3))
dev.off()
pushViewport(viewport(layout = grid.layout(2,3, respect = TRUE) ))#
define_region = function(row, col){#
	viewport(layout.pos.row = row, layout.pos.col = col)#
}#
print(pR, vp = define_region(1:2,1))#
print(pEE, vp = define_region(1:2, 2))#
print(phist, vp = define_region(1, 3))#
print(phistEE, vp = define_region(2, 3))
?gridlayout
?grid.layout
## Demonstration of layout justification#
grid.newpage()#
testlay <- function(just="centre") {#
  pushViewport(viewport(layout=grid.layout(1, 1, widths=unit(1, "inches"),#
                          heights=unit(0.25, "npc"),#
                          just=just)))#
  pushViewport(viewport(layout.pos.col=1, layout.pos.row=1))#
  grid.rect()#
  grid.text(paste(just, collapse="-"))#
  popViewport(2)#
}
phist <- ggplot(df, aes(x = Ro, colour = infection, fill = infection)) + #
#	geom_histogram(aes(y = ..count..), position = "identity", alpha = 0.5, bins = 30) + #
	geom_histogram(aes(y = ..density..), position = "identity", alpha = 0.5, bins = 30) + #
	#geom_histogram(position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	scale_fill_manual(values = c("slateblue3","chartreuse4")) + #, guide = F#
	xlab(expression(paste(Change~"in"~ R[o]))) + #"~with~"co-infection #
	ylab("Frequency") + #
	theme_bw() +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14,  margin = margin(r = 3)),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 5.5), "points"),#
        legend.position=c(0.85, 0.88),  #
		legend.text = element_text(size = 10),#
		legend.text = element_text(size = 10),#
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key= element_blank(), #
        legend.title = element_blank())
phistEE <- ggplot(df, aes(x = Prevalence, colour = infection, fill = infection)) + #
	geom_histogram(aes(y = ..density..), position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	scale_fill_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	xlab("Change in prevalence") + #
	ylab("Frequency") + #
	theme_bw() +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14, margin = margin(r = 3)),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 15), "points"))  #
#
library("grid")#
grid.newpage()#
pushViewport(viewport(layout = grid.layout(2,3, respect = TRUE) ))#
define_region = function(row, col){#
	viewport(layout.pos.row = row, layout.pos.col = col)#
}#
print(pR, vp = define_region(1:2,1))#
print(pEE, vp = define_region(1:2, 2))#
print(phist, vp = define_region(1, 3))#
print(phistEE, vp = define_region(2, 3))
head(df)
# Histograms for Endemic Prevlanece#
TB <-d2$EE_bTB_co[!(d2$remove == "nobruc")] - #
	d2$EE_bTB_single[!(d2$remove == "nobruc")] #
Bruc <- d2$EE_brucellosis_co[!(d2$remove == "noTB")]  - #
	d2$EE_brucellosis_single[!(d2$remove == "noTB")] #
df <- data.frame(Prevalence = c(TB, Bruc), #
	infection = c(rep("BTB", length(d2$EE_bTB_single[!(d2$remove == "nobruc")])), #
	rep("brucellosis", length(d2$EE_brucellosis_single[!(d2$remove == "noTB")]) )))#
df <- df[!is.na(df$Prevalence),]#
df$infection <- as.factor(df$infection)#
df$infection <- relevel(as.factor(df$infection), "BTB")#
phistEE <- ggplot(df, aes(x = Prevalence, colour = infection, fill = infection)) + #
	geom_histogram(aes(y = ..density..), position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	scale_fill_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	xlab("Change in prevalence") + #
	ylab("Frequency") + #
	theme_bw() +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14, margin = margin(r = 3)),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 15), "points"))
head(Df)
head(df)
########################################################
########################################################
# Figure 3- Ro and endemic prevalence figures#
########################################################
########################################################
d <- readRDS("~/GitHub/bTB-bruc-co-infection-ms/pde/Ro_confidence_interval_simulation_results.rds")#
#
# test figure with violin plots#
n = length(d$Ro_brucellosis_single)#
df <- data.frame(Ro = c(d$Ro_bTB_single, d$Ro_bTB_co, #
	d$Ro_brucellosis_single, d$Ro_brucellosis_co),#
	meanRo = c(rep(mean(d$Ro_bTB_single),n), #
		rep(mean(d$Ro_bTB_co),n),#
		rep(mean(d$Ro_brucellosis_single),n), #
		rep(mean(d$Ro_brucellosis_co),n)),#
	sdRo = c(rep(sd(d$Ro_bTB_single),n), #
		rep(sd(d$Ro_bTB_co),n),#
		rep(sd(d$Ro_brucellosis_single),n), #
		rep(sd(d$Ro_brucellosis_co),n)),#
	Prevalence = NA,#
	infection = c(rep("BTB", 2*n), rep("brucellosis", 2*n)) , #
	singleco = rep(c("single", "co-infection", "single",#
		"co-infection"), each = n),#
	X = rep(c("BTB-single", "BTB-co-infection", "bruc-single", #
		"bruc-co-infection"), each = n), #
	Xindex = rep(c(1.1, 1.4, 3.1, 3.4), each = n) )#
df$X <- factor(df$X, levels = c("BTB-single",#
	"BTB-co-infection", "bruc-single", "bruc-co-infection"))#
df$infection <- relevel(as.factor(df$infection), "BTB")#
df$singleco <- relevel(as.factor(df$singleco), "single")#
tapply(df$Ro, df$X, mean)#
# BTB-single  		BTB-co-infection       bruc-single 		bruc-co-infection #
#  3.400162          1.959214          			1.063543 			1.598819 #
#
# change legend label: #
df$singleco <- as.character(df$singleco)#
df$singleco[df$singleco == "single"] <- "one infection"#
df$singleco[df$singleco == "co-infection"] <- "both infections"#
df$singleco <- as.factor(df$singleco)         #
df$singleco <- relevel(as.factor(df$singleco), "one infection")#
#
# Dot and error plots for Ro#
pR <- ggplot(df, aes(x = infection, y = Ro, colour = infection, shape = singleco)) + 	#
	geom_point(aes(x = infection, y = meanRo), size = 3,#
		position= position_dodge(width = 0.9)) +#
	geom_errorbar(aes(x = infection, ymin = meanRo - sdRo, ymax = meanRo + sdRo),#
		width = 0, position= position_dodge(width = 0.9)) +#
	ylim(0.8, 6) +#
	xlab("") +#
	labs(shape = "Populations with") +#
	ylab(expression(R[0])) +#
	theme_bw() +#
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) +#
	scale_shape_manual(values = c(19, 17)) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust= - 0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=16, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14, margin = margin(r = 8)),#
        panel.border = element_blank(), #
		legend.position=c(0.82, 0.9),  #
		legend.text = element_text(size = 10),#
		legend.text = element_text(size = 10),#
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key= element_blank())#
# Dot and error plots for Endemic Prevlanece#
d2 <- readRDS("~/GitHub/bTB-bruc-co-infection-ms/pde/EE_confidence_interval_simulation_results.rds")#
#
df$Prevalence <- c(d2$EE_bTB_single, d2$EE_bTB_co, d2$EE_brucellosis_single, d2$EE_brucellosis_co)#
#df <- df[!is.na(df$Prevalence),]#
#
df$meanprev <- c(rep(mean(df$Prevalence[df$X == "BTB-single"], na.rm = TRUE),#
	length(df$X[df$X == "BTB-single"])), #
	rep(mean(df$Prevalence[df$X == "BTB-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "BTB-co-infection"])),#
	rep(mean(df$Prevalence[df$X == "bruc-single"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-single"])),#
	rep(mean(df$Prevalence[df$X == "bruc-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-co-infection"])) )#
df$sd <- c(rep(sd(df$Prevalence[df$X == "BTB-single"], na.rm = TRUE), #
	length(df$X[df$X == "BTB-single"])), #
	rep(sd(df$Prevalence[df$X == "BTB-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "BTB-co-infection"])),#
	rep(sd(df$Prevalence[df$X == "bruc-single"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-single"])),#
	rep(sd(df$Prevalence[df$X == "bruc-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-co-infection"])) )#
#
pEE <- ggplot(df, aes(x = infection, y = Prevalence, colour = infection, #
	shape = singleco, dodge = singleco)) + #
	geom_point(aes(x = infection, y = meanprev), size = 3, #
		position= position_dodge(width = 0.9)) +#
	geom_errorbar(aes(x = infection, ymin = meanprev - sd, ymax = meanprev + sd),#
		width = 0, position= position_dodge(width = 0.9)) +#
	ylim(0, 0.8) + #
	xlab("") +#
	ylab("Prevalence") + #
	labs(infection = "Populations with") + #
	theme_bw() +#
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) +#
	scale_shape_manual(values = c(19, 17), guide = FALSE) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=16, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14, margin = margin (r = 3)),#
        panel.border = element_blank()) #
# Populations with one infection or both infections#
# Histograms for Ro#
TB <- d$Ro_bTB_co - d$Ro_bTB_single#
bruc <- d$Ro_brucellosis_co - d$Ro_brucellosis_single#
df <- data.frame(Ro = c(TB, bruc), #
	infection = c(rep("BTB", length(TB)), rep("brucellosis", length(bruc))))#
df$infection <- as.factor(df$infection)#
df$infection <- relevel(as.factor(df$infection), "BTB")#
mu <- data.frame(infection = c("TB", "bruc"), r.mean = c(mean(TB), mean(bruc)) )#
#
phist <- ggplot(df, aes(x = Ro, colour = infection, fill = infection)) + #
#	geom_histogram(aes(y = ..count..), position = "identity", alpha = 0.5, bins = 30) + #
	geom_histogram(aes(y = ..density..), position = "identity", alpha = 0.5, bins = 30) + #
	#geom_histogram(position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	scale_fill_manual(values = c("slateblue3","chartreuse4")) + #, guide = F#
	xlab(expression(paste(Change~"in"~ R[o]))) + #"~with~"co-infection #
	ylab("Frequency") + #
	theme_bw() +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14,  margin = margin(r = 3)),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 5.5), "points"),#
        legend.position=c(0.85, 0.88),  #
		legend.text = element_text(size = 10),#
		legend.text = element_text(size = 10),#
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key= element_blank(), #
        legend.title = element_blank())  #
# Histograms for Endemic Prevlanece#
TB <-d2$EE_bTB_co[!(d2$remove == "nobruc")] - #
	d2$EE_bTB_single[!(d2$remove == "nobruc")] #
Bruc <- d2$EE_brucellosis_co[!(d2$remove == "noTB")]  - #
	d2$EE_brucellosis_single[!(d2$remove == "noTB")] #
df <- data.frame(Prevalence = c(TB, Bruc), #
	infection = c(rep("BTB", length(d2$EE_bTB_single[!(d2$remove == "nobruc")])), #
	rep("brucellosis", length(d2$EE_brucellosis_single[!(d2$remove == "noTB")]) )))#
df <- df[!is.na(df$Prevalence),]#
df$infection <- as.factor(df$infection)#
df$infection <- relevel(as.factor(df$infection), "BTB")#
phistEE <- ggplot(df, aes(x = Prevalence, colour = infection, fill = infection)) + #
	geom_histogram(aes(y = ..density..), position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	scale_fill_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	xlab("Change in prevalence") + #
	ylab("Frequency") + #
	theme_bw() +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14, margin = margin(r = 3)),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 15), "points"))  #
#
library("grid")#
grid.newpage()#
pushViewport(viewport(layout = grid.layout(2,3) ))#
define_region = function(row, col){#
	viewport(layout.pos.row = row, layout.pos.col = col)#
}#
print(pR, vp = define_region(1:2,1))#
print(pEE, vp = define_region(1:2, 2))#
print(phist, vp = define_region(1, 3))#
print(phistEE, vp = define_region(2, 3))
head(df)
Dot and error plots for Endemic Prevlanece#
d2 <- readRDS("~/GitHub/bTB-bruc-co-infection-ms/pde/EE_confidence_interval_simulation_results.rds")#
#
df$Prevalence <- c(d2$EE_bTB_single, d2$EE_bTB_co, d2$EE_brucellosis_single, d2$EE_brucellosis_co)#
#df <- df[!is.na(df$Prevalence),]#
#
df$meanprev <- c(rep(mean(df$Prevalence[df$X == "BTB-single"], na.rm = TRUE),#
	length(df$X[df$X == "BTB-single"])), #
	rep(mean(df$Prevalence[df$X == "BTB-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "BTB-co-infection"])),#
	rep(mean(df$Prevalence[df$X == "bruc-single"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-single"])),#
	rep(mean(df$Prevalence[df$X == "bruc-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-co-infection"])) )#
df$sd <- c(rep(sd(df$Prevalence[df$X == "BTB-single"], na.rm = TRUE), #
	length(df$X[df$X == "BTB-single"])), #
	rep(sd(df$Prevalence[df$X == "BTB-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "BTB-co-infection"])),#
	rep(sd(df$Prevalence[df$X == "bruc-single"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-single"])),#
	rep(sd(df$Prevalence[df$X == "bruc-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-co-infection"])) )
head(df)
########################################################
d <- readRDS("~/GitHub/bTB-bruc-co-infection-ms/pde/Ro_confidence_interval_simulation_results.rds")#
#
# test figure with violin plots#
n = length(d$Ro_brucellosis_single)#
df <- data.frame(Ro = c(d$Ro_bTB_single, d$Ro_bTB_co, #
	d$Ro_brucellosis_single, d$Ro_brucellosis_co),#
	meanRo = c(rep(mean(d$Ro_bTB_single),n), #
		rep(mean(d$Ro_bTB_co),n),#
		rep(mean(d$Ro_brucellosis_single),n), #
		rep(mean(d$Ro_brucellosis_co),n)),#
	sdRo = c(rep(sd(d$Ro_bTB_single),n), #
		rep(sd(d$Ro_bTB_co),n),#
		rep(sd(d$Ro_brucellosis_single),n), #
		rep(sd(d$Ro_brucellosis_co),n)),#
	Prevalence = NA,#
	infection = c(rep("BTB", 2*n), rep("brucellosis", 2*n)) , #
	singleco = rep(c("single", "co-infection", "single",#
		"co-infection"), each = n),#
	X = rep(c("BTB-single", "BTB-co-infection", "bruc-single", #
		"bruc-co-infection"), each = n), #
	Xindex = rep(c(1.1, 1.4, 3.1, 3.4), each = n) )#
df$X <- factor(df$X, levels = c("BTB-single",#
	"BTB-co-infection", "bruc-single", "bruc-co-infection"))#
df$infection <- relevel(as.factor(df$infection), "BTB")#
df$singleco <- relevel(as.factor(df$singleco), "single")
# change legend label: #
df$singleco <- as.character(df$singleco)#
df$singleco[df$singleco == "single"] <- "one infection"#
df$singleco[df$singleco == "co-infection"] <- "both infections"#
df$singleco <- as.factor(df$singleco)         #
df$singleco <- relevel(as.factor(df$singleco), "one infection")
head(df)
# Dot and error plots for Endemic Prevlanece#
d2 <- readRDS("~/GitHub/bTB-bruc-co-infection-ms/pde/EE_confidence_interval_simulation_results.rds")#
#
df$Prevalence <- c(d2$EE_bTB_single, d2$EE_bTB_co, d2$EE_brucellosis_single, d2$EE_brucellosis_co)
summary(df)
df$meanprev <- c(rep(mean(df$Prevalence[df$X == "BTB-single"], na.rm = TRUE),#
	length(df$X[df$X == "BTB-single"])), #
	rep(mean(df$Prevalence[df$X == "BTB-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "BTB-co-infection"])),#
	rep(mean(df$Prevalence[df$X == "bruc-single"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-single"])),#
	rep(mean(df$Prevalence[df$X == "bruc-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-co-infection"])) )#
df$sd <- c(rep(sd(df$Prevalence[df$X == "BTB-single"], na.rm = TRUE), #
	length(df$X[df$X == "BTB-single"])), #
	rep(sd(df$Prevalence[df$X == "BTB-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "BTB-co-infection"])),#
	rep(sd(df$Prevalence[df$X == "bruc-single"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-single"])),#
	rep(sd(df$Prevalence[df$X == "bruc-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-co-infection"])) )
summary(df)
# Histograms for Ro#
TB <- d$Ro_bTB_co - d$Ro_bTB_single#
bruc <- d$Ro_brucellosis_co - d$Ro_brucellosis_single
summary(TB)
summary(bruc)
# Histograms for Ro#
TB <- d$Ro_bTB_co - d$Ro_bTB_single#
bruc <- d$Ro_brucellosis_co - d$Ro_brucellosis_single#
df <- data.frame(Ro = c(TB, bruc), #
	infection = c(rep("BTB", length(TB)), rep("brucellosis", length(bruc))))#
df$infection <- as.factor(df$infection)#
df$infection <- relevel(as.factor(df$infection), "BTB")
head(df)
mu <- data.frame(infection = c("TB", "bruc"), r.mean = c(mean(TB), mean(bruc)) )
# Histograms for Endemic Prevlanece#
TB <-d2$EE_bTB_co - d2$EE_bTB_single #
Bruc <- d2$EE_brucellosis_co - d2$EE_brucellosis_single#
df <- data.frame(Prevalence = c(TB, Bruc), #
	infection = c(rep("BTB", length(d2$EE_bTB_single)), #
	rep("brucellosis", length(d2$EE_brucellosis_single) )))
head(df)
summary(df)
df <- df[!is.na(df$Prevalence),]#
df$infection <- as.factor(df$infection)#
df$infection <- relevel(as.factor(df$infection), "BTB")
phistEE <- ggplot(df, aes(x = Prevalence, colour = infection, fill = infection)) + #
	geom_histogram(aes(y = ..density..), position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	scale_fill_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	xlab("Change in prevalence") + #
	ylab("Frequency") + #
	theme_bw() +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14, margin = margin(r = 3)),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 15), "points"))
library("grid")#
grid.newpage()#
pushViewport(viewport(layout = grid.layout(2,3) ))#
define_region = function(row, col){#
	viewport(layout.pos.row = row, layout.pos.col = col)#
}#
print(pR, vp = define_region(1:2,1))#
print(pEE, vp = define_region(1:2, 2))#
print(phist, vp = define_region(1, 3))#
print(phistEE, vp = define_region(2, 3))
?legend.key.size
phist
phist <- ggplot(df, aes(x = Ro, colour = infection, fill = infection)) + #
#	geom_histogram(aes(y = ..count..), position = "identity", alpha = 0.5, bins = 30) + #
	geom_histogram(aes(y = ..density..), position = "identity", alpha = 0.5, bins = 30) + #
	#geom_histogram(position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4")) + # guide = F#
	scale_fill_manual(values = c("slateblue3","chartreuse4")) + #, guide = F#
	xlab(expression(paste(Change~"in"~ R[o]))) + #"~with~"co-infection #
	ylab("Frequency") + #
	theme_bw() +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14,  margin = margin(r = 3)),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 5.5), "points"),#
        legend.position=c(0.85, 0.86),  #
		legend.text = element_text(size = 9),#
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key= element_blank(), #
        legend.title = element_blank())
phist
########################################################
########################################################
# Figure 3- Ro and endemic prevalence figures#
########################################################
########################################################
d <- readRDS("~/GitHub/bTB-bruc-co-infection-ms/pde/Ro_confidence_interval_simulation_results.rds")#
#
# test figure with violin plots#
n = length(d$Ro_brucellosis_single)#
df <- data.frame(Ro = c(d$Ro_bTB_single, d$Ro_bTB_co, #
	d$Ro_brucellosis_single, d$Ro_brucellosis_co),#
	meanRo = c(rep(mean(d$Ro_bTB_single),n), #
		rep(mean(d$Ro_bTB_co),n),#
		rep(mean(d$Ro_brucellosis_single),n), #
		rep(mean(d$Ro_brucellosis_co),n)),#
	sdRo = c(rep(sd(d$Ro_bTB_single),n), #
		rep(sd(d$Ro_bTB_co),n),#
		rep(sd(d$Ro_brucellosis_single),n), #
		rep(sd(d$Ro_brucellosis_co),n)),#
	Prevalence = NA,#
	infection = c(rep("BTB", 2*n), rep("brucellosis", 2*n)) , #
	singleco = rep(c("single", "co-infection", "single",#
		"co-infection"), each = n),#
	X = rep(c("BTB-single", "BTB-co-infection", "bruc-single", #
		"bruc-co-infection"), each = n), #
	Xindex = rep(c(1.1, 1.4, 3.1, 3.4), each = n) )#
df$X <- factor(df$X, levels = c("BTB-single",#
	"BTB-co-infection", "bruc-single", "bruc-co-infection"))#
df$infection <- relevel(as.factor(df$infection), "BTB")#
df$singleco <- relevel(as.factor(df$singleco), "single")#
tapply(df$Ro, df$X, mean)#
# BTB-single  		BTB-co-infection       bruc-single 		bruc-co-infection #
#  3.400162          1.959214          			1.063543 			1.598819 #
#
# change legend label: #
df$singleco <- as.character(df$singleco)#
df$singleco[df$singleco == "single"] <- "one infection"#
df$singleco[df$singleco == "co-infection"] <- "both infections"#
df$singleco <- as.factor(df$singleco)         #
df$singleco <- relevel(as.factor(df$singleco), "one infection")#
#
# Dot and error plots for Ro#
pR <- ggplot(df, aes(x = infection, y = Ro, colour = infection, shape = singleco)) + 	#
	geom_point(aes(x = infection, y = meanRo), size = 3,#
		position= position_dodge(width = 0.9)) +#
	geom_errorbar(aes(x = infection, ymin = meanRo - sdRo, ymax = meanRo + sdRo),#
		width = 0, position= position_dodge(width = 0.9)) +#
	ylim(0.8, 6) +#
	xlab("") +#
	labs(shape = "Populations with") +#
	ylab(expression(R[0])) +#
	theme_bw() +#
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) +#
	scale_shape_manual(values = c(19, 17)) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust= - 0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=16, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14, margin = margin(r = 8)),#
        panel.border = element_blank(), #
		legend.position=c(0.82, 0.9),  #
		legend.text = element_text(size = 10),#
		legend.text = element_text(size = 10),#
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key= element_blank())#
# Dot and error plots for Endemic Prevlanece#
d2 <- readRDS("~/GitHub/bTB-bruc-co-infection-ms/pde/EE_confidence_interval_simulation_results.rds")#
#
df$Prevalence <- c(d2$EE_bTB_single, d2$EE_bTB_co, d2$EE_brucellosis_single, d2$EE_brucellosis_co)#
#
df$meanprev <- c(rep(mean(df$Prevalence[df$X == "BTB-single"], na.rm = TRUE),#
	length(df$X[df$X == "BTB-single"])), #
	rep(mean(df$Prevalence[df$X == "BTB-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "BTB-co-infection"])),#
	rep(mean(df$Prevalence[df$X == "bruc-single"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-single"])),#
	rep(mean(df$Prevalence[df$X == "bruc-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-co-infection"])) )#
df$sd <- c(rep(sd(df$Prevalence[df$X == "BTB-single"], na.rm = TRUE), #
	length(df$X[df$X == "BTB-single"])), #
	rep(sd(df$Prevalence[df$X == "BTB-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "BTB-co-infection"])),#
	rep(sd(df$Prevalence[df$X == "bruc-single"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-single"])),#
	rep(sd(df$Prevalence[df$X == "bruc-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-co-infection"])) )#
#
pEE <- ggplot(df, aes(x = infection, y = Prevalence, colour = infection, #
	shape = singleco, dodge = singleco)) + #
	geom_point(aes(x = infection, y = meanprev), size = 3, #
		position= position_dodge(width = 0.9)) +#
	geom_errorbar(aes(x = infection, ymin = meanprev - sd, ymax = meanprev + sd),#
		width = 0, position= position_dodge(width = 0.9)) +#
	ylim(0, 0.8) + #
	xlab("") +#
	ylab("Prevalence") + #
	labs(infection = "Populations with") + #
	theme_bw() +#
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) +#
	scale_shape_manual(values = c(19, 17), guide = FALSE) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=16, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14, margin = margin (r = 3)),#
        panel.border = element_blank()) #
# Populations with one infection or both infections#
# Histograms for Ro#
TB <- d$Ro_bTB_co - d$Ro_bTB_single#
bruc <- d$Ro_brucellosis_co - d$Ro_brucellosis_single#
df <- data.frame(Ro = c(TB, bruc), #
	infection = c(rep("BTB", length(TB)), rep("brucellosis", length(bruc))))#
df$infection <- as.factor(df$infection)#
df$infection <- relevel(as.factor(df$infection), "BTB")#
mu <- data.frame(infection = c("TB", "bruc"), r.mean = c(mean(TB), mean(bruc)) )
getwd()
?legend.key
?theme
phist <- ggplot(df, aes(x = Ro, colour = infection, fill = infection)) + #
#	geom_histogram(aes(y = ..count..), position = "identity", alpha = 0.5, bins = 30) + #
	geom_histogram(aes(y = ..density..), position = "identity", alpha = 0.5, bins = 30) + #
	#geom_histogram(position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4")) + # guide = F#
	scale_fill_manual(values = c("slateblue3","chartreuse4")) + #, guide = F#
	xlab(expression(paste(Change~"in"~ R[o]))) + #"~with~"co-infection #
	ylab("Frequency") + #
	theme_bw() +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14,  margin = margin(r = 3)),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 5.5), "points"),#
        legend.position=c(0.85, 0.86),  #
		legend.text = element_text(size = 9),#
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key.size = unit(2.5, "cm")#
        #legend.key= element_blank(), #
        legend.title = element_blank())
phist <- ggplot(df, aes(x = Ro, colour = infection, fill = infection)) + #
#	geom_histogram(aes(y = ..count..), position = "identity", alpha = 0.5, bins = 30) + #
	geom_histogram(aes(y = ..density..), position = "identity", alpha = 0.5, bins = 30) + #
	#geom_histogram(position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4")) + # guide = F#
	scale_fill_manual(values = c("slateblue3","chartreuse4")) + #, guide = F#
	xlab(expression(paste(Change~"in"~ R[o]))) + #"~with~"co-infection #
	ylab("Frequency") + #
	theme_bw() +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14,  margin = margin(r = 3)),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 5.5), "points"),#
        legend.position=c(0.85, 0.86),  #
		legend.text = element_text(size = 9),#
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key.size = unit(2.5, "cm"),#
        #legend.key= element_blank(), #
        legend.title = element_blank())
phist
phist <- ggplot(df, aes(x = Ro, colour = infection, fill = infection)) + #
#	geom_histogram(aes(y = ..count..), position = "identity", alpha = 0.5, bins = 30) + #
	geom_histogram(aes(y = ..density..), position = "identity", alpha = 0.5, bins = 30) + #
	#geom_histogram(position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4")) + # guide = F#
	scale_fill_manual(values = c("slateblue3","chartreuse4")) + #, guide = F#
	xlab(expression(paste(Change~"in"~ R[o]))) + #"~with~"co-infection #
	ylab("Frequency") + #
	theme_bw() +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14,  margin = margin(r = 3)),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 5.5), "points"),#
        legend.position=c(0.85, 0.86),  #
		legend.text = element_text(size = 9),#
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key.size = unit(0.5, "cm"),#
        #legend.key= element_blank(), #
        legend.title = element_blank())
phist
# Histograms for Endemic Prevlanece#
TB <-d2$EE_bTB_co - d2$EE_bTB_single #
Bruc <- d2$EE_brucellosis_co - d2$EE_brucellosis_single#
df <- data.frame(Prevalence = c(TB, Bruc), #
	infection = c(rep("BTB", length(d2$EE_bTB_single)), #
	rep("brucellosis", length(d2$EE_brucellosis_single) )))#
#
#TB <-d2$EE_bTB_co[!(d2$remove == "nobruc")] - #
#	d2$EE_bTB_single[!(d2$remove == "nobruc")] #
#Bruc <- d2$EE_brucellosis_co[!(d2$remove == "noTB")]  - #
#	d2$EE_brucellosis_single[!(d2$remove == "noTB")] #
#df <- data.frame(Prevalence = c(TB, Bruc), #
#	infection = c(rep("BTB", length(d2$EE_bTB_single[!(d2$remove == "nobruc")])), #
#	rep("brucellosis", length(d2$EE_brucellosis_single[!(d2$remove == "noTB")]) )))#
df <- df[!is.na(df$Prevalence),]#
df$infection <- as.factor(df$infection)#
df$infection <- relevel(as.factor(df$infection), "BTB")#
phistEE <- ggplot(df, aes(x = Prevalence, colour = infection, fill = infection)) + #
	geom_histogram(aes(y = ..density..), position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	scale_fill_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	xlab("Change in prevalence") + #
	ylab("Frequency") + #
	theme_bw() +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14, margin = margin(r = 3)),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 15), "points"))
phistEE
phistEE + xlim(-0.6, 0.6)
########################################################
########################################################
# Figure 3- Ro and endemic prevalence figures#
########################################################
########################################################
d <- readRDS("~/GitHub/bTB-bruc-co-infection-ms/pde/Ro_confidence_interval_simulation_results.rds")#
#
# test figure with violin plots#
n = length(d$Ro_brucellosis_single)#
df <- data.frame(Ro = c(d$Ro_bTB_single, d$Ro_bTB_co, #
	d$Ro_brucellosis_single, d$Ro_brucellosis_co),#
	meanRo = c(rep(mean(d$Ro_bTB_single),n), #
		rep(mean(d$Ro_bTB_co),n),#
		rep(mean(d$Ro_brucellosis_single),n), #
		rep(mean(d$Ro_brucellosis_co),n)),#
	sdRo = c(rep(sd(d$Ro_bTB_single),n), #
		rep(sd(d$Ro_bTB_co),n),#
		rep(sd(d$Ro_brucellosis_single),n), #
		rep(sd(d$Ro_brucellosis_co),n)),#
	Prevalence = NA,#
	infection = c(rep("BTB", 2*n), rep("brucellosis", 2*n)) , #
	singleco = rep(c("single", "co-infection", "single",#
		"co-infection"), each = n),#
	X = rep(c("BTB-single", "BTB-co-infection", "bruc-single", #
		"bruc-co-infection"), each = n), #
	Xindex = rep(c(1.1, 1.4, 3.1, 3.4), each = n) )#
df$X <- factor(df$X, levels = c("BTB-single",#
	"BTB-co-infection", "bruc-single", "bruc-co-infection"))#
df$infection <- relevel(as.factor(df$infection), "BTB")#
df$singleco <- relevel(as.factor(df$singleco), "single")#
tapply(df$Ro, df$X, mean)#
# BTB-single  		BTB-co-infection       bruc-single 		bruc-co-infection #
#  3.400162          1.959214          			1.063543 			1.598819 #
#
# change legend label: #
df$singleco <- as.character(df$singleco)#
df$singleco[df$singleco == "single"] <- "one infection"#
df$singleco[df$singleco == "co-infection"] <- "both infections"#
df$singleco <- as.factor(df$singleco)         #
df$singleco <- relevel(as.factor(df$singleco), "one infection")#
#
# Dot and error plots for Ro#
pR <- ggplot(df, aes(x = infection, y = Ro, colour = infection, shape = singleco)) + 	#
	geom_point(aes(x = infection, y = meanRo), size = 3,#
		position= position_dodge(width = 0.9)) +#
	geom_errorbar(aes(x = infection, ymin = meanRo - sdRo, ymax = meanRo + sdRo),#
		width = 0, position= position_dodge(width = 0.9)) +#
	ylim(0.8, 6) +#
	xlab("") +#
	labs(shape = "Populations with") +#
	ylab(expression(R[0])) +#
	theme_bw() +#
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) +#
	scale_shape_manual(values = c(19, 17)) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust= - 0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=16, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14, margin = margin(r = 8)),#
        panel.border = element_blank(), #
		legend.position=c(0.82, 0.9),  #
		legend.text = element_text(size = 10),#
		legend.text = element_text(size = 10),#
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key= element_blank())#
# Dot and error plots for Endemic Prevlanece#
d2 <- readRDS("~/GitHub/bTB-bruc-co-infection-ms/pde/EE_confidence_interval_simulation_results.rds")#
#
df$Prevalence <- c(d2$EE_bTB_single, d2$EE_bTB_co, d2$EE_brucellosis_single, d2$EE_brucellosis_co)#
#
df$meanprev <- c(rep(mean(df$Prevalence[df$X == "BTB-single"], na.rm = TRUE),#
	length(df$X[df$X == "BTB-single"])), #
	rep(mean(df$Prevalence[df$X == "BTB-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "BTB-co-infection"])),#
	rep(mean(df$Prevalence[df$X == "bruc-single"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-single"])),#
	rep(mean(df$Prevalence[df$X == "bruc-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-co-infection"])) )#
df$sd <- c(rep(sd(df$Prevalence[df$X == "BTB-single"], na.rm = TRUE), #
	length(df$X[df$X == "BTB-single"])), #
	rep(sd(df$Prevalence[df$X == "BTB-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "BTB-co-infection"])),#
	rep(sd(df$Prevalence[df$X == "bruc-single"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-single"])),#
	rep(sd(df$Prevalence[df$X == "bruc-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-co-infection"])) )#
#
pEE <- ggplot(df, aes(x = infection, y = Prevalence, colour = infection, #
	shape = singleco, dodge = singleco)) + #
	geom_point(aes(x = infection, y = meanprev), size = 3, #
		position= position_dodge(width = 0.9)) +#
	geom_errorbar(aes(x = infection, ymin = meanprev - sd, ymax = meanprev + sd),#
		width = 0, position= position_dodge(width = 0.9)) +#
	ylim(0, 0.8) + #
	xlab("") +#
	ylab("Prevalence") + #
	labs(infection = "Populations with") + #
	theme_bw() +#
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) +#
	scale_shape_manual(values = c(19, 17), guide = FALSE) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=16, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14, margin = margin (r = 3)),#
        panel.border = element_blank()) #
# Populations with one infection or both infections#
# Histograms for Ro#
TB <- d$Ro_bTB_co - d$Ro_bTB_single#
bruc <- d$Ro_brucellosis_co - d$Ro_brucellosis_single#
df <- data.frame(Ro = c(TB, bruc), #
	infection = c(rep("BTB", length(TB)), rep("brucellosis", length(bruc))))#
df$infection <- as.factor(df$infection)#
df$infection <- relevel(as.factor(df$infection), "BTB")#
mu <- data.frame(infection = c("TB", "bruc"), r.mean = c(mean(TB), mean(bruc)) )#
#
phist <- ggplot(df, aes(x = Ro, colour = infection, fill = infection)) + #
	geom_histogram(aes(y = ..count..), position = "identity", alpha = 0.5, bins = 30) + #
#	geom_histogram(aes(y = ..density..), position = "identity", alpha = 0.5, bins = 30) + #
	#geom_histogram(position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4")) + # guide = F#
	scale_fill_manual(values = c("slateblue3","chartreuse4")) + #, guide = F#
	xlab(expression(paste(Change~"in"~ R[o]))) + #"~with~"co-infection #
	ylab("Frequency") + #
	theme_bw() +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14,  margin = margin(r = 3)),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 5.5), "points"),#
        legend.position=c(0.85, 0.86),  #
		legend.text = element_text(size = 9),#
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key.size = unit(0.5, "cm"),#
        #legend.key= element_blank(), #
        legend.title = element_blank())  #
# Histograms for Endemic Prevlanece#
TB <-d2$EE_bTB_co - d2$EE_bTB_single #
Bruc <- d2$EE_brucellosis_co - d2$EE_brucellosis_single#
df <- data.frame(Prevalence = c(TB, Bruc), #
	infection = c(rep("BTB", length(d2$EE_bTB_single)), #
	rep("brucellosis", length(d2$EE_brucellosis_single) )))#
#
#TB <-d2$EE_bTB_co[!(d2$remove == "nobruc")] - #
#	d2$EE_bTB_single[!(d2$remove == "nobruc")] #
#Bruc <- d2$EE_brucellosis_co[!(d2$remove == "noTB")]  - #
#	d2$EE_brucellosis_single[!(d2$remove == "noTB")] #
#df <- data.frame(Prevalence = c(TB, Bruc), #
#	infection = c(rep("BTB", length(d2$EE_bTB_single[!(d2$remove == "nobruc")])), #
#	rep("brucellosis", length(d2$EE_brucellosis_single[!(d2$remove == "noTB")]) )))#
df <- df[!is.na(df$Prevalence),]#
df$infection <- as.factor(df$infection)#
df$infection <- relevel(as.factor(df$infection), "BTB")#
phistEE <- ggplot(df, aes(x = Prevalence, colour = infection, fill = infection)) + #
	geom_histogram(aes(y = ..count..), position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	scale_fill_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	xlab("Change in prevalence") + #
	ylab("Frequency") + #
	theme_bw() +#
	xlim(-0.6, 0.6) + #
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14, margin = margin(r = 3)),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 15), "points"))
library("grid")#
grid.newpage()#
pushViewport(viewport(layout = grid.layout(2,3) ))#
define_region = function(row, col){#
	viewport(layout.pos.row = row, layout.pos.col = col)#
}#
print(pR, vp = define_region(1:2,1))#
print(pEE, vp = define_region(1:2, 2))#
print(phist, vp = define_region(1, 3))#
print(phistEE + coord_fixed(ratio = ), vp = define_region(2, 3))
library("grid")#
grid.newpage()#
pushViewport(viewport(layout = grid.layout(2,3) ))#
define_region = function(row, col){#
	viewport(layout.pos.row = row, layout.pos.col = col)#
}#
print(pR, vp = define_region(1:2,1))#
print(pEE, vp = define_region(1:2, 2))#
print(phist, vp = define_region(1, 3))#
print(phistEE, vp = define_region(2, 3))
########################################################
########################################################
# Figure 3- Ro and endemic prevalence figures#
########################################################
########################################################
d <- readRDS("~/GitHub/bTB-bruc-co-infection-ms/pde/Ro_confidence_interval_simulation_results.rds")#
#
# test figure with violin plots#
n = length(d$Ro_brucellosis_single)#
df <- data.frame(Ro = c(d$Ro_bTB_single, d$Ro_bTB_co, #
	d$Ro_brucellosis_single, d$Ro_brucellosis_co),#
	meanRo = c(rep(mean(d$Ro_bTB_single),n), #
		rep(mean(d$Ro_bTB_co),n),#
		rep(mean(d$Ro_brucellosis_single),n), #
		rep(mean(d$Ro_brucellosis_co),n)),#
	sdRo = c(rep(sd(d$Ro_bTB_single),n), #
		rep(sd(d$Ro_bTB_co),n),#
		rep(sd(d$Ro_brucellosis_single),n), #
		rep(sd(d$Ro_brucellosis_co),n)),#
	Prevalence = NA,#
	infection = c(rep("BTB", 2*n), rep("brucellosis", 2*n)) , #
	singleco = rep(c("single", "co-infection", "single",#
		"co-infection"), each = n),#
	X = rep(c("BTB-single", "BTB-co-infection", "bruc-single", #
		"bruc-co-infection"), each = n), #
	Xindex = rep(c(1.1, 1.4, 3.1, 3.4), each = n) )#
df$X <- factor(df$X, levels = c("BTB-single",#
	"BTB-co-infection", "bruc-single", "bruc-co-infection"))#
df$infection <- relevel(as.factor(df$infection), "BTB")#
df$singleco <- relevel(as.factor(df$singleco), "single")#
tapply(df$Ro, df$X, mean)#
# BTB-single  		BTB-co-infection       bruc-single 		bruc-co-infection #
#  3.400162          1.959214          			1.063543 			1.598819 #
#
# change legend label: #
df$singleco <- as.character(df$singleco)#
df$singleco[df$singleco == "single"] <- "one infection"#
df$singleco[df$singleco == "co-infection"] <- "both infections"#
df$singleco <- as.factor(df$singleco)         #
df$singleco <- relevel(as.factor(df$singleco), "one infection")#
#
# Dot and error plots for Ro#
pR <- ggplot(df, aes(x = infection, y = Ro, colour = infection, shape = singleco)) + 	#
	geom_point(aes(x = infection, y = meanRo), size = 3,#
		position= position_dodge(width = 0.9)) +#
	geom_errorbar(aes(x = infection, ymin = meanRo - sdRo, ymax = meanRo + sdRo),#
		width = 0, position= position_dodge(width = 0.9)) +#
	ylim(0.8, 6) +#
	xlab("") +#
	labs(shape = "Populations with") +#
	ylab(expression(R[0])) +#
	theme_bw() +#
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) +#
	scale_shape_manual(values = c(19, 17)) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust= - 0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=16, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14, margin = margin(r = 8)),#
        panel.border = element_blank(), #
		legend.position=c(0.82, 0.9),  #
		legend.text = element_text(size = 10),#
		legend.text = element_text(size = 10),#
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key= element_blank())#
# Dot and error plots for Endemic Prevlanece#
d2 <- readRDS("~/GitHub/bTB-bruc-co-infection-ms/pde/EE_confidence_interval_simulation_results.rds")#
#
df$Prevalence <- c(d2$EE_bTB_single, d2$EE_bTB_co, d2$EE_brucellosis_single, d2$EE_brucellosis_co)#
#
df$meanprev <- c(rep(mean(df$Prevalence[df$X == "BTB-single"], na.rm = TRUE),#
	length(df$X[df$X == "BTB-single"])), #
	rep(mean(df$Prevalence[df$X == "BTB-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "BTB-co-infection"])),#
	rep(mean(df$Prevalence[df$X == "bruc-single"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-single"])),#
	rep(mean(df$Prevalence[df$X == "bruc-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-co-infection"])) )#
df$sd <- c(rep(sd(df$Prevalence[df$X == "BTB-single"], na.rm = TRUE), #
	length(df$X[df$X == "BTB-single"])), #
	rep(sd(df$Prevalence[df$X == "BTB-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "BTB-co-infection"])),#
	rep(sd(df$Prevalence[df$X == "bruc-single"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-single"])),#
	rep(sd(df$Prevalence[df$X == "bruc-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-co-infection"])) )#
#
pEE <- ggplot(df, aes(x = infection, y = Prevalence, colour = infection, #
	shape = singleco, dodge = singleco)) + #
	geom_point(aes(x = infection, y = meanprev), size = 3, #
		position= position_dodge(width = 0.9)) +#
	geom_errorbar(aes(x = infection, ymin = meanprev - sd, ymax = meanprev + sd),#
		width = 0, position= position_dodge(width = 0.9)) +#
	ylim(0, 0.8) + #
	xlab("") +#
	ylab("Prevalence") + #
	labs(infection = "Populations with") + #
	theme_bw() +#
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) +#
	scale_shape_manual(values = c(19, 17), guide = FALSE) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=16, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14, margin = margin (r = 3)),#
        panel.border = element_blank()) #
# Populations with one infection or both infections#
# Histograms for Ro#
TB <- d$Ro_bTB_co - d$Ro_bTB_single#
bruc <- d$Ro_brucellosis_co - d$Ro_brucellosis_single#
df <- data.frame(Ro = c(TB, bruc), #
	infection = c(rep("BTB", length(TB)), rep("brucellosis", length(bruc))))#
df$infection <- as.factor(df$infection)#
df$infection <- relevel(as.factor(df$infection), "BTB")#
mu <- data.frame(infection = c("TB", "bruc"), r.mean = c(mean(TB), mean(bruc)) )#
#
phist <- ggplot(df, aes(x = Ro, colour = infection, fill = infection)) + #
	geom_histogram(aes(y = ..count..), position = "identity", alpha = 0.5, bins = 30) + #
#	geom_histogram(aes(y = ..density..), position = "identity", alpha = 0.5, bins = 30) + #
	#geom_histogram(position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4")) + # guide = F#
	scale_fill_manual(values = c("slateblue3","chartreuse4")) + #, guide = F#
	xlab(expression(paste(Change~"in"~ R[o]))) + #"~with~"co-infection #
	ylab("Frequency") + #
	theme_bw() +#
	xlim(-5, 5) + #
	ylim(0, 250) + #
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14,  margin = margin(r = 3)),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 5.5), "points"),#
        legend.position=c(0.85, 0.86),  #
		legend.text = element_text(size = 9),#
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key.size = unit(0.5, "cm"),#
        #legend.key= element_blank(), #
        legend.title = element_blank())  #
# Histograms for Endemic Prevlanece#
TB <-d2$EE_bTB_co - d2$EE_bTB_single #
Bruc <- d2$EE_brucellosis_co - d2$EE_brucellosis_single#
df <- data.frame(Prevalence = c(TB, Bruc), #
	infection = c(rep("BTB", length(d2$EE_bTB_single)), #
	rep("brucellosis", length(d2$EE_brucellosis_single) )))#
#
#TB <-d2$EE_bTB_co[!(d2$remove == "nobruc")] - #
#	d2$EE_bTB_single[!(d2$remove == "nobruc")] #
#Bruc <- d2$EE_brucellosis_co[!(d2$remove == "noTB")]  - #
#	d2$EE_brucellosis_single[!(d2$remove == "noTB")] #
#df <- data.frame(Prevalence = c(TB, Bruc), #
#	infection = c(rep("BTB", length(d2$EE_bTB_single[!(d2$remove == "nobruc")])), #
#	rep("brucellosis", length(d2$EE_brucellosis_single[!(d2$remove == "noTB")]) )))#
df <- df[!is.na(df$Prevalence),]#
df$infection <- as.factor(df$infection)#
df$infection <- relevel(as.factor(df$infection), "BTB")#
phistEE <- ggplot(df, aes(x = Prevalence, colour = infection, fill = infection)) + #
	geom_histogram(aes(y = ..count..), position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	scale_fill_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	xlab("Change in prevalence") + #
	ylab("Frequency") + #
	theme_bw() +#
	xlim(-0.6, 0.6) + #
	ylim(0, 250) + #
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14, margin = margin(r = 3)),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 15), "points"))  #
#phistEE #
#
library("grid")#
grid.newpage()#
pushViewport(viewport(layout = grid.layout(2,3) ))#
define_region = function(row, col){#
	viewport(layout.pos.row = row, layout.pos.col = col)#
}#
print(pR, vp = define_region(1:2,1))#
print(pEE, vp = define_region(1:2, 2))#
print(phist, vp = define_region(1, 3))#
print(phistEE, vp = define_region(2, 3))
phist
str(phist)
hist(df$Ro)
########################################################
########################################################
# Figure 3- Ro and endemic prevalence figures#
########################################################
########################################################
d <- readRDS("~/GitHub/bTB-bruc-co-infection-ms/pde/Ro_confidence_interval_simulation_results.rds")#
#
# test figure with violin plots#
n = length(d$Ro_brucellosis_single)#
df <- data.frame(Ro = c(d$Ro_bTB_single, d$Ro_bTB_co, #
	d$Ro_brucellosis_single, d$Ro_brucellosis_co),#
	meanRo = c(rep(mean(d$Ro_bTB_single),n), #
		rep(mean(d$Ro_bTB_co),n),#
		rep(mean(d$Ro_brucellosis_single),n), #
		rep(mean(d$Ro_brucellosis_co),n)),#
	sdRo = c(rep(sd(d$Ro_bTB_single),n), #
		rep(sd(d$Ro_bTB_co),n),#
		rep(sd(d$Ro_brucellosis_single),n), #
		rep(sd(d$Ro_brucellosis_co),n)),#
	Prevalence = NA,#
	infection = c(rep("BTB", 2*n), rep("brucellosis", 2*n)) , #
	singleco = rep(c("single", "co-infection", "single",#
		"co-infection"), each = n),#
	X = rep(c("BTB-single", "BTB-co-infection", "bruc-single", #
		"bruc-co-infection"), each = n), #
	Xindex = rep(c(1.1, 1.4, 3.1, 3.4), each = n) )#
df$X <- factor(df$X, levels = c("BTB-single",#
	"BTB-co-infection", "bruc-single", "bruc-co-infection"))#
df$infection <- relevel(as.factor(df$infection), "BTB")#
df$singleco <- relevel(as.factor(df$singleco), "single")#
tapply(df$Ro, df$X, mean)#
# BTB-single  		BTB-co-infection       bruc-single 		bruc-co-infection #
#  3.400162          1.959214          			1.063543 			1.598819 #
#
# change legend label: #
df$singleco <- as.character(df$singleco)#
df$singleco[df$singleco == "single"] <- "one infection"#
df$singleco[df$singleco == "co-infection"] <- "both infections"#
df$singleco <- as.factor(df$singleco)         #
df$singleco <- relevel(as.factor(df$singleco), "one infection")#
#
# Dot and error plots for Ro#
pR <- ggplot(df, aes(x = infection, y = Ro, colour = infection, shape = singleco)) + 	#
	geom_point(aes(x = infection, y = meanRo), size = 3,#
		position= position_dodge(width = 0.9)) +#
	geom_errorbar(aes(x = infection, ymin = meanRo - sdRo, ymax = meanRo + sdRo),#
		width = 0, position= position_dodge(width = 0.9)) +#
	ylim(0.8, 6) +#
	xlab("") +#
	labs(shape = "Populations with") +#
	ylab(expression(R[0])) +#
	theme_bw() +#
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) +#
	scale_shape_manual(values = c(19, 17)) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust= - 0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=16, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14, margin = margin(r = 8)),#
        panel.border = element_blank(), #
		legend.position=c(0.82, 0.9),  #
		legend.text = element_text(size = 10),#
		legend.text = element_text(size = 10),#
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key= element_blank())#
# Dot and error plots for Endemic Prevlanece#
d2 <- readRDS("~/GitHub/bTB-bruc-co-infection-ms/pde/EE_confidence_interval_simulation_results.rds")#
#
df$Prevalence <- c(d2$EE_bTB_single, d2$EE_bTB_co, d2$EE_brucellosis_single, d2$EE_brucellosis_co)#
#
df$meanprev <- c(rep(mean(df$Prevalence[df$X == "BTB-single"], na.rm = TRUE),#
	length(df$X[df$X == "BTB-single"])), #
	rep(mean(df$Prevalence[df$X == "BTB-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "BTB-co-infection"])),#
	rep(mean(df$Prevalence[df$X == "bruc-single"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-single"])),#
	rep(mean(df$Prevalence[df$X == "bruc-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-co-infection"])) )#
df$sd <- c(rep(sd(df$Prevalence[df$X == "BTB-single"], na.rm = TRUE), #
	length(df$X[df$X == "BTB-single"])), #
	rep(sd(df$Prevalence[df$X == "BTB-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "BTB-co-infection"])),#
	rep(sd(df$Prevalence[df$X == "bruc-single"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-single"])),#
	rep(sd(df$Prevalence[df$X == "bruc-co-infection"], na.rm = TRUE), #
	length(df$X[df$X == "bruc-co-infection"])) )#
#
pEE <- ggplot(df, aes(x = infection, y = Prevalence, colour = infection, #
	shape = singleco, dodge = singleco)) + #
	geom_point(aes(x = infection, y = meanprev), size = 3, #
		position= position_dodge(width = 0.9)) +#
	geom_errorbar(aes(x = infection, ymin = meanprev - sd, ymax = meanprev + sd),#
		width = 0, position= position_dodge(width = 0.9)) +#
	ylim(0, 0.8) + #
	xlab("") +#
	ylab("Prevalence") + #
	labs(infection = "Populations with") + #
	theme_bw() +#
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) +#
	scale_shape_manual(values = c(19, 17), guide = FALSE) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=16, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14, margin = margin (r = 3)),#
        panel.border = element_blank()) #
# Populations with one infection or both infections#
# Histograms for Ro#
TB <- d$Ro_bTB_co - d$Ro_bTB_single#
bruc <- d$Ro_brucellosis_co - d$Ro_brucellosis_single#
df <- data.frame(Ro = c(TB, bruc), #
	infection = c(rep("BTB", length(TB)), rep("brucellosis", length(bruc))))#
df$infection <- as.factor(df$infection)#
df$infection <- relevel(as.factor(df$infection), "BTB")#
mu <- data.frame(infection = c("TB", "bruc"), r.mean = c(mean(TB), mean(bruc)) )
hist(df$Ro)
head(df)
df$Ro[df$infection == "BTB"]
hist(df$Ro[df$infection == "BTB",])
hist(df$Ro[df$infection == "BTB"])
hist(df$Ro[df$infection == "BTB"], bins = 30)
hist(df$Ro[df$infection == "BTB"], breaks = 30)
phist <- ggplot(df, aes(x = Ro, colour = infection, fill = infection)) + #
	geom_histogram(aes(y = ..count..), position = "identity", alpha = 0.5, bins = 30) + #
#	geom_histogram(aes(y = ..density..), position = "identity", alpha = 0.5, bins = 30) + #
	#geom_histogram(position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4")) + # guide = F#
	scale_fill_manual(values = c("slateblue3","chartreuse4")) + #, guide = F#
	xlab(expression(paste(Change~"in"~ R[o]))) + #"~with~"co-infection #
	ylab("Frequency") + #
	theme_bw() +#
	xlim(-5, 5) + #
	ylim(0, 250) + #
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14,  margin = margin(r = 3)),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 5.5), "points"),#
        legend.position=c(0.85, 0.86),  #
		legend.text = element_text(size = 9),#
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key.size = unit(0.5, "cm"),#
        #legend.key= element_blank(), #
        legend.title = element_blank())
phist
ggplot(df, aes(x = Ro, colour = infection, fill = infection)) + #
	geom_histogram(aes(y = ..count..), position = "identity", alpha = 0.5, bins = 30) + #
#	geom_histogram(aes(y = ..density..), position = "identity", alpha = 0.5, bins = 30) + #
	#geom_histogram(position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4")) + # guide = F#
	scale_fill_manual(values = c("slateblue3","chartreuse4")) + #, guide = F#
	xlab(expression(paste(Change~"in"~ R[o]))) + #"~with~"co-infection #
	ylab("Frequency") + #
	theme_bw() +#
	#xlim(-5, 5) + #
	ylim(0, 250) + #
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14,  margin = margin(r = 3)),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 5.5), "points"),#
        legend.position=c(0.85, 0.86),  #
		legend.text = element_text(size = 9),#
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key.size = unit(0.5, "cm"),#
        #legend.key= element_blank(), #
        legend.title = element_blank())
ggplot(df, aes(x = Ro, colour = infection, fill = infection)) + #
	geom_histogram(aes(y = ..density..), position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4")) + # guide = F#
	scale_fill_manual(values = c("slateblue3","chartreuse4")) + #, guide = F#
	xlab(expression(paste(Change~"in"~ R[o]))) + #"~with~"co-infection #
	ylab("Frequency") + #
	theme_bw() +#
	#xlim(-5, 5) + #
	ylim(0, 250) + #
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14,  margin = margin(r = 3)),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 5.5), "points"),#
        legend.position=c(0.85, 0.86),  #
		legend.text = element_text(size = 9),#
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key.size = unit(0.5, "cm"),#
        #legend.key= element_blank(), #
        legend.title = element_blank())
phist <- ggplot(df, aes(x = Ro, colour = infection, fill = infection)) + #
	geom_histogram(aes(y = ..count..), position = "identity", alpha = 0.5, bins = 30) + #
#	geom_histogram(aes(y = ..density..), position = "identity", alpha = 0.5, bins = 30) + #
	#geom_histogram(position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4")) + # guide = F#
	scale_fill_manual(values = c("slateblue3","chartreuse4")) + #, guide = F#
	xlab(expression(paste(Change~"in"~ R[o]))) + #"~with~"co-infection #
	ylab("Frequency") + #
	theme_bw() +#
	xlim(-5, 5) + #
	ylim(0, 250) + #
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14,  margin = margin(r = 3)),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 5.5), "points"),#
        legend.position=c(0.85, 0.86),  #
		legend.text = element_text(size = 9),#
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key.size = unit(0.5, "cm"),#
        #legend.key= element_blank(), #
        legend.title = element_blank())
phist
phist <- ggplot(df, aes(x = Ro, colour = infection, fill = infection)) + #
	geom_histogram(aes(y = ..count..), position = "identity", alpha = 0.5, bins = 30) + #
#	geom_histogram(aes(y = ..density..), position = "identity", alpha = 0.5, bins = 30) + #
	#geom_histogram(position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4")) + # guide = F#
	scale_fill_manual(values = c("slateblue3","chartreuse4")) + #, guide = F#
	xlab(expression(paste(Change~"in"~ R[o]))) + #"~with~"co-infection #
	ylab("Frequency") + #
	theme_bw() +#
#	xlim(-5, 5) + #
#	ylim(0, 250) + #
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14,  margin = margin(r = 3)),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 5.5), "points"),#
        legend.position=c(0.85, 0.86),  #
		legend.text = element_text(size = 9),#
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key.size = unit(0.5, "cm"),#
        #legend.key= element_blank(), #
        legend.title = element_blank())
phist
?geom_histogram
ggplot(df, aes(x = Ro, colour = infection, fill = infection)) + #
	geom_histogram(aes(y = ..ndensity..), position = "identity", alpha = 0.5, bins = 30) + #
#	geom_histogram(aes(y = ..density..), position = "identity", alpha = 0.5, bins = 30) + #
	#geom_histogram(position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4")) + # guide = F#
	scale_fill_manual(values = c("slateblue3","chartreuse4")) + #, guide = F#
	xlab(expression(paste(Change~"in"~ R[o]))) + #"~with~"co-infection #
	ylab("Frequency") + #
	theme_bw() +#
#	xlim(-5, 5) + #
#	ylim(0, 250) + #
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14,  margin = margin(r = 3)),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 5.5), "points"),#
        legend.position=c(0.85, 0.86),  #
		legend.text = element_text(size = 9),#
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key.size = unit(0.5, "cm"),#
        #legend.key= element_blank(), #
        legend.title = element_blank())
ggplot(df, aes(x = Ro, colour = infection, fill = infection)) + #
	geom_histogram(aes(y = ..ncount..), position = "identity", alpha = 0.5, bins = 30) + #
#	geom_histogram(aes(y = ..density..), position = "identity", alpha = 0.5, bins = 30) + #
	#geom_histogram(position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4")) + # guide = F#
	scale_fill_manual(values = c("slateblue3","chartreuse4")) + #, guide = F#
	xlab(expression(paste(Change~"in"~ R[o]))) + #"~with~"co-infection #
	ylab("Frequency") + #
	theme_bw() +#
#	xlim(-5, 5) + #
#	ylim(0, 250) + #
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14,  margin = margin(r = 3)),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 5.5), "points"),#
        legend.position=c(0.85, 0.86),  #
		legend.text = element_text(size = 9),#
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key.size = unit(0.5, "cm"),#
        #legend.key= element_blank(), #
        legend.title = element_blank())
ggplot(df, aes(x = Ro, colour = infection, fill = infection)) + #
	geom_histogram(aes(y = ..ncount..), position = "identity", alpha = 0.5, bins = 30) + #
#	geom_histogram(aes(y = ..density..), position = "identity", alpha = 0.5, bins = 30) + #
	#geom_histogram(position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4")) + # guide = F#
	scale_fill_manual(values = c("slateblue3","chartreuse4")) + #, guide = F#
	xlab(expression(paste(Change~"in"~ R[o]))) + #"~with~"co-infection #
	ylab("Frequency") + #
	theme_bw() +#
	xlim(-5, 5) + #
#	ylim(0, 250) + #
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14,  margin = margin(r = 3)),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 5.5), "points"),#
        legend.position=c(0.85, 0.86),  #
		legend.text = element_text(size = 9),#
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key.size = unit(0.5, "cm"),#
        #legend.key= element_blank(), #
        legend.title = element_blank())
phist <- ggplot(df, aes(x = Ro, colour = infection, fill = infection)) + #
	geom_histogram(aes(y = ..ncount..), position = "identity", alpha = 0.5, bins = 30) + #
#	geom_histogram(aes(y = ..density..), position = "identity", alpha = 0.5, bins = 30) + #
	#geom_histogram(position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4")) + # guide = F#
	scale_fill_manual(values = c("slateblue3","chartreuse4")) + #, guide = F#
	xlab(expression(paste(Change~"in"~ R[o]))) + #"~with~"co-infection #
	ylab("Frequency") + #
	theme_bw() +#
	xlim(-5, 5) + #
#	ylim(0, 250) + #
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14,  margin = margin(r = 3)),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 5.5), "points"),#
        legend.position=c(0.85, 0.86),  #
		legend.text = element_text(size = 9),#
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key.size = unit(0.5, "cm"),#
        #legend.key= element_blank(), #
        legend.title = element_blank())
phist <- ggplot(df, aes(x = Ro, colour = infection, fill = infection)) + #
	geom_histogram(aes(y = ..ncount..), position = "identity", alpha = 0.5, bins = 30) + #
#	geom_histogram(aes(y = ..density..), position = "identity", alpha = 0.5, bins = 30) + #
	#geom_histogram(position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4")) + # guide = F#
	scale_fill_manual(values = c("slateblue3","chartreuse4")) + #, guide = F#
	xlab(expression(paste(Change~"in"~ R[o]))) + #"~with~"co-infection #
	ylab("Frequency") + #
	theme_bw() +#
	xlim(-5, 5) + #
#	ylim(0, 250) + #
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.y = element_blank(),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
#        axis.text.y = element_text(size=14,  margin = margin(r = 3)),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 5.5), "points"),#
        legend.position=c(0.85, 0.86),  #
		legend.text = element_text(size = 9),#
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key.size = unit(0.5, "cm"),#
        #legend.key= element_blank(), #
        legend.title = element_blank())
phist
# Histograms for Endemic Prevlanece#
TB <-d2$EE_bTB_co - d2$EE_bTB_single #
Bruc <- d2$EE_brucellosis_co - d2$EE_brucellosis_single#
df <- data.frame(Prevalence = c(TB, Bruc), #
	infection = c(rep("BTB", length(d2$EE_bTB_single)), #
	rep("brucellosis", length(d2$EE_brucellosis_single) )))#
#
#TB <-d2$EE_bTB_co[!(d2$remove == "nobruc")] - #
#	d2$EE_bTB_single[!(d2$remove == "nobruc")] #
#Bruc <- d2$EE_brucellosis_co[!(d2$remove == "noTB")]  - #
#	d2$EE_brucellosis_single[!(d2$remove == "noTB")] #
#df <- data.frame(Prevalence = c(TB, Bruc), #
#	infection = c(rep("BTB", length(d2$EE_bTB_single[!(d2$remove == "nobruc")])), #
#	rep("brucellosis", length(d2$EE_brucellosis_single[!(d2$remove == "noTB")]) )))#
df <- df[!is.na(df$Prevalence),]#
df$infection <- as.factor(df$infection)#
df$infection <- relevel(as.factor(df$infection), "BTB")#
phistEE <- ggplot(df, aes(x = Prevalence, colour = infection, fill = infection)) + #
	geom_histogram(aes(y = ..ncount..), position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	scale_fill_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	xlab("Change in prevalence") + #
	ylab("Frequency") + #
	theme_bw() +#
	xlim(-0.6, 0.6) + #
#	ylim(0, 250) + #
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        #axis.text.y = element_text(size=14, margin = margin(r = 3)),#
        axis.text.y = element_blank(),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 15), "points"))
phistEE
phistEE <- ggplot(df, aes(x = Prevalence, colour = infection, fill = infection)) + #
	geom_histogram(aes(y = ..ncount..), position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	scale_fill_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	xlab("Change in prevalence") + #
	ylab("Frequency") + #
	theme_bw() +#
	xlim(-0.6, 0.6) + #
#	ylim(0, 250) + #
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        axis.text.y = element_text(size=14, margin = margin(r = 3)),#
        #axis.text.y = element_blank(),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 15), "points"))
phistEE
phistEE <- ggplot(df, aes(x = Prevalence, colour = infection, fill = infection)) + #
	geom_histogram(aes(y = ..ncount..), position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	scale_fill_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	xlab("Change in prevalence") + #
	ylab("Frequency") + #
	theme_bw() +#
	xlim(-0.6, 0.6) + #
#	ylim(0, 250) + #
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        #axis.text.y = element_text(size=14, margin = margin(r = 3)),#
        axis.text.y = element_blank(),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 15), "points"))  #
#phistEE #
#
library("grid")#
grid.newpage()#
pushViewport(viewport(layout = grid.layout(2,3) ))#
define_region = function(row, col){#
	viewport(layout.pos.row = row, layout.pos.col = col)#
}#
print(pR, vp = define_region(1:2,1))#
print(pEE, vp = define_region(1:2, 2))#
print(phist, vp = define_region(1, 3))#
print(phistEE, vp = define_region(2, 3))
phistEE <- ggplot(df, aes(x = Prevalence, colour = infection, fill = infection)) + #
	geom_histogram(aes(y = ..ncount..), position = "identity", alpha = 0.5, bins = 30) + #
	scale_colour_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	scale_fill_manual(values = c("slateblue3","chartreuse4"), guide = F) + #
	xlab("Change in prevalence") + #
	ylab("Frequency") + #
	theme_bw() +#
	xlim(-0.6, 0.6) + #
#	ylim(0, 250) + #
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15, margin = margin(t = 9)),#
        axis.title.y = element_text(size=16, vjust= 0.8, margin = margin(r = 8)),#
        axis.text.x = element_text(size=14, vjust=-0.05, margin = margin(t = 7)),#
        #axis.text.y = element_text(size=14, margin = margin(r = 3)),#
        axis.text.y = element_blank(),#
        panel.border = element_blank(), #
        plot.margin = unit(c(5.5, 5.5, 5.5, 5.5), "points"))
library("grid")#
grid.newpage()#
pushViewport(viewport(layout = grid.layout(2,3) ))#
define_region = function(row, col){#
	viewport(layout.pos.row = row, layout.pos.col = col)#
}#
print(pR, vp = define_region(1:2,1))#
print(pEE, vp = define_region(1:2, 2))#
print(phist, vp = define_region(1, 3))#
print(phistEE, vp = define_region(2, 3))
head(df)
d2$remove <- "keep"#
d2$remove[d2$EE_brucellosis_co < 0.0001] <- "nobruc"#
d2$remove[d2$EE_bTB_co < 0.0001] <- "noTB"#
length(d2$remove[d2$remove == "nobruc"])#
length(d2$remove[d2$remove == "noTB"])
length(d2$remove[d2$remove == "noTB" & d2$remove[d2$remove == "nobruc"])
length(d2$remove[d2$remove == "noTB" & d2$remove == "nobruc"])
d2$remove <- "keep"#
d2$remove[d2$EE_brucellosis_single < 0.0001] <- "nobrucsingle"#
d2$remove[d2$EE_brucellosis_single < 0.0001] <- "nobrucco"#
length(d2$remove[d2$remove == "nobrucsingle"])#
length(d2$remove[d2$remove == "nobrucco"])
summary(d2)
table(d2$remove)
d2$remove[d2$EE_brucellosis_single < 0.0001] <- "nobrucsingle"#
d2$remove[d2$EE_brucellosis_co < 0.0001] <- "nobrucco"
d2$remove <- "keep"#
d2$remove[d2$EE_brucellosis_single < 0.0001] <- "nobrucsingle"#
d2$remove[d2$EE_brucellosis_co < 0.0001] <- "nobrucco"
table(d2$remove)
2$removeTB <- "keep"#
d2$removeTB[d2$EE_bTB_single < 0.0001] <- "notbsingle"#
d2$removeTB[d2$EE_bTB_co < 0.0001] <- "notbco"#
length(d2$removeTB[d2$removeTB == "notbsingle"])#
length(d2$removeTB[d2$removeTB == "notbco"])
summary(removeTB)
summary(d2$removeTB)
table(d2$removeTB)
d2$removeTB <- "keep"
table(d2$removeTB)
d2$removeTB[d2$EE_bTB_single < 0.0001] <- "notbsingle"
table(d2$removeTB)
d2$removeTB[d2$EE_bTB_co < 0.0001] <- "notbco"
table(d2$removeTB)
length(d2$remove[d2$remove == "nobrucsingle"])#
length(d2$remove[d2$remove == "nobrucco"])
table(d2$remove, d2$removeTB)
37/1000
d2$remove <- "keep"#
d2$remove[d2$EE_brucellosis_single < 0.0001] <- "nobrucsingle"#
d2$remove[d2$EE_brucellosis_co < 0.0001 & d2$EE_brucellosis_single => 0.0001] <- "nobrucco"#
d2$remove[d2$EE_brucellosis_co < 0.0001 & d2$EE_brucellosis_single < 0.0001] <- "nobruc_single&co"#
length(d2$remove[d2$remove == "nobrucsingle"])  # 37#
length(d2$remove[d2$remove == "nobrucco"]) # 11
table(d2$remove)
d2$remove <- "keep"#
d2$remove[d2$EE_brucellosis_single < 0.0001] <- "nobrucsingle"#
d2$remove[d2$EE_brucellosis_co < 0.0001 & d2$EE_brucellosis_single >= 0.0001] <- "nobrucco"#
d2$remove[d2$EE_brucellosis_co < 0.0001 & d2$EE_brucellosis_single < 0.0001] <- "nobruc_single&co"#
length(d2$remove[d2$remove == "nobrucsingle"])  # 37#
length(d2$remove[d2$remove == "nobrucco"]) # 11#
table(d2$remove)
d2$removeTB <- "keep"#
d2$removeTB[d2$EE_bTB_single < 0.0001] <- "notbsingle"#
d2$removeTB[d2$EE_bTB_co < 0.0001& d2$EE_bTB_single >= 0.0001] <- "notbco"#
d2$removeTB[d2$EE_bTB_co < 0.0001& d2$EE_bTB_single< 0.0001] <- "notbsingle&co"
table(d2$remove, d2$removeTB)
(1000-35)/100
(1000-35)/1000
head(d2)
head(TB)
quantile(TB, c(0.95, 0.975, 0.99))
summary(TB)
quantile(TB[!is.na(TB)], c(0.95, 0.975, 0.99))
quantile(TB[!is.na(TB)], c(0.9, 0.95, 0.975, 0.99))
quantile(TB[!is.na(TB)], c(0.9, 0.95, 0.975, 0.98, 0.985, 0.99))
(44 + 35)/1000
1 - 0.079
########################################################
########################################################
# Figure 4- Levelplots, varying mort and rho for both pathogens#
########################################################
########################################################
epiT <- read.csv("~/GitHub/bTB-bruc-co-infection-ms/pde/epiT.csv")#
epiB <- read.csv("~/GitHub/bTB-bruc-co-infection-ms/pde/epiB.csv")
summary(epiT)
summary(epiB)
head(epiB[epiB$brucprev < 0.01])
head(epiB[epiB$brucprev < 0.01,])
##############################################################
##############################################################
#
##############################################################
##############################################################
#1) Load fixed parameters, model#
##############################################################
##############################################################
rm(list = ls())#
require("deSolve")#
library("plyr")#
library("ggplot2")#
library("lattice") # for levelplots#
library("gridExtra") # layout for lattice#
library("RColorBrewer")#
library("doParallel")#
library("foreach")#
library("deSolve")#
#
setwd("~/GitHub/bTB-bruc-co-infection-ms/pde")#
#setwd("~/Erin/pde")#
#
# parameters#
source('fixed_parameters.R', chdir = TRUE)#
#
# rhs function - model structure#
source('rhs.R', chdir = TRUE)#
# age divisions in rhs function#
agemax <- 20#
agestep <- 0.1#
N <- agemax / agestep#
ages <- seq(1, agemax + 1, by = agestep)[-(N)]#
N == length(ages)#
#
# generate parameters with correct agebins#
f.params <- gen_fixed_params(agemax, agestep,#
    p = p, recovery = FALSE)#
f.params.recov <- gen_fixed_params(agemax, agestep, #
    p = p, recovery = TRUE)#
#
# Functions for plotting (and define indecies based on ages, N): #
source('plotting_functions.R', chdir = TRUE)#
#
# Starting agestructure (Jolles 2007; Caron et al. 2001)#
juv <- rep(0.137 / length(ages[ages < 2]), length(ages[ages < 2]))#
sa <- rep(0.368 / length(ages[ages >= 2 & ages < 6]), #
    length(ages[ages >= 2 & ages < 6]))#
a <- rep(0.185 / length(ages[ages >= 6 & ages < 9]), #
    length(ages[ages >= 6 & ages < 9]))#
ma <- rep(0.235 / length(ages[ages >= 9 & ages < 14]), #
    length(ages[ages >= 9 & ages < 14]))#
sen <- rep(0.075 / length(ages[ages >= 14 ]), length(ages[ages >= 14]))#
#
relage <- c(juv, sa, a, ma, sen); length(relage) == N									#
plot.relage <- c(0.137, rep(0.368/4, 4), rep(0.185/3, 3), #
    rep(0.235/5, 5), rep(0.075/7, 7))#
#
# Define x0, parameter for getEE function, disease free values#
##############################################################
S0 <- 400 * relage; It0 <- 0 * relage; Ib0 <- 0 * relage#
Ic0 <- 0 * relage; R0 <- 0 * relage; Rc0 <- 0 * relage#
times <- seq(1, 300, 1)#
x0 <- c(S0, It0, Ib0, Ic0, R0, Rc0)#
params <- c(f.params, list(gamma = 1/2, betaB = 0, #
	betaT = 0, rhoT = 1, rhoB = 2.1))#
test <- as.data.frame(ode.1D(x0, times, rhs, params, #
	nspec = 6, dimens = N, method = "ode45"))#
x0 <- unname(unlist(test[length(test[,1]), c(2:(length(colnames(test))))]))
set xB#
xstart <- x0#
xstart[min(ib.index)+1 + 3*binsize] <- 1#
xstart[min(ib.index)+1 + 3*binsize] <- 1#
params <- c(f.params, list(gamma = 1/2, betaB = 0.5764065, #
		betaT = 1.3305462/1000, rhoT = 1, rhoB = 2.1))#
test <- as.data.frame(ode.1D(xstart, times, rhs, params, #
	nspec = 6, dimens = N, method = "ode45"))#
xB <- unname(unlist(test[length(test[,1]), c(2:(length(colnames(test))))])) #
plot_raw_numbers(test)#
#
# set xT#
xstart <- x0#
xstart[min(it.index)+1 + 3*binsize] <- 1#
xstart[min(it.index)+1 + 4*binsize] <- 1#
test <- as.data.frame(ode.1D(xstart, times, rhs, params, #
	nspec = 6, dimens = N, method = "ode45"))#
xT <- unname(unlist(test[length(test[,1]), c(2:(length(colnames(test))))])) #
plot_raw_numbers(test)
binsize <- N / agemax
# make sure get ok age-prev#
xtest <- x0#
#
# set xB#
xstart <- x0#
xstart[min(ib.index)+1 + 3*binsize] <- 1#
xstart[min(ib.index)+1 + 3*binsize] <- 1#
params <- c(f.params, list(gamma = 1/2, betaB = 0.5764065, #
		betaT = 1.3305462/1000, rhoT = 1, rhoB = 2.1))#
test <- as.data.frame(ode.1D(xstart, times, rhs, params, #
	nspec = 6, dimens = N, method = "ode45"))#
xB <- unname(unlist(test[length(test[,1]), c(2:(length(colnames(test))))])) #
plot_raw_numbers(test)#
#
# set xT#
xstart <- x0#
xstart[min(it.index)+1 + 3*binsize] <- 1#
xstart[min(it.index)+1 + 4*binsize] <- 1#
test <- as.data.frame(ode.1D(xstart, times, rhs, params, #
	nspec = 6, dimens = N, method = "ode45"))#
xT <- unname(unlist(test[length(test[,1]), c(2:(length(colnames(test))))])) #
plot_raw_numbers(test)
##############################################################
##############################################################
#3) Analyses varying mortality and transmission rates#
##############################################################
##############################################################
#
# Set up dataframe to hold the results#
##############################################################
rhoB_test <- seq(0, 8, length.out = 101)#
rhoT_test <- seq(0, 8, length.out = 101)#
mort_test <- seq(0, 15, length.out = 101) #
#
# Data frame to hold results of changing bruc effects on bTB#
epiTB <- data.frame(#
	rhoT= rep(rhoB_test, length(rhoB_test)), #
	mort = rep(mort_test, each = length(rhoB_test)), #
	bTBprev = NA, brucprev = NA, 	finalN = NA, #
	bTB_inS = NA, bTB_inB = NA, bruc_inS = NA, bruc_inTB = NA)#
#
# Data frame to hold results of changing bTB effects on bruc#
epiBR <- data.frame(#
	rhoB= rep(rhoB_test, length(rhoB_test)), #
	mort = rep(mort_test, each = length(rhoB_test)),#
	bTBprev = NA, brucprev = NA, finalN = NA, #
	bTB_inS = NA, bTB_inB = NA, bruc_inS = NA, bruc_inTB = NA)
epiTB <- epiTB[1,]
head(epiTB)
xB.test <- xB#
xB.test[(min(it.index)+50):(min(it.index)+53)] <- 1#
#
cl <- makeCluster(6)#
registerDoParallel(cl)#
epiT <- foreach(d = iter(epiTB, by = "row"), .combine = rbind, .packages = "deSolve") %dopar% {#
	params.test <- c(f.params, list(gamma = 1/2, betaB = 0.5764065, #
		betaT = 1.3305462/1000, rhoT = d$rhoT, rhoB = 2.1))#
	params.test$muC <- d$mort * params.test$muS#
	params.test$muRC <- d$mort * params.test$muS#
	sol <- as.data.frame(ode.1D(xB.test, times, rhs, params.test, nspec = 6, dimens = N))#
	temp <- get_prevalence(sol)#
	val <- get_EE(params, x0, "beverton-holt")#
#
	data <- data.frame(#
		rhoT = params.test$rhoT,#
		mort = params.test$muC[1]/ params.test$muS[1],#
		bTBprev = temp$prevTB,#
		brucprev = temp$prevB,	#
		finalN = sum(sol[length(sol[,1]), c(2:length(colnames(sol)))]),#
		bTB_inS = temp$prevTinS ,#
		bTB_inB = temp$prevTinB,#
		bruc_inS = temp$prevBinS ,#
		bruc_inTB = temp$prevBinT#
		EE_bTB_single = val[1],  #
		EE_bTB_co = val[2], #
		EE_brucellosis_single = val[3],#
		EE_brucellosis_co = val[4]	#
		)#
}#
stopCluster(cl)#
#
summary(epiT)
cl <- makeCluster(6)#
registerDoParallel(cl)#
epiT <- foreach(d = iter(epiTB, by = "row"), .combine = rbind, .packages = "deSolve") %dopar% {#
	params.test <- c(f.params, list(gamma = 1/2, betaB = 0.5764065, #
		betaT = 1.3305462/1000, rhoT = d$rhoT, rhoB = 2.1))#
	params.test$muC <- d$mort * params.test$muS#
	params.test$muRC <- d$mort * params.test$muS#
	sol <- as.data.frame(ode.1D(xB.test, times, rhs, params.test, nspec = 6, dimens = N))#
	temp <- get_prevalence(sol)#
	val <- get_EE(params, x0, "beverton-holt")#
#
	data <- data.frame(#
		rhoT = params.test$rhoT,#
		mort = params.test$muC[1]/ params.test$muS[1],#
		bTBprev = temp$prevTB,#
		brucprev = temp$prevB,	#
		finalN = sum(sol[length(sol[,1]), c(2:length(colnames(sol)))]),#
		bTB_inS = temp$prevTinS ,#
		bTB_inB = temp$prevTinB,#
		bruc_inS = temp$prevBinS ,#
		bruc_inTB = temp$prevBinT,#
		EE_bTB_single = val[1],  #
		EE_bTB_co = val[2], #
		EE_brucellosis_single = val[3],#
		EE_brucellosis_co = val[4]	#
		)#
}#
stopCluster(cl)
source('get_Ro.R', chdir = TRUE)#
source('get_EE.R', chdir = TRUE)
cl <- makeCluster(6)#
registerDoParallel(cl)#
epiT <- foreach(d = iter(epiTB, by = "row"), .combine = rbind, .packages = "deSolve") %dopar% {#
	params.test <- c(f.params, list(gamma = 1/2, betaB = 0.5764065, #
		betaT = 1.3305462/1000, rhoT = d$rhoT, rhoB = 2.1))#
	params.test$muC <- d$mort * params.test$muS#
	params.test$muRC <- d$mort * params.test$muS#
	sol <- as.data.frame(ode.1D(xB.test, times, rhs, params.test, nspec = 6, dimens = N))#
	temp <- get_prevalence(sol)#
	val <- get_EE(params, x0, "beverton-holt")#
#
	data <- data.frame(#
		rhoT = params.test$rhoT,#
		mort = params.test$muC[1]/ params.test$muS[1],#
		bTBprev = temp$prevTB,#
		brucprev = temp$prevB,	#
		finalN = sum(sol[length(sol[,1]), c(2:length(colnames(sol)))]),#
		bTB_inS = temp$prevTinS ,#
		bTB_inB = temp$prevTinB,#
		bruc_inS = temp$prevBinS ,#
		bruc_inTB = temp$prevBinT,#
		EE_bTB_single = val[1],  #
		EE_bTB_co = val[2], #
		EE_brucellosis_single = val[3],#
		EE_brucellosis_co = val[4]	#
		)#
}#
stopCluster(cl)
epiT
