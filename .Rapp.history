9.2463780/10000
objective = function(params.est){#
	# params.est = 2 long = c(betaB, betaT)#
	#params <- c(fixed.params, list(gamma=1/2, betaB = params.est[1],#
	#betaT = params.est[2]/10000, rhoT = 1, rhoB = 2.1, theta= 4, K = 433))#
	params <- c(fixed.params, list(gamma=1/2, betaB = params.est[1],#
	betaT = params.est[2]/10000, rhoT = 1, rhoB = 4, theta= 4, K = 433))#
	# seed from endemic brucellosis conditions, 10 bTB positive buffalo#
	x0 = get_starting_eqbruc(params = c(params))#
	x0[[25]] <- x0[[25]] + 2#
	if(x0[[5]] > 2){#
		x0[[5]] <- x0[[5]] - 2}  #
	sol <- as.data.frame(ode(x0, times, rhs_age_matrix, params))#
	df <- get_structured_prevalence(sol)#
	error <- sqrt(((prevTBobs - df$prevTB)^2 + (prevBobs - df$prevB)^2))#
	return (error)#
}
par <- optim(c(1.025, 0.00054*10000), objective, method = c("L-BFGS-B"), lower = c(0.4, 0.8), upper = c(2, 0.001 * 10000))  # starting vals=30% prev w/out co-infection
par
x0 = get_starting_eqbruc(params = c(params))#
x0[[25]] <- x0[[25]] + 2#
x0[[5]] <- x0[[5]] - 2#
sol <- as.data.frame(ode(x0, times, rhs_age_matrix, params))#
get_prevalence(sol)
params <- c(fixed.params, list(gamma=1/2, betaB = 1.129042,#
	betaT = 9.2463780/10000, rhoT = 1, rhoB = 4, theta= 4, K = 433))#
x0 = get_starting_eqbruc(params = c(params))#
x0[[25]] <- x0[[25]] + 2#
x0[[5]] <- x0[[5]] - 2#
sol <- as.data.frame(ode(x0, times, rhs_age_matrix, params))#
get_prevalence(sol)
par(mfrow = c(1, 2))#
plot_raw_numbers(sol)#
plot_ageprevalence(sol)
par <- optim(c(1.025, 0.00094*10000), objective)
par
params <- c(fixed.params, list(gamma=1/2, betaB = 0.797551,#
	betaT = 9.640622/10000, rhoT = 1, rhoB = 4, theta= 4, K = 433))#
x0 = get_starting_eqbruc(params = c(params))#
x0[[25]] <- x0[[25]] + 2#
x0[[5]] <- x0[[5]] - 2#
sol <- as.data.frame(ode(x0, times, rhs_age_matrix, params))#
get_prevalence(sol)  # 27, 34!!!  (26.6, 53.8, 28.8, 42.8)#
make_summary_plots(sol)
objective
get_structured_prevalence
get_structured_prevalence(sol)
make_structured_summary_plots(sol)
par(mfrow = c(1, 2))#
plot_raw_numbers(sol)#
plot_ageprevalence(sol)
exp(0.76)
0.04*4
0.14*4
exp(0.885)
fixed.params
# logistic#
rhs_age_matrix = function(times, x, params){#
	###########################
	# Inputs: t = time sequence; #
	# x = initial conditions, vector(length=24), 4 age categories#
	# params= list(#
	# b1,b2,b3,b4,b5: age sp. prop reduction in fecundity (20 long)#
	# with TB/bruc/chronic bruc/co/co-chronic #
	# betaT, betaB: transmission rates, age independent#
	# rhoB & rhoT: prop increase in transmission #
	# with co-infection (scalor=age independent)#
	# gamma, epsilon: scalors	 #
	# b = a vector (0, small no., birth rate set to get growth = 1.2, same rate)#
	# muS, muT, muB, muC, muR, muRC age specific mortality rates.  #
	###########################
	# Output: differences, for 20 ages#
	###########################
	with(as.list(c(x, params)), {#
#
		# Assign state variables, each 20 long, #
		# 4 categories: 1-3.9, 4-4.9, 5-14.9, 15+)#
		# from incidence anlaysis, use [0-3),[3 +) #
		# from mortality analysis, use [0-3),[3 +)#
		# from birth analyis, use, [3-5),[5+)#
		s_index <- 1:20#
		it_index <- 21:40#
		ib_index <- 41:60#
		ic_index <- 61:80#
		r_index <- 81:100#
		rc_index <- 101:120#
#
		S = x[s_index] 				#
		It = x[it_index] 			#
		Ib = x[ib_index]#
		Ic = x[ic_index]#
		R = x[r_index]#
		Rc = x[rc_index]#
#
		# Population size (N)#
		Nall <- sum(S + It + Ib + Ic + R + Rc)  # overall#
		N <- S + It + Ib +Ic + R + Rc 			# by age category#
#
		# Frequency dependent force of infection is age dependent #
		# turn betaB into a matrix#
		betaBm <- matrix(nrow = 20, ncol = 20)#
		betaBm[1:20, 1:20] <- betaB#
		betaBm[2:4,] <- exp(0.0885) * betaB  #2-4yr have higher suscept.#
		betaTm <- matrix(c(rep(betaT, 400)), nrow = 20, ncol = 20)#
		# lambdaB = age specific vectors!#
		# bTB = density dependent, bruc = freq dependent#
		lambdaT <- betaTm %*% (It + Ic + Rc)#
		lambdaB <- betaBm %*% (Ib + Ic) / Nall#
		lambdapT <- rhoT * betaTm %*% (It + Ic + Rc)#
		lambdapB <- rhoB * betaBm %*% (Ib + Ic) / Nall#
#
		# Age spcific pop contributing to births (Nb = vector); #
		# reduced births(b1, b2...=vectors; Nb = vector, birth = vector) #
		Nb <- S + b1 * It + b2 * Ib + #
			b3 * R + b4 * Ic + b5 * Rc#
		birth <- c(b %*% Nb)#
		recruitment <- c(birth / ( 1 + (Nall/K)^theta), rep(0, 19))#
		dS <- recruitment + aging %*% S - (lambdaT + lambdaB) * S - muS * S#
		dIt <- lambdaT * S - (lambdapB + muT) * It + aging %*% It#
		dIb <- lambdaB * S + aging %*% Ib +	epsilon * R - (gamma + lambdapT + muB) * Ib#
		dIc <- lambdapT*Ib + lambdapB*It + aging %*% Ic + epsilon * Rc - (gamma + muC)*Ic#
		dR <- gamma * Ib - (epsilon + muR + lambdapT) * R + aging %*% R#
		dRc <- lambdapT * R + gamma * Ic + aging %*% Rc - (epsilon + muRC) * Rc#
		out = list(c(dS, dIt, dIb, dIc, dR, dRc))#
		return(out)	#
		}#
	)	#
}
objective = function(params.est){#
	# params.est = 2 long = c(betaB, betaT)#
	#params <- c(fixed.params, list(gamma=1/2, betaB = params.est[1],#
	#betaT = params.est[2]/10000, rhoT = 1, rhoB = 2.1, theta= 4, K = 433))#
	params <- c(fixed.params, list(gamma=1/2, betaB = params.est[1],#
	betaT = params.est[2]/10000, rhoT = 1, rhoB = 2, theta= 4, K = 433))#
	# seed from endemic brucellosis conditions, 10 bTB positive buffalo#
	x0 = get_starting_eqbruc(params = c(params))#
	x0[[25]] <- x0[[25]] + 2#
	if(x0[[5]] > 2){#
		x0[[5]] <- x0[[5]] - 2}  #
	sol <- as.data.frame(ode(x0, times, rhs_age_matrix, params))#
	df <- get_structured_prevalence(sol)#
	error <- sqrt(((prevTBobs - df$prevTB)^2 + (prevBobs - df$prevB)^2))#
	return (error)#
}
par <- optim(c(1.025, 0.00094*10000), objective)  # starting vals=30% prev w/out co-infection
par
params <- c(fixed.params, list(gamma=1/2, betaB = 0.9511784,#
	betaT = 9.1652575/10000, rhoT = 1, rhoB = 2.1, theta= 4, K = 433))#
x0 = get_starting_eqbruc(params = c(params))#
x0[[25]] <- x0[[25]] + 2#
x0[[5]] <- x0[[5]] - 2#
sol <- as.data.frame(ode(x0, times, rhs_age_matrix, params))#
get_prevalence(sol)
get_structured_prevalence(sol)
make_structured_summary_plots(sol)
par(mfrow = c(1, 2))#
plot_raw_numbers(sol)#
plot_ageprevalence(sol)
##############################################################
##############################################################
# Write ODEs, density dependence... age structure, gamma ageing & wafwi#
##############################################################
##############################################################
#
# logistic#
rhs_age_matrix = function(times, x, params){#
	###########################
	# Inputs: t = time sequence; #
	# x = initial conditions, vector(length=24), 4 age categories#
	# params= list(#
	# b1,b2,b3,b4,b5: age sp. prop reduction in fecundity (20 long)#
	# with TB/bruc/chronic bruc/co/co-chronic #
	# betaT, betaB: transmission rates, age independent#
	# rhoB & rhoT: prop increase in transmission #
	# with co-infection (scalor=age independent)#
	# gamma, epsilon: scalors	 #
	# b = a vector (0, small no., birth rate set to get growth = 1.2, same rate)#
	# muS, muT, muB, muC, muR, muRC age specific mortality rates.  #
	###########################
	# Output: differences, for 20 ages#
	###########################
	with(as.list(c(x, params)), {#
#
		# Assign state variables, each 20 long, #
		# 4 categories: 1-3.9, 4-4.9, 5-14.9, 15+)#
		# from incidence anlaysis, use [0-3),[3 +) #
		# from mortality analysis, use [0-3),[3 +)#
		# from birth analyis, use, [3-5),[5+)#
		s_index <- 1:20#
		it_index <- 21:40#
		ib_index <- 41:60#
		ic_index <- 61:80#
		r_index <- 81:100#
		rc_index <- 101:120#
#
		S = x[s_index] 				#
		It = x[it_index] 			#
		Ib = x[ib_index]#
		Ic = x[ic_index]#
		R = x[r_index]#
		Rc = x[rc_index]#
#
		# Population size (N)#
		Nall <- sum(S + It + Ib + Ic + R + Rc)  # overall#
		N <- S + It + Ib +Ic + R + Rc 			# by age category#
#
		# Frequency dependent force of infection is age dependent #
		# turn betaB into a matrix#
		betaBm <- matrix(nrow = 20, ncol = 20)#
		betaBm[1:20, 1:20] <- betaB#
		betaBm[2:3,] <- exp(0.0885) * betaB  #2-3yr have higher suscept.#
		betaTm <- matrix(c(rep(betaT, 400)), nrow = 20, ncol = 20)#
		# lambdaB = age specific vectors!#
		# bTB = density dependent, bruc = freq dependent#
		lambdaT <- betaTm %*% (It + Ic + Rc)#
		lambdaB <- betaBm %*% (Ib + Ic) / Nall#
		lambdapT <- rhoT * betaTm %*% (It + Ic + Rc)#
		lambdapB <- rhoB * betaBm %*% (Ib + Ic) / Nall#
#
		# Age spcific pop contributing to births (Nb = vector); #
		# reduced births(b1, b2...=vectors; Nb = vector, birth = vector) #
		Nb <- S + b1 * It + b2 * Ib + #
			b3 * R + b4 * Ic + b5 * Rc#
		birth <- c(b %*% Nb)#
		recruitment <- c(birth / ( 1 + (Nall/K)^theta), rep(0, 19))#
		dS <- recruitment + aging %*% S - (lambdaT + lambdaB) * S - muS * S#
		dIt <- lambdaT * S - (lambdapB + muT) * It + aging %*% It#
		dIb <- lambdaB * S + aging %*% Ib +	epsilon * R - (gamma + lambdapT + muB) * Ib#
		dIc <- lambdapT*Ib + lambdapB*It + aging %*% Ic + epsilon * Rc - (gamma + muC)*Ic#
		dR <- gamma * Ib - (epsilon + muR + lambdapT) * R + aging %*% R#
		dRc <- lambdapT * R + gamma * Ic + aging %*% Rc - (epsilon + muRC) * Rc#
		out = list(c(dS, dIt, dIb, dIc, dR, dRc))#
		return(out)	#
		}#
	)	#
}
par <- optim(c(1.025, 0.00094*10000), objective)  # starting vals=30% prev w/out co-infection
par
params <- c(fixed.params, list(gamma=1/2, betaB = 0.9636965,#
	betaT = 9.1928187/10000, rhoT = 1, rhoB = 2.1, theta= 4, K = 433))#
x0 = get_starting_eqbruc(params = c(params))#
x0[[25]] <- x0[[25]] + 2#
x0[[5]] <- x0[[5]] - 2#
sol <- as.data.frame(ode(x0, times, rhs_age_matrix, params))#
get_prevalence(sol)  # 27, 34!!!  (26.6, 53.8, 28.8, 42.8)#
get_structured_prevalence(sol)#
make_structured_summary_plots(sol)
par(mfrow = c(1, 2))#
plot_raw_numbers(sol)#
plot_ageprevalence(sol)
par(mfrow = c(1, 2))#
plot_raw_numbers(sol)#
plot_ageprevalence(sol)
make_structured_summary_plots(sol)
objective = function(params.est){#
	# params.est = 2 long = c(betaB, betaT)#
	#params <- c(fixed.params, list(gamma=1/2, betaB = params.est[1],#
	#betaT = params.est[2]/10000, rhoT = 1, rhoB = 2.1, theta= 4, K = 433))#
	params <- c(fixed.params, list(gamma=1/2, betaB = params.est[1],#
	betaT = params.est[2]/10000, rhoT = 1, rhoB = 1.5, theta= 4, K = 433))#
	# seed from endemic brucellosis conditions, 10 bTB positive buffalo#
	x0 = get_starting_eqbruc(params = c(params))#
	x0[[25]] <- x0[[25]] + 2#
	if(x0[[5]] > 2){#
		x0[[5]] <- x0[[5]] - 2}  #
	sol <- as.data.frame(ode(x0, times, rhs_age_matrix, params))#
	df <- get_structured_prevalence(sol)#
	error <- sqrt(((prevTBobs - df$prevTB)^2 + (prevBobs - df$prevB)^2))#
	return (error)#
}
par <- optim(c(1.025, 0.00094*10000), objective)  # starting vals=30% prev w/out co-infection
par
x0 = get_starting_eqbruc(params = c(params))#
x0[[25]] <- x0[[25]] + 2#
x0[[5]] <- x0[[5]] - 2#
sol <- as.data.frame(ode(x0, times, rhs_age_matrix, params))#
get_prevalence(sol)  # 27, 34!!!  (26.6, 53.8, 28.8, 42.8)#
get_structured_prevalence(sol)
make_structured_summary_plots(sol)
par(mfrow = c(1, 2))#
plot_raw_numbers(sol)#
plot_ageprevalence(sol)
objective = function(params.est){#
	# params.est = 2 long = c(betaB, betaT)#
	#params <- c(fixed.params, list(gamma=1/2, betaB = params.est[1],#
	#betaT = params.est[2]/10000, rhoT = 1, rhoB = 2.1, theta= 4, K = 433))#
	params <- c(fixed.params, list(gamma=1/2, betaB = params.est[1],#
	betaT = params.est[2]/10000, rhoT = 1, rhoB = 1.2, theta= 4, K = 433))#
	# seed from endemic brucellosis conditions, 10 bTB positive buffalo#
	x0 = get_starting_eqbruc(params = c(params))#
	x0[[25]] <- x0[[25]] + 2#
	if(x0[[5]] > 2){#
		x0[[5]] <- x0[[5]] - 2}  #
	sol <- as.data.frame(ode(x0, times, rhs_age_matrix, params))#
	df <- get_structured_prevalence(sol)#
	error <- sqrt(((prevTBobs - df$prevTB)^2 + (prevBobs - df$prevB)^2))#
	return (error)#
}
par <- optim(c(1.025, 0.00094*10000), objective)
params <- c(fixed.params, list(gamma=1/2, betaB = 0.9636965,#
	betaT = 9.1928187/10000, rhoT = 1, rhoB = 2.1, theta= 4, K = 433))#
x0 = get_starting_eqbruc(params = c(params))#
x0[[25]] <- x0[[25]] + 2#
x0[[5]] <- x0[[5]] - 2#
sol <- as.data.frame(ode(x0, times, rhs_age_matrix, params))#
get_prevalence(sol)  # 27, 34!!!  (26.6, 53.8, 28.8, 42.8)#
get_structured_prevalence(sol)#
make_structured_summary_plots(sol)
par(mfrow = c(1, 2))#
plot_raw_numbers(sol)#
plot_ageprevalence(sol)
par(mfrow = c(1, 2))#
plot_raw_numbers(sol)#
plot_ageprevalence(sol)
make_structured_summary_plots(sol)
df2 <- data.frame(Evaluation = c("Model", "Model", "Data", "Data"), #
	Infection = c("Single", "Co", "Single", "Co"), #
	BrucellosisPrevalence = c(df$prevBinS, df$prevBinT, 0.3035, 0.4524), #
	TBPrevalence = c(df$prevTinS, df$prevTinB, 0.227, 0.3585), #
	CILowB = c(NA, NA, 0.2654405, 0.3657982), #
	CIHighB = c(NA, NA, 0.3451408, 0.5405985), #
	CILowTB = c(NA, NA, 0.1781895, 0.2857143), #
	CIHighTB = c(NA, NA, 0.2783505, 0.4313725))
df <- get_structured_prevalence(sol)
f2 <- data.frame(Evaluation = c("Model", "Model", "Data", "Data"), #
	Infection = c("Single", "Co", "Single", "Co"), #
	BrucellosisPrevalence = c(df$prevBinS, df$prevBinT, 0.3035, 0.4524), #
	TBPrevalence = c(df$prevTinS, df$prevTinB, 0.227, 0.3585), #
	CILowB = c(NA, NA, 0.2654405, 0.3657982), #
	CIHighB = c(NA, NA, 0.3451408, 0.5405985), #
	CILowTB = c(NA, NA, 0.1781895, 0.2857143), #
	CIHighTB = c(NA, NA, 0.2783505, 0.4313725))
df2
f2
df2 <- reshape(f2, varying = c("BrucellosisPrevalence", "TBPrevalence"), #
	v.names = "Prevalence", direction = "long")
df2
df2 <- reshape(f2, varying = c("BrucellosisPrevalence", "TBPrevalence"), #
	v.names = "Prevalence", timevar = "Infection", times = c("Brucellosis", "bTB"), #
	direction = "long")
df2
df2 <- reshape(f2, varying = c("BrucellosisPrevalence", "TBPrevalence"), #
	v.names = "Prevalence", timevar = "Name", times = c("Brucellosis", "bTB"), #
	direction = "long")
df2
ggplot(df2[df2$Evaluation = "Model"], aes(x = Name, y = Prevalence, fill = Infection)) + #
	geom_bar(position = position_dodge(), stat = "identity") + ylim(0, 0.8)
ggplot(df2[df2$Evaluation == "Model",], aes(x = Name, y = Prevalence, fill = Infection)) + #
	geom_bar(position = position_dodge(), stat = "identity") + ylim(0, 0.8)
df
getwd()
?rds
??write.rds
??rds
saveRDS(df, "coinfection_pattern_results.rds")
ggplot(df2[df2$Evaluation == "Model",], aes(x = Name, y = Prevalence, fill = Infection)) + #
	geom_bar(position = position_dodge(), stat = "identity") + ylim(0, 0.8) + #
	theme_bw() + # removes ugly gray.#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8),#
        axis.text.x = element_text(size=14, vjust=-0.05),#
        axis.text.y = element_text(size=14),#
        panel.border = element_blank())
ggplot(df2[df2$Evaluation == "Model",], aes(x = Name, y = Prevalence, fill = Infection)) + #
	geom_bar(position = position_dodge(), stat = "identity") + ylim(0, 0.8) + #
	theme_bw() +  scale_colour_manual(values=c("steelblue", "orangered4")) #
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8),#
        axis.text.x = element_text(size=14, vjust=-0.05),#
        axis.text.y = element_text(size=14),#
        panel.border = element_blank())
ggplot(df2[df2$Evaluation == "Model",], aes(x = Name, y = Prevalence, fill = Infection)) + #
	geom_bar(position = position_dodge(), stat = "identity") + ylim(0, 0.8) + #
	theme_bw() +  scale_colour_manual(values=c("steelblue", "orangered4")) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8),#
        axis.text.x = element_text(size=14, vjust=-0.05),#
        axis.text.y = element_text(size=14),#
        panel.border = element_blank())
ggplot(df2[df2$Evaluation == "Model",], aes(x = Name, y = Prevalence, colour = Infection)) + #
	geom_bar(position = position_dodge(), stat = "identity") + ylim(0, 0.8) + #
	theme_bw() +  scale_colour_manual(values=c("steelblue", "orangered4")) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8),#
        axis.text.x = element_text(size=14, vjust=-0.05),#
        axis.text.y = element_text(size=14),#
        panel.border = element_blank())
ggplot(df2[df2$Evaluation == "Model",], aes(x = Name, y = Prevalence, fill = Infection)) + #
	geom_bar(position = position_dodge(), stat = "identity") + ylim(0, 0.8) + #
	theme_bw() +  scale_fill_manual(values=c("steelblue", "orangered4")) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8),#
        axis.text.x = element_text(size=14, vjust=-0.05),#
        axis.text.y = element_text(size=14),#
        panel.border = element_blank())
f2 <- data.frame(Evaluation = c("Model", "Model", "Data", "Data"), #
	Infection = c("Single infection", "Co-infection", "Single infection", "Co-infection"), #
	BrucellosisPrevalence = c(df$prevBinS, df$prevBinT, 0.3035, 0.4524), #
	TBPrevalence = c(df$prevTinS, df$prevTinB, 0.227, 0.3585), #
	CILowB = c(NA, NA, 0.2654405, 0.3657982), #
	CIHighB = c(NA, NA, 0.3451408, 0.5405985), #
	CILowTB = c(NA, NA, 0.1781895, 0.2857143), #
	CIHighTB = c(NA, NA, 0.2783505, 0.4313725))#
df2 <- reshape(f2, varying = c("BrucellosisPrevalence", "TBPrevalence"), #
	v.names = "Prevalence", timevar = "Name", times = c("Brucellosis", "bTB"), #
	direction = "long")#
#
ggplot(df2[df2$Evaluation == "Model",], aes(x = Name, y = Prevalence, fill = Infection)) + #
	geom_bar(position = position_dodge(), stat = "identity") + ylim(0, 0.8) + #
	theme_bw() +  scale_fill_manual(values=c("steelblue", "orangered4")) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8),#
        axis.text.x = element_text(size=14, vjust=-0.05),#
        axis.text.y = element_text(size=14),#
        panel.border = element_blank(), #
		legend.position=c(1, 0.7),  #
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key= element_blank(),#
        legend.title= element_blank(),#
        legend.text = element_text(size=15))
ggplot(df2[df2$Evaluation == "Model",], aes(x = Name, y = Prevalence, fill = Infection)) + #
	geom_bar(position = position_dodge(), stat = "identity") + ylim(0, 0.8) + #
	theme_bw() +  scale_fill_manual(values=c("steelblue", "orangered4")) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8),#
        axis.text.x = element_text(size=14, vjust=-0.05),#
        axis.text.y = element_text(size=14),#
        panel.border = element_blank(), #
		legend.position=c(0.8, 0.8),  #
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key= element_blank(),#
        legend.title= element_blank(),#
        legend.text = element_text(size=15))
ggplot(df2[df2$Evaluation == "Model",], aes(x = Name, y = Prevalence, fill = Infection)) + #
	geom_bar(position = position_dodge(), stat = "identity") + ylim(0, 0.8) + #
	theme_bw() +  scale_fill_manual(values=c("steelblue", "orangered4")) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8),#
        axis.text.x = element_text(size=14, vjust=-0.05),#
        axis.text.y = element_text(size=14),#
        panel.border = element_blank(), #
		legend.position=c(0.8, 0.9),  #
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key= element_blank(),#
        legend.title= element_blank(),#
        legend.text = element_text(size=15))
str(df2)
df2$Infection <- relevel("Single infection")
df2$Infection <- relevel(df2$Infection, "Single infection")
ggplot(df2[df2$Evaluation == "Model",], aes(x = Name, y = Prevalence, fill = Infection)) + #
	geom_bar(position = position_dodge(), stat = "identity") + ylim(0, 0.8) + #
	theme_bw() +  scale_fill_manual(values=c("steelblue", "orangered4")) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8),#
        axis.text.x = element_text(size=14, vjust=-0.05),#
        axis.text.y = element_text(size=14),#
        panel.border = element_blank(), #
		legend.position=c(0.8, 0.9),  #
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key= element_blank(),#
        legend.title= element_blank(),#
        legend.text = element_text(size=15))
df2
p2 <- p1 + ggplot(df2[df2$Evaluation == "Data",], aes(x = Name, y = Prevalence)) + #
	geom_point(position = position_dodge(), stat = "identity")
p1 <- ggplot(df2[df2$Evaluation == "Model",], aes(x = Name, y = Prevalence, fill = Infection)) + #
	geom_bar(position = position_dodge(), stat = "identity") + ylim(0, 0.8) + #
	theme_bw() +  scale_fill_manual(values=c("steelblue", "orangered4")) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8),#
        axis.text.x = element_text(size=14, vjust=-0.05),#
        axis.text.y = element_text(size=14),#
        panel.border = element_blank(), #
		legend.position=c(0.8, 0.9),  #
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key= element_blank(),#
        legend.title= element_blank(),#
        legend.text = element_text(size=15))         #
p2 <- p1 + ggplot(df2[df2$Evaluation == "Data",], aes(x = Name, y = Prevalence)) + #
	geom_point(position = position_dodge(), stat = "identity")
p1 <- ggplot(df2[df2$Evaluation == "Model",], aes(x = Name, y = Prevalence, fill = Infection)) + #
	geom_bar(position = position_dodge(), stat = "identity") + ylim(0, 0.8) + #
	theme_bw() +  scale_fill_manual(values=c("steelblue", "orangered4")) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8),#
        axis.text.x = element_text(size=14, vjust=-0.05),#
        axis.text.y = element_text(size=14),#
        panel.border = element_blank(), #
		legend.position=c(0.8, 0.9),  #
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key= element_blank(),#
        legend.title= element_blank(),#
        legend.text = element_text(size=15))  + #
	geom_point(data = df2[df2$Evaluation == "Data",], colour = "black")
p1
p1 <- ggplot(df2[df2$Evaluation == "Model",], aes(x = Name, y = Prevalence, fill = Infection)) + #
	geom_bar(position = position_dodge(), stat = "identity") + ylim(0, 0.8) + #
	theme_bw() +  scale_fill_manual(values=c("steelblue", "orangered4")) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8),#
        axis.text.x = element_text(size=14, vjust=-0.05),#
        axis.text.y = element_text(size=14),#
        panel.border = element_blank(), #
		legend.position=c(0.8, 0.9),  #
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key= element_blank(),#
        legend.title= element_blank(),#
        legend.text = element_text(size=15))  + #
	geom_point(data = df2[df2$Evaluation == "Data",], colour = "black", position = position_dodge())
p1
ggplot(df2[df2$Evaluation == "Model",], aes(x = Name, y = Prevalence, fill = Infection)) + #
	geom_bar(position = position_dodge(), stat = "identity") + ylim(0, 0.8) + #
	theme_bw() +  scale_fill_manual(values=c("steelblue", "orangered4")) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8),#
        axis.text.x = element_text(size=14, vjust=-0.05),#
        axis.text.y = element_text(size=14),#
        panel.border = element_blank(), #
		legend.position=c(0.8, 0.9),  #
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key= element_blank(),#
        legend.title= element_blank(),#
        legend.text = element_text(size=15))  + #
	geom_point(data = df2[df2$Evaluation == "Data",], colour = "black", #
		position = position_dodge(width = 0.5))
ggplot(df2[df2$Evaluation == "Model",], aes(x = Name, y = Prevalence, fill = Infection)) + #
	geom_bar(position = position_dodge(), stat = "identity") + ylim(0, 0.8) + #
	theme_bw() +  scale_fill_manual(values=c("steelblue", "orangered4")) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8),#
        axis.text.x = element_text(size=14, vjust=-0.05),#
        axis.text.y = element_text(size=14),#
        panel.border = element_blank(), #
		legend.position=c(0.8, 0.9),  #
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key= element_blank(),#
        legend.title= element_blank(),#
        legend.text = element_text(size=15))  + #
	geom_point(data = df2[df2$Evaluation == "Data",], colour = "black", #
		position = position_dodge(width = 1))
geom_point(data = df2[df2$Evaluation == "Data",], colour = "black", #
		position = position_dodge(width = 0.8))
ggplot(df2[df2$Evaluation == "Model",], aes(x = Name, y = Prevalence, fill = Infection)) + #
	geom_bar(position = position_dodge(), stat = "identity") + ylim(0, 0.8) + #
	theme_bw() +  scale_fill_manual(values=c("steelblue", "orangered4")) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8),#
        axis.text.x = element_text(size=14, vjust=-0.05),#
        axis.text.y = element_text(size=14),#
        panel.border = element_blank(), #
		legend.position=c(0.8, 0.9),  #
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key= element_blank(),#
        legend.title= element_blank(),#
        legend.text = element_text(size=15))  + #
	geom_point(data = df2[df2$Evaluation == "Data",], colour = "black", #
		position = position_dodge(width = 0.8))
ggplot(df2[df2$Evaluation == "Model",], aes(x = Name, y = Prevalence, fill = Infection)) + #
	geom_bar(position = position_dodge(), stat = "identity") + ylim(0, 0.8) + #
	theme_bw() +  scale_fill_manual(values=c("steelblue", "orangered4")) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8),#
        axis.text.x = element_text(size=14, vjust=-0.05),#
        axis.text.y = element_text(size=14),#
        panel.border = element_blank(), #
		legend.position=c(0.8, 0.9),  #
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key= element_blank(),#
        legend.title= element_blank(),#
        legend.text = element_text(size=15))  + #
	geom_point(data = df2[df2$Evaluation == "Data",], colour = "black", #
		position = position_dodge(width = 0.9))
ggplot(df2[df2$Evaluation == "Model",], aes(x = Name, y = Prevalence, fill = Infection)) + #
	geom_bar(position = position_dodge(), stat = "identity") + ylim(0, 0.8) + #
	theme_bw() +  scale_fill_manual(values=c("steelblue", "orangered4")) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8),#
        axis.text.x = element_text(size=14, vjust=-0.05),#
        axis.text.y = element_text(size=14),#
        panel.border = element_blank(), #
		legend.position=c(0.8, 0.9),  #
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key= element_blank(),#
        legend.title= element_blank(),#
        legend.text = element_text(size=15))  + #
	geom_point(data = df2[df2$Evaluation == "Data",], colour = "black", #
		position = position_dodge(width = 1))
df2
limits <- aes(ymax = df2$CIHigh[df2$Evaluation == "Data"] + df2$CILow[df2$Evaluation == "Data"])
df2$CILow <- c(NA, NA, 0.26544, 0.365798, NA, NA, 0.1781895, 0.2857)#
df2$CIHigh <- c(NA, NA, 0.3451408, 0.540598, NA, NA, 0.27835, 0.43137)
df2
limits <- aes(ymax = df2$CIHigh[df2$Evaluation == "Data"] + df2$CILow[df2$Evaluation == "Data"])
limits
ggplot(df2[df2$Evaluation == "Model",], aes(x = Name, y = Prevalence, fill = Infection)) + #
	geom_bar(position = position_dodge(), stat = "identity") + ylim(0, 0.8) + #
	theme_bw() +  scale_fill_manual(values=c("steelblue", "orangered4")) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8),#
        axis.text.x = element_text(size=14, vjust=-0.05),#
        axis.text.y = element_text(size=14),#
        panel.border = element_blank(), #
		legend.position=c(0.8, 0.9),  #
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key= element_blank(),#
        legend.title= element_blank(),#
        legend.text = element_text(size=15))  + #
	geom_point(data = df2[df2$Evaluation == "Data",], colour = "black", #
		position = position_dodge(width = 0.9))   + #
	geom_errorbar(limits, position = dodge, width= 0.25)
ggplot(df2[df2$Evaluation == "Model",], aes(x = Name, y = Prevalence, fill = Infection)) + #
	geom_bar(position = position_dodge(), stat = "identity") + ylim(0, 0.8) + #
	theme_bw() +  scale_fill_manual(values=c("steelblue", "orangered4")) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8),#
        axis.text.x = element_text(size=14, vjust=-0.05),#
        axis.text.y = element_text(size=14),#
        panel.border = element_blank(), #
		legend.position=c(0.8, 0.9),  #
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key= element_blank(),#
        legend.title= element_blank(),#
        legend.text = element_text(size=15))  + #
	geom_point(data = df2[df2$Evaluation == "Data",], colour = "black", #
		position = position_dodge(width = 0.9))   + #
	geom_errorbar(limits, position = position_dodge(width = 0.09), width= 0.25)
?geom_errorbar
limits <- aes(ymax = df2$CIHigh[df2$Evaluation == "Data"], ymin= df2$CILow[df2$Evaluation == "Data"])
ggplot(df2[df2$Evaluation == "Model",], aes(x = Name, y = Prevalence, fill = Infection)) + #
	geom_bar(position = position_dodge(), stat = "identity") + ylim(0, 0.8) + #
	theme_bw() +  scale_fill_manual(values=c("steelblue", "orangered4")) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8),#
        axis.text.x = element_text(size=14, vjust=-0.05),#
        axis.text.y = element_text(size=14),#
        panel.border = element_blank(), #
		legend.position=c(0.8, 0.9),  #
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key= element_blank(),#
        legend.title= element_blank(),#
        legend.text = element_text(size=15))  + #
	geom_point(data = df2[df2$Evaluation == "Data",], colour = "black", #
		position = position_dodge(width = 0.9))   + #
	geom_errorbar(limits, position = position_dodge(width = 0.09), width= 0.25)
ggplot(df2[df2$Evaluation == "Model",], aes(x = Name, y = Prevalence, fill = Infection)) + #
	geom_bar(position = position_dodge(), stat = "identity") + ylim(0, 0.8) + #
	theme_bw() +  scale_fill_manual(values=c("steelblue", "orangered4")) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8),#
        axis.text.x = element_text(size=14, vjust=-0.05),#
        axis.text.y = element_text(size=14),#
        panel.border = element_blank(), #
		legend.position=c(0.8, 0.9),  #
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key= element_blank(),#
        legend.title= element_blank(),#
        legend.text = element_text(size=15))  + #
	geom_point(data = df2[df2$Evaluation == "Data",], colour = "black", #
		position = position_dodge(width = 0.9))   + #
	geom_errorbar(limits, position = position_dodge(width = 0.9), width= 0.25)
ggplot(df2[df2$Evaluation == "Model",], aes(x = Name, y = Prevalence, fill = Infection)) + #
	geom_bar(position = position_dodge(), stat = "identity") + ylim(0, 0.8) + #
	theme_bw() +  scale_fill_manual(values=c("steelblue", "orangered4")) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8),#
        axis.text.x = element_text(size=14, vjust=-0.05),#
        axis.text.y = element_text(size=14),#
        panel.border = element_blank(), #
		legend.position=c(0.8, 0.9),  #
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key= element_blank(),#
        legend.title= "Model",#
        legend.text = element_text(size=15))  + #
	geom_point(data = df2[df2$Evaluation == "Data",], colour = "black", #
		position = position_dodge(width = 0.9))   + #
	geom_errorbar(limits, position = position_dodge(width = 0.9), width= 0.25)
ggplot(df2[df2$Evaluation == "Model",], aes(x = Name, y = Prevalence, fill = Infection)) + #
	geom_bar(position = position_dodge(), stat = "identity") + ylim(0, 0.8) + #
	theme_bw() +  scale_fill_manual(values=c("steelblue", "orangered4")) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_text(size=16, vjust=-0.15),#
        axis.title.y = element_text(size=16, vjust= 0.8),#
        axis.text.x = element_text(size=14, vjust=-0.05),#
        axis.text.y = element_text(size=14),#
        panel.border = element_blank(), #
		legend.position=c(0.8, 0.9),  #
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key= element_blank(),#
        legend.title= element_blank(),#
        legend.text = element_text(size=15))  + #
	geom_point(data = df2[df2$Evaluation == "Data",], colour = "black", #
		position = position_dodge(width = 0.9))   + #
	geom_errorbar(limits, position = position_dodge(width = 0.9), width= 0.25)
?theme
ggplot(df2[df2$Evaluation == "Model",], aes(x = Name, y = Prevalence, fill = Infection)) + #
	geom_bar(position = position_dodge(), stat = "identity") + ylim(0, 0.8) + #
	theme_bw() +  scale_fill_manual(values=c("steelblue", "orangered4")) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_blank(),#element_text(size=16, vjust=-0.15),#
        axis.title.y = element_text(size=18, vjust= 0.8),#
        axis.text.x = element_text(size=18, vjust=-0.05),#
        axis.text.y = element_text(size=14),#
        panel.border = element_blank(), #
		legend.position=c(0.8, 0.9),  #
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key= element_blank(),#
        legend.title= element_blank(),#
        legend.text = element_text(size=16))  + #
	geom_point(data = df2[df2$Evaluation == "Data",], colour = "black", #
		position = position_dodge(width = 0.9))   + #
	geom_errorbar(limits, position = position_dodge(width = 0.9), width= 0.25)
ggplot(df2[df2$Evaluation == "Model",], aes(x = Name, y = Prevalence, fill = Infection)) + #
	geom_bar(position = position_dodge(), stat = "identity") + ylim(0, 0.8) + #
	theme_bw() +  scale_fill_manual(values=c("steelblue", "orangered4")) +#
	theme(axis.line.x = element_line(colour= "black"),#
  		axis.line.y = element_line(colour= "black"),#
  		axis.title.x = element_blank(),#element_text(size=16, vjust=-0.15),#
        axis.title.y = element_text(size=18, vjust= 0.8),#
        axis.text.x = element_text(size=18, vjust=-0.05),#
        axis.text.y = element_text(size=18),#
        panel.border = element_blank(), #
		legend.position=c(0.8, 0.9),  #
        legend.background= element_rect(fill="white", colour="white"),#
        legend.key= element_blank(),#
        legend.title= element_blank(),#
        legend.text = element_text(size=16))  + #
	geom_point(data = df2[df2$Evaluation == "Data",], colour = "black", #
		position = position_dodge(width = 0.9))   + #
	geom_errorbar(limits, position = position_dodge(width = 0.9), width= 0.25)
data_nofinal<-data[data$final_capture=="0",] #
d<-data.frame(btb=data_nofinal$tb , bruc=as.character(data_nofinal$bruc), age=data_nofinal$age_sel/12, #
              id=data_nofinal$id)#
d<-d[d$age<14,]#
# make a dataframe with age prevalence in tbneg and tbpos, long format for ggplot#
val<-NA#
get_prev<-function(dat) {#
  if(length(dat)==0){#
    val<-0#
  }#
  if(length(dat>0)){#
    val<-length(dat[dat=="1"])/length(dat)#
  }#
  return(val)#
}#
#
binsize=2#
agebins=c(seq(0, max(d$age), binsize), max(d$age+1))#
agebins<- c(agebins[c(1:6)], 16.5)#
d$bruc2<-NA#
newdf<-data.frame(agebin=c(agebins, agebins), Brucprev=NA, #
                  TB=c(rep("bTB-", length(agebins)),rep("bTB+", length(agebins)) ),#
                  N=NA)  #
for (i in 1:length(d$bruc)){#
  ifelse(d$bruc[i]=="negative", d$bruc2[i]<-0, d$bruc2[i]<-1)#
}#
d$bruc<-as.numeric(d$bruc2)#
for (i in 1:(length(agebins)-1)){#
  neg<-d[d$btb==0,]#
  pos<-d[d$btb==1,]#
  d_neg<-d[d$age>=agebins[i] & d$age<agebins[i+1] & d$btb=="0",]#
  d_pos<-d[d$age>=agebins[i] & d$age<agebins[i+1] & d$btb=="1",]#
  newdf$Brucprev[i]<-get_prev(d_neg$bruc)#
  newdf$Brucprev[i+length(agebins)]<-get_prev(d_pos$bruc)#
  newdf$N[i]<- length(d_neg$bruc)#
  newdf$N[i+length(agebins)]<- length(d_pos$bruc)#
}#
newdf<-newdf[newdf$agebin<16,]#
newdf$se<-sqrt(newdf$Brucprev*(1-newdf$Brucprev)/newdf$N)#
newdf$se[is.na(newdf$se)]<-0#
#
# remove 0-2 bin because no TB+#
newdf2<-newdf[newdf$N>1,]; newdf<-newdf2
head(d)
ggplot(d, aes(x=age)) + #
	geom_histogram(data=d, fill= "steelblue", alpha=0.3, stat="bin", binwidth= 1) + #
	theme_bw()+ #
  xlab("Age (years)")+ ylab("Count")+#
  theme(panel.border = element_blank(), #
        panel.margin = element_blank(),#
        panel.grid.major= element_blank(),#
        panel.grid.minor= element_blank()) + #
  theme(axis.line.x = element_line(colour= "black"), #
		axis.line.y = element_line(colour= "black")  )
?geom_histogram
ggplot(d, aes(x=age)) + #
	geom_histogram(data=d, fill= "steelblue", alpha=0.3, colour = "black", stat="bin", binwidth= 1) + #
	theme_bw()+ #
  xlab("Age (years)")+ ylab("Count")+#
  theme(panel.border = element_blank(), #
        panel.margin = element_blank(),#
        panel.grid.major= element_blank(),#
        panel.grid.minor= element_blank()) + #
  theme(axis.line.x = element_line(colour= "black"), #
		axis.line.y = element_line(colour= "black")  )
geom_histogram(data=d, fill= "steelblue", alpha=0.3, colour = "steelblue", stat="bin", binwidth= 1) +
ggplot(d, aes(x=age)) + #
	geom_histogram(data=d, fill= "steelblue", alpha=0.3, colour = "steelblue", stat="bin", binwidth= 1) + #
	theme_bw()+ #
  xlab("Age (years)")+ ylab("Count")+#
  theme(panel.border = element_blank(), #
        panel.margin = element_blank(),#
        panel.grid.major= element_blank(),#
        panel.grid.minor= element_blank()) + #
  theme(axis.line.x = element_line(colour= "black"), #
		axis.line.y = element_line(colour= "black")  )
ggplot(d, aes(x=age)) + #
	geom_histogram(data=d, fill= "steelblue", alpha=0.3, colour = "darkblue", stat="bin", binwidth= 1) + #
	theme_bw()+ #
  xlab("Age (years)")+ ylab("Count")+#
  theme(panel.border = element_blank(), #
        panel.margin = element_blank(),#
        panel.grid.major= element_blank(),#
        panel.grid.minor= element_blank()) + #
  theme(axis.line.x = element_line(colour= "black"), #
		axis.line.y = element_line(colour= "black")  )
ggplot(d, aes(x=age)) + #
	geom_histogram(data=d, fill= "steelblue", alpha=0.3, colour = "darkblue", stat="bin", binwidth= 1) + #
	theme_bw()+ #
	xlab("Age (years)")+ ylab("Count")+#
	theme(panel.border = element_blank(), #
        panel.margin = element_blank(),#
        panel.grid.major= element_blank(),#
        panel.grid.minor= element_blank()) + #
	theme(axis.line.x = element_line(colour= "black"), #
		axis.line.y = element_line(colour= "black")) + #
	theme(axis.title.x=element_text(size=16), axis.title.y=element_text(16))
?geom_histogram
ggplot(d, aes(x=age)) + #
	geom_histogram(data=d, fill= "steelblue", alpha=0.3, colour = "darkblue", stat="bin", binwidth= 1) + #
	theme_bw()+ #
	xlab("Age (years)")+ ylab("Count")+#
	theme(panel.border = element_blank(), #
        panel.margin = element_blank(),#
        panel.grid.major= element_blank(),#
        panel.grid.minor= element_blank()) + #
	theme(axis.line.x = element_line(colour= "black"), #
		axis.line.y = element_line(colour= "black")) + #
	theme(axis.title = element_text(size=14), axis.text = element_text(size = 14))
ggplot(d, aes(x=age)) + #
	geom_histogram(data=d, fill= "steelblue", alpha=0.3, colour = "steelblue", stat="bin", binwidth= 1) + #
	theme_bw()+ #
	xlab("Age (years)")+ ylab("Count")+#
	theme(panel.border = element_blank(), #
        panel.margin = element_blank(),#
        panel.grid.major= element_blank(),#
        panel.grid.minor= element_blank()) + #
	theme(axis.line.x = element_line(colour= "black"), #
		axis.line.y = element_line(colour= "black")) + #
	theme(axis.title = element_text(size=14), axis.text = element_text(size = 14))
ggplot(d, aes(x=age)) + #
	geom_histogram(data=d, fill= "steelblue", alpha=0.3, colour = "steelblue4", stat="bin", binwidth= 1) + #
	theme_bw()+ #
	xlab("Age (years)")+ ylab("Count")+#
	theme(panel.border = element_blank(), #
        panel.margin = element_blank(),#
        panel.grid.major= element_blank(),#
        panel.grid.minor= element_blank()) + #
	theme(axis.line.x = element_line(colour= "black"), #
		axis.line.y = element_line(colour= "black")) + #
	theme(axis.title = element_text(size=14), axis.text = element_text(size = 14))
ggplot(d, aes(x=age)) + #
	geom_histogram(data=d, fill= "steelblue", alpha=0.3, colour = "steelblue4", stat="bin", binwidth= 1) + #
	theme_bw()+ #
	xlab("Age (years)")+ ylab("Count")+#
	theme(panel.border = element_blank(), #
        panel.margin = element_blank(),#
        panel.grid.major= element_blank(),#
        panel.grid.minor= element_blank()) + #
	theme(axis.line.x = element_line(colour= "black"), #
		axis.line.y = element_line(colour= "black")) + #
	theme(axis.title = element_text(size=16), axis.text = element_text(size = 16))
ggplot(d, aes(x=age)) + #
	geom_histogram(data=d, fill= "steelblue", alpha=0.3, colour = "steelblue4", stat="bin", binwidth= 1) + #
	theme_bw()+ #
	xlab("Age (years)")+ ylab("Number of buffalo")+#
	theme(panel.border = element_blank(), #
        panel.margin = element_blank(),#
        panel.grid.major= element_blank(),#
        panel.grid.minor= element_blank()) + #
	theme(axis.line.x = element_line(colour= "black"), #
		axis.line.y = element_line(colour= "black")) + #
	theme(axis.title = element_text(size=16), axis.text = element_text(size = 16))
getwd()
?png
png("Age_histogram.png", width = 480, height = 480, units = "px")#
ggplot(d, aes(x=age)) + #
	geom_histogram(data=d, fill= "steelblue", alpha=0.3, colour = "steelblue4", stat="bin", binwidth= 1) + #
	theme_bw()+ #
	xlab("Age (years)")+ ylab("Number of buffalo")+#
	theme(panel.border = element_blank(), #
        panel.margin = element_blank(),#
        panel.grid.major= element_blank(),#
        panel.grid.minor= element_blank()) + #
	theme(axis.line.x = element_line(colour= "black"), #
		axis.line.y = element_line(colour= "black")) + #
	theme(axis.title = element_text(size=16), axis.text = element_text(size = 16))#
dev.off()
require(stats)#
## Tonga Trench Earthquakes#
Depth <- equal.count(quakes$depth, number=8, overlap=.1)#
xyplot(lat ~ long | Depth, data = quakes)
library(lattic)
library(lattice)
require(stats)#
## Tonga Trench Earthquakes#
Depth <- equal.count(quakes$depth, number=8, overlap=.1)#
xyplot(lat ~ long | Depth, data = quakes)
p1 <- levelplot(bTBprev~rhoB*rhoT, data = epi, main = "bTB prevalence, no recovery", #
	xlab = expression(paste(beta[B]^{"'"}, "/", beta[B]) ), #
	ylab = expression(paste(beta[TB]^{"'"}, "/", beta[TB])), #
	at = seq(0, max(epi$bTBprev, epi$rbTBprev), 0.02 ))
epi <- read.csv("~/Documents/postdoc_buffology/Last-Thesis-Chapter!!!!!!/draft2/post-labmeeting/vary_rho/vary_rho.csv")#
library(lattice)
p1 <- levelplot(bTBprev~rhoB*rhoT, data = epi, main = "bTB prevalence, no recovery", #
	xlab = expression(paste(beta[B]^{"'"}, "/", beta[B]) ), #
	ylab = expression(paste(beta[TB]^{"'"}, "/", beta[TB])), #
	at = seq(0, max(epi$bTBprev, epi$rbTBprev), 0.02 ))
p1
?epi
head(epi)
epi <- read.csv("~/Documents/postdoc_buffology/Last-Thesis-Chapter!!!!!!/draft2/post-labmeeting/vary_rho/vary_rho.csv")#
library(lattice)#
epi$bTBplot <- epi$bTBprev - 0.30#
epi$brucplot <- epi$bTBprev - 0.30
epi$bTBplot <- epi$bTBprev - 0.30#
epi$brucplot <- epi$bTBprev - 0.30
epi$bTBplot <- epi$bTBprev - 0.30#
epi$brucplot <- epi$brucprev - 0.30#
p1 <- levelplot(bTBplot~rhoB*rhoT, data = epi, main = "bTB prevalence, no recovery", #
	xlab = expression(paste(beta[B]^{"'"}, "/", beta[B]) ), #
	ylab = expression(paste(beta[TB]^{"'"}, "/", beta[TB])), #
	at = seq(min(epi$bTBplot, epi$brucplotprev), max(epi$bTBplot, epi$brucplotprev), 0.02 ))
p1
levelplot(bTBprev~rhoB*rhoT, data = epi, main = "bTB prevalence, no recovery", #
	xlab = expression(paste(beta[B]^{"'"}, "/", beta[B]) ), #
	ylab = expression(paste(beta[TB]^{"'"}, "/", beta[TB])))
# bTB prev should go from +5 to -30
levelplot(brucprev~rhoB*rhoT, data = epi, main = "bruc prevalence, no recovery", #
	xlab = expression(paste(beta[B]^{"'"}, "/", beta[B]) ), #
	ylab = expression(paste(beta[TB]^{"'"}, "/", beta[TB])), #
	at = seq(0, max(epi$brucprev, epi$rbrucprev), 0.02 ))
# bruc prev from + 20 to -30
levelplot(bTBplot~rhoB*rhoT, data = epi, main = "bTB prevalence, no recovery", #
	xlab = expression(paste(beta[B]^{"'"}, "/", beta[B]) ), #
	ylab = expression(paste(beta[TB]^{"'"}, "/", beta[TB])), #
	at = seq(-0.30, +0.30, 0.02 ))
levelplot(bTBplot~rhoB*rhoT, data = epi, main = "bTB prevalence, no recovery", #
	xlab = expression(paste(beta[B]^{"'"}, "/", beta[B]) ), #
	ylab = expression(paste(beta[TB]^{"'"}, "/", beta[TB])))
levelplot(bTBplot~rhoB*rhoT, data = epi, main = "bTB prevalence, no recovery", #
	xlab = expression(paste(beta[B]^{"'"}, "/", beta[B]) ), #
	ylab = expression(paste(beta[TB]^{"'"}, "/", beta[TB])), #
	at = seq(-0.30, +0.30, 0.02 ))
levelplot(bTBplot~rhoB*rhoT, data = epi, main = "bTB prevalence, no recovery", #
	xlab = expression(paste(beta[B]^{"'"}, "/", beta[B]) ), #
	ylab = expression(paste(beta[TB]^{"'"}, "/", beta[TB])), #
	at = seq(-0.32, +0.32, 0.02 ))
p3 <- levelplot(brucplot~rhoB*rhoT, data = epi, main = "brucellosis prevalence", #
	xlab = expression(paste(beta[B]^{"'"}, "/", beta[B]) ), #
	ylab = expression(paste(beta[TB]^{"'"}, "/", beta[TB])))
p3
p3 <- levelplot(bTBplot~rhoB*rhoT, data = epi, main = "brucellosis prevalence", #
	xlab = expression(paste(beta[B]^{"'"}, "/", beta[B]) ), #
	ylab = expression(paste(beta[TB]^{"'"}, "/", beta[TB])))
p3
levelplot(brucplot~rhoB*rhoT, data = epi, main = "brucellosis prevalence", #
	xlab = expression(paste(beta[B]^{"'"}, "/", beta[B]) ), #
	ylab = expression(paste(beta[TB]^{"'"}, "/", beta[TB])))
p3 <- levelplot(brucplot~rhoB*rhoT, data = epi, main = "brucellosis prevalence", #
	xlab = expression(paste(beta[B]^{"'"}, "/", beta[B]) ), #
	ylab = expression(paste(beta[TB]^{"'"}, "/", beta[TB])), #
	at = seq(-0.30, +0.30, 0.02 ))
p3
p3 <- levelplot(brucplot~rhoB*rhoT, data = epi, main = "brucellosis prevalence", #
	xlab = expression(paste(beta[B]^{"'"}, "/", beta[B]) ), #
	ylab = expression(paste(beta[TB]^{"'"}, "/", beta[TB])), #
	at = seq(-0.30, +0.10, 0.02 ))
p3
levelplot(bTBplot~rhoB*rhoT, data = epi, main = "bTB prevalence", #
	xlab = expression(paste(beta[B]^{"'"}, "/", beta[B]) ), #
	ylab = expression(paste(beta[TB]^{"'"}, "/", beta[TB]))
)
levelplot(brucplot~rhoB*rhoT, data = epi, main = "bTB prevalence", #
	xlab = expression(paste(beta[B]^{"'"}, "/", beta[B]) ), #
	ylab = expression(paste(beta[TB]^{"'"}, "/", beta[TB])))
library(RColorBrewer)
cols <- brewer.pal(11, "RdBu")#
cols2 <- colorRampPalette(brewer.pal(11, "RdBu"))
cols2
?levelplot
levelplot(bTBplot~rhoB*rhoT, data = epi, main = "bTB prevalence", #
	xlab = expression(paste(beta[B]^{"'"}, "/", beta[B]) ), #
	ylab = expression(paste(beta[TB]^{"'"}, "/", beta[TB])), #
	at = seq(-0.30, +0.12, 0.02 ), #
	col.regions = cols)
?colorRampPalette
cols2 <- colorRampPalette(brewer.pal(11, "RdBu"), 100)
cols2
levelplot(bTBplot~rhoB*rhoT, data = epi, main = "bTB prevalence", #
	xlab = expression(paste(beta[B]^{"'"}, "/", beta[B]) ), #
	ylab = expression(paste(beta[TB]^{"'"}, "/", beta[TB])), #
	at = seq(-0.30, +0.12, 0.02 ), #
	col.regions = cols)
cols
levelplot(bTBplot~rhoB*rhoT, data = epi, main = "bTB prevalence", #
	xlab = expression(paste(beta[B]^{"'"}, "/", beta[B]) ), #
	ylab = expression(paste(beta[TB]^{"'"}, "/", beta[TB])), #
	at = seq(-0.30, +0.12, 0.02 ), #
	col.regions = cols2)
cols2 <- colorRampPalette(brewer.pal(11, "RdBu"))
levelplot(bTBplot~rhoB*rhoT, data = epi, main = "bTB prevalence", #
	xlab = expression(paste(beta[B]^{"'"}, "/", beta[B]) ), #
	ylab = expression(paste(beta[TB]^{"'"}, "/", beta[TB])), #
	at = seq(-0.30, +0.12, 0.02 ), #
	col.regions = cols2)
ggplot(epi, aes(rhoB, rhoT, brucplot)) + geom_title(aes(fill = brucplot)) + theme_bw()
ggplot(epi, aes(rhoB, rhoT, brucplot)) + geom_title(aes(fill = brucplot)) + theme_bw()
ggplot(epi, aes(rhoB, rhoT, brucplot)) + geom_tile(aes(fill = brucplot)) + theme_bw()
seq(-0.30, +0.12, 0.02 )
seq(-0.30, 0.30, 0.05)
length(-0.30, 0.30, 0.05)
length(seq(-0.30, 0.30, 0.05))
length(seq(-0.30, 0.30, 0.02))
cols2 <- colorRampPalette(brewer.pal(11, "RdBu"))(31)
cols2
plot(1:31, 1:31, pch = 19, cols = cols2)
plot(1:31, 1:31, pch = 19, fill = cols2)
?plot
plot(1:31, 1:31, pch = 19, col = cols2)
ggplot(epi, aes(rhoB, rhoT, brucplot)) + geom_tile(aes(fill = brucplot)) +#
	theme_bw() + scale_fill_manual(values = cols2)
cols2 <- colorRampPalette(brewer.pal(11, "RdBu"))
ggplot(epi, aes(rhoB, rhoT, brucplot)) + geom_tile(aes(fill = brucplot)) +#
	theme_bw() + scale_fill_manual(values = cols2)
cols2
length(unique(epi$bTBplot))
cols2 <- colorRampPalette(brewer.pal(11, "RdBu"))(361)
ggplot(epi, aes(rhoB, rhoT, brucplot)) + geom_tile(aes(fill = brucplot)) +#
	theme_bw() + scale_fill_manual(values = cols2)
?reshape
head(epi)
epi <- read.csv("~/Documents/postdoc_buffology/Last-Thesis-Chapter!!!!!!/draft2/post-labmeeting/vary_rho/vary_rho.csv")#
cols <- brewer.pal(11, "RdBu")#
cols2 <- colorRampPalette(brewer.pal(11, "RdBu"))#
#
epi$bTBplot <- epi$bTBprev - 0.30#
epi$brucplot <- epi$brucprev - 0.30
df <- reshape(epi, varying = c("bTBplot", "brucplot"), timevar = "infection", times = c("bTB", "brucellosis"))
df <- reshape(epi, direction = "long", varying = c("bTBplot", "brucplot"), timevar = "infection", times = c("bTB", "brucellosis"))
summary(Indometh)#
wide <- reshape(Indometh, v.names = "conc", idvar = "Subject",#
                timevar = "time", direction = "wide")#
wide
head(epi)
df <- reshape(epi, direction = "long", varying = c("bTBplot", "brucplot"),#
	v.names = "Difference", timevar = "infection", times = c("bTB", "brucellosis"))
head(df)
summary(df$Difference)
p <- ggplot(data = df, aes(x = rhoB, y = rhoT))#
p + theme_bw() + facet_wrap(~ infection) + geom_tile(aes(fill = Difference))
p <- ggplot(data = df, aes(x = rhoB, y = rhoT))#
p + theme_bw() + facet_wrap(~ infection) + #
	theme(panel.grid.major = element_blank(), #
	axis.title = element_text(size = 16), axis.text = element_text(size = 14)) + #
	geom_tile(aes(fill = Difference)) + #
	scale_fill_manual(name = "Change in prevalence with co-infection")
p <- ggplot(data = df, aes(x = rhoB, y = rhoT))#
p + theme_bw() + facet_wrap(~ infection) + #
	theme(panel.grid.major = element_blank(), #
	axis.title = element_text(size = 16), axis.text = element_text(size = 14)) + #
	geom_tile(aes(fill = Difference))
p <- ggplot(data = df, aes(x = rhoB, y = rhoT))#
p + theme_bw() + facet_wrap(~ infection) + #
	theme(panel.grid.major = element_blank(), #
	axis.title = element_text(size = 16), axis.text = element_text(size = 14)) + #
	geom_tile(aes(fill = Difference))
p <- ggplot(data = df, aes(x = rhoB, y = rhoT))#
p + theme_bw() + facet_wrap(~ infection) + #
	theme(panel.grid.major = element_blank(), #
	axis.title = element_text(size = 16), axis.text = element_text(size = 14)) + #
	geom_tile(aes(fill = Difference))
p <- ggplot(data = df, aes(x = rhoB, y = rhoT))#
p + theme_bw() + facet_wrap(~ infection) + #
	theme(panel.grid.major = element_blank(), #
	axis.title = element_text(size = 16), axis.text = element_text(size = 14)) + #
	geom_tile(aes(fill = Difference)) +#
	scale_fill_gradient(name = "Change in prevalence with co-infection", limits = c(-0.3, 0.1), low = "red", high = "blue")
p <- ggplot(data = df, aes(x = rhoB, y = rhoT))#
p + theme_bw() + facet_wrap(~ infection) + #
	theme(panel.grid.major = element_blank(), #
	axis.title = element_text(size = 16), axis.text = element_text(size = 14)) + #
	geom_tile(aes(fill = Difference)) +#
	scale_fill_gradient(name = "Difference", limits = c(-0.3, 0.12), low = "red", high = "blue")
?element_text
?element_text
?xlab
p <- ggplot(data = df, aes(x = rhoB, y = rhoT))#
p + theme_bw() + facet_wrap(~ infection) + #
	xlab(expression(paste(beta[B]^{"'"}, "/", beta[B]) )) + #
	theme(panel.grid.major = element_blank(), #
	axis.title = element_text(size = 16), axis.text = element_text(size = 14), #
	legend.text = element_text(size=15) ) + #
	geom_tile(aes(fill = Difference)) +#
	scale_fill_gradient(name = "Difference", limits = c(-0.3, 0.12), low = "red", high = "blue")
p <- ggplot(data = df, aes(x = rhoB, y = rhoT))#
p + theme_bw() + facet_wrap(~ infection) + #
	xlab(paste("Proportional increase in brucellosis transmission with co-infection, ", expression(paste(beta[B]^{"'"}, "/", beta[B]) ))) + #
	theme(panel.grid.major = element_blank(), #
	axis.title = element_text(size = 16), axis.text = element_text(size = 14), #
	legend.text = element_text(size=15) ) + #
	geom_tile(aes(fill = Difference)) +#
	scale_fill_gradient(name = "Difference", limits = c(-0.3, 0.12), low = "red", high = "blue")
p <- ggplot(data = df, aes(x = rhoB, y = rhoT))#
p + theme_bw() + facet_wrap(~ infection) + #
	xlab("Proportional increase in brucellosis transmission with co-infection, " expression(paste(beta[B]^{"'"}, "/", beta[B]) )) + #
	theme(panel.grid.major = element_blank(), #
	axis.title = element_text(size = 12), axis.text = element_text(size = 12), #
	legend.text = element_text(size=15) ) + #
	geom_tile(aes(fill = Difference)) +#
	scale_fill_gradient(name = "Difference", limits = c(-0.3, 0.12), low = "red", high = "blue")
p <- ggplot(data = df, aes(x = rhoB, y = rhoT))#
p + theme_bw() + facet_wrap(~ infection) + #
	xlab(expression(paste(Proportional~increase~"in"~brucellosis~transmission~with~co-infection,~ beta[B]^{"'"}, "/", beta[B]) )) + #
	theme(panel.grid.major = element_blank(), #
	axis.title = element_text(size = 12), axis.text = element_text(size = 12), #
	legend.text = element_text(size=15) ) + #
	geom_tile(aes(fill = Difference)) +#
	scale_fill_gradient(name = "Difference", limits = c(-0.3, 0.12), low = "red", high = "blue")
p <- ggplot(data = df, aes(x = rhoB, y = rhoT))#
p + theme_bw() + facet_wrap(~ infection) + #
	xlab(expression(paste(Proportional~increase~"in"~brucellosis~#
		transmission~with~"co-infection,"~ beta[B]^{"'"}, "/", beta[B]) )) + #
	ylab(expression(paste(Proportional~increase~"in"~bTB~#
		transmission~with~"co-infection,"~ beta[T]^{"'"}, "/", beta[T]) )) +#
	theme(panel.grid.major = element_blank(), #
	axis.title = element_text(size = 12), axis.text = element_text(size = 12), #
	legend.text = element_text(size=15) ) + #
	geom_tile(aes(fill = Difference)) +#
	scale_fill_gradient(name = "Difference", limits = c(-0.3, 0.12), low = "red", high = "blue")
?theme
p <- ggplot(data = df, aes(x = rhoB, y = rhoT))#
p + theme_bw() + facet_wrap(~ infection) + #
	xlab(expression(paste(Proportional~increase~"in"~brucellosis~#
		transmission~with~"co-infection,"~ beta[B]^{"'"}, "/", beta[B]) )) + #
	ylab(expression(paste(Proportional~increase~"in"~bTB~#
		transmission~with~"co-infection,"~ beta[T]^{"'"}, "/", beta[T]) )) +#
	theme(panel.grid.major = element_blank(), #
	plot.title = element_text(size = 14),#
	axis.title = element_text(size = 12), axis.text = element_text(size = 12), #
	legend.text = element_text(size=15) ) + #
	geom_tile(aes(fill = Difference)) +#
	scale_fill_gradient(name = "Difference", limits = c(-0.3, 0.12), low = "red", high = "blue")
p <- ggplot(data = df, aes(x = rhoB, y = rhoT))#
p + theme_bw() + facet_wrap(~ infection) + stat_contour()+#
	xlab(expression(paste(Proportional~increase~"in"~brucellosis~#
		transmission~with~"co-infection,"~ beta[B]^{"'"}, "/", beta[B]) )) + #
	ylab(expression(paste(Proportional~increase~"in"~bTB~#
		transmission~with~"co-infection,"~ beta[T]^{"'"}, "/", beta[T]) )) +#
	theme(panel.grid.major = element_blank(), #
	plot.title = element_text(size = 14),#
	axis.title = element_text(size = 12), axis.text = element_text(size = 12), #
	legend.text = element_text(size=15) ) + #
	geom_tile(aes(fill = Difference)) +#
	scale_fill_gradient(name = "Difference", limits = c(-0.3, 0.12), low = "red", high = "blue")
p <- ggplot(data = df, aes(x = rhoB, y = rhoT))#
p + theme_bw() + facet_wrap(~ infection)#
	xlab(expression(paste(Proportional~increase~"in"~brucellosis~#
		transmission~with~"co-infection,"~ beta[B]^{"'"}, "/", beta[B]) )) + #
	ylab(expression(paste(Proportional~increase~"in"~bTB~#
		transmission~with~"co-infection,"~ beta[T]^{"'"}, "/", beta[T]) )) +#
	theme(panel.grid.major = element_blank(), #
	plot.title = element_text(size = 14),#
	axis.title = element_text(size = 12), axis.text = element_text(size = 12), #
	legend.text = element_text(size=15) ) + #
	geom_tile(aes(fill = Difference)) +#
	scale_fill_gradient2(name = "Difference", limits = c(-0.3, 0.12), low = "red", mid = "white", high = "blue", midpoint = 0)
p <- ggplot(data = df, aes(x = rhoB, y = rhoT))#
p + theme_bw() + facet_wrap(~ infection) + #
	xlab(expression(paste(Proportional~increase~"in"~brucellosis~#
		transmission~with~"co-infection,"~ beta[B]^{"'"}, "/", beta[B]))) + #
	ylab(expression(paste(Proportional~increase~"in"~bTB~#
		transmission~with~"co-infection,"~ beta[T]^{"'"}, "/", beta[T]) )) +#
	theme(panel.grid.major = element_blank(), #
	plot.title = element_text(size = 14),#
	axis.title = element_text(size = 12), axis.text = element_text(size = 12), #
	legend.text = element_text(size=15) ) + #
	geom_tile(aes(fill = Difference)) +#
	scale_fill_gradient2(name = "Difference", limits = c(-0.3, 0.12), low = "red", mid = "white", high = "blue", midpoint = 0)
p <- ggplot(data = df, aes(x = rhoB, y = rhoT))#
p + theme_bw() + facet_wrap(~ infection) + #
	xlab(expression(paste(Proportional~increase~"in"~brucellosis~#
		transmission~with~"co-infection,"~ beta[B]^{"'"}, "/", beta[B]))) + #
	ylab(expression(paste(Proportional~increase~"in"~bTB~#
		transmission~with~"co-infection,"~ beta[T]^{"'"}, "/", beta[T]) )) +#
	theme(panel.grid.major = element_blank(), #
	plot.title = element_text(size = 14),#
	axis.title = element_text(size = 12), axis.text = element_text(size = 12), #
	legend.text = element_text(size=15) ) + #
	geom_tile(aes(fill = Difference)) +#
	scale_color_brewer(palette = "RdYlBu")
p <- ggplot(data = df, aes(x = rhoB, y = rhoT))#
p + theme_bw() + facet_wrap(~ infection) + #
	xlab(expression(paste(Proportional~increase~"in"~brucellosis~#
		transmission~with~"co-infection,"~ beta[B]^{"'"}, "/", beta[B]))) + #
	ylab(expression(paste(Proportional~increase~"in"~bTB~#
		transmission~with~"co-infection,"~ beta[T]^{"'"}, "/", beta[T]) )) +#
	theme(panel.grid.major = element_blank(), #
	plot.title = element_text(size = 14),#
	axis.title = element_text(size = 12), axis.text = element_text(size = 12), #
	legend.text = element_text(size=15) ) + #
	geom_tile(aes(fill = Difference)) +#
	scale_fill_brewer(palette = "RdYlBu")
p <- ggplot(data = df, aes(x = rhoB, y = rhoT))#
p + theme_bw() + facet_wrap(~ infection) + #
	xlab(expression(paste(Proportional~increase~"in"~brucellosis~#
		transmission~with~"co-infection,"~ beta[B]^{"'"}, "/", beta[B]))) + #
	ylab(expression(paste(Proportional~increase~"in"~bTB~#
		transmission~with~"co-infection,"~ beta[T]^{"'"}, "/", beta[T]) )) +#
	theme(panel.grid.major = element_blank(), #
	plot.title = element_text(size = 14),#
	axis.title = element_text(size = 12), axis.text = element_text(size = 12), #
	legend.text = element_text(size=15) ) + #
	geom_tile(aes(fill = Difference)) +#
	scale_fill_distiller(palette = "RdYlBu")
p <- ggplot(data = df, aes(x = rhoB, y = rhoT))#
p + theme_bw() + facet_wrap(~ infection) + #
	xlab(expression(paste(Proportional~increase~"in"~brucellosis~#
		transmission~with~"co-infection,"~ beta[B]^{"'"}, "/", beta[B]))) + #
	ylab(expression(paste(Proportional~increase~"in"~bTB~#
		transmission~with~"co-infection,"~ beta[T]^{"'"}, "/", beta[T]) )) +#
	theme(panel.grid.major = element_blank(), #
	plot.title = element_text(size = 14),#
	axis.title = element_text(size = 12), axis.text = element_text(size = 12), #
	legend.text = element_text(size=15) ) + #
	geom_tile(aes(fill = Difference)) +#
	scale_fill_distiller(palette = "RdYlBu", direction = -1)
?scale_fill_distiller
p <- ggplot(data = df, aes(x = rhoB, y = rhoT))#
p + theme_bw() + facet_wrap(~ infection) + #
	xlab(expression(paste(Proportional~increase~"in"~brucellosis~#
		transmission~with~"co-infection,"~ beta[B]^{"'"}, "/", beta[B]))) + #
	ylab(expression(paste(Proportional~increase~"in"~bTB~#
		transmission~with~"co-infection,"~ beta[T]^{"'"}, "/", beta[T]) )) +#
	theme(panel.grid.major = element_blank(), #
	plot.title = element_text(size = 14),#
	axis.title = element_text(size = 12), axis.text = element_text(size = 12), #
	legend.text = element_text(size=15) ) + #
	geom_tile(aes(fill = Difference)) +#
	scale_fill_distiller(palette = "RdYlBu", direction = -1)
p <- ggplot(data = df, aes(x = rhoB, y = rhoT))#
p + theme_bw() + facet_wrap(~ infection) + #
	xlab(expression(paste(Proportional~increase~"in"~brucellosis~#
		transmission~with~"co-infection,"~ beta[B]^{"'"}, "/", beta[B]))) + #
	ylab(expression(paste(Proportional~increase~"in"~bTB~#
		transmission~with~"co-infection,"~ beta[T]^{"'"}, "/", beta[T]) )) +#
	theme(panel.grid.major = element_blank(), #
	plot.title = element_text(size = 14),#
	axis.title = element_text(size = 12), axis.text = element_text(size = 12), #
	legend.text = element_text(size=15) ) + #
	geom_tile(aes(fill = Difference)) +#
	scale_fill_distiller(palette = "RdYlBu", direction = -1, limits = c(-30, 30))
p <- ggplot(data = df, aes(x = rhoB, y = rhoT))#
p + theme_bw() + facet_wrap(~ infection) + #
	xlab(expression(paste(Proportional~increase~"in"~brucellosis~#
		transmission~with~"co-infection,"~ beta[B]^{"'"}, "/", beta[B]))) + #
	ylab(expression(paste(Proportional~increase~"in"~bTB~#
		transmission~with~"co-infection,"~ beta[T]^{"'"}, "/", beta[T]) )) +#
	theme(panel.grid.major = element_blank(), #
	plot.title = element_text(size = 14),#
	axis.title = element_text(size = 12), axis.text = element_text(size = 12), #
	legend.text = element_text(size=15) ) + #
	geom_tile(aes(fill = Difference)) +#
	scale_fill_distiller(palette = "RdYlBu", direction = -1, limits = c(-0.30, 0.30))
head(df)
summary(df$Difference[df$infection = "bTB"])
summary(df$Difference[df$infection == "bTB"])
summary(df$Difference[df$infection == "brucellosis"])
p <- ggplot(data = df, aes(x = rhoB, y = rhoT))#
p + theme_bw() + facet_wrap(~ infection) + #
	xlab(expression(paste(Proportional~increase~"in"~brucellosis~#
		transmission~with~"co-infection,"~ beta[B]^{"'"}, "/", beta[B]))) + #
	ylab(expression(paste(Proportional~increase~"in"~bTB~#
		transmission~with~"co-infection,"~ beta[T]^{"'"}, "/", beta[T]) )) +#
	theme(panel.grid.major = element_blank(), #
	plot.title = element_text(size = 14),#
	axis.title = element_text(size = 12), axis.text = element_text(size = 12), #
	legend.text = element_text(size=15), #
	legend.text.align = 1, #
	legend.key.size = unit(1, "cm") ) + #
	geom_tile(aes(fill = Difference)) +#
	scale_fill_distiller(palette = "RdYlBu", direction = -1, limits = c(-0.30, 0.30))
p <- ggplot(data = df, aes(x = rhoB, y = rhoT))#
p + theme_bw() + facet_wrap(~ infection) + #
	xlab(expression(paste(Proportional~increase~"in"~brucellosis~#
		transmission~with~"co-infection,"~ beta[B]^{"'"}, "/", beta[B]))) + #
	ylab(expression(paste(Proportional~increase~"in"~bTB~#
		transmission~with~"co-infection,"~ beta[T]^{"'"}, "/", beta[T]) )) +#
	theme(panel.grid.major = element_blank(), #
	plot.title = element_text(size = 14),#
	axis.title = element_text(size = 12), axis.text = element_text(size = 12), #
	legend.text = element_text(size=12), #
	legend.text.align = 1, #
	legend.key.size = unit(1, "cm") ) + #
	geom_tile(aes(fill = Difference)) +#
	scale_fill_distiller(palette = "RdYlBu", direction = -1, limits = c(-0.30, 0.30))
ggplot(d, aes(x=age)) + #
	geom_histogram(data=d, fill= "steelblue", alpha=0.3, #
		colour = "steelblue4", stat="bin", binwidth= 1) + #
	theme_bw()+ #
	xlab("Age (years)")+ ylab("Number of buffalo")+#
	theme(panel.border = element_blank(), #
        panel.margin = element_blank(),#
        panel.grid.major= element_blank(),#
        panel.grid.minor= element_blank()) + #
	theme(axis.line.x = element_line(colour= "black", size = 3), #
		axis.line.y = element_line(colour= "black", size = 3)) + #
	theme(axis.title = element_blank(), axis.text = element_blank())
?axis.ticks()
?axis.ticks
??axis.ticks
?theme
?geom_bar
ggplot(d, aes(x=age)) + #
	geom_histogram(data=d, fill= "steelblue", alpha=0.3, #
		colour = "steelblue4", stat="bin", binwidth= 1, linetype = 2) + #
	theme_bw()+ #
	xlab("Age (years)")+ ylab("Number of buffalo")+#
	theme(panel.border = element_blank(), #
        panel.margin = element_blank(),#
        panel.grid.major= element_blank(),#
        panel.grid.minor= element_blank()) + #
	theme(axis.line.x = element_line(colour= "black", size = 2), #
		axis.line.y = element_line(colour= "black", size = 2), #
		axis.ticks = ) + #
	theme(axis.title = element_blank(), axis.text = element_blank())
ggplot(d, aes(x=age)) + #
	geom_histogram(data=d, fill= "steelblue", alpha=0.3, #
		colour = "steelblue4", stat="bin", binwidth= 1, linetype = 2) + #
	theme_bw()+ #
	xlab("Age (years)")+ ylab("Number of buffalo")+#
	theme(panel.border = element_blank(), #
        panel.margin = element_blank(),#
        panel.grid.major= element_blank(),#
        panel.grid.minor= element_blank()) + #
	theme(axis.line.x = element_line(colour= "black", size = 2), #
		axis.line.y = element_line(colour= "black", size = 2)) + #
	theme(axis.title = element_blank(), axis.text = element_blank())
?linetype
ggplot(d, aes(x=age)) + #
	geom_histogram(data=d, fill= "steelblue", alpha=0.3, #
		colour = "steelblue4", stat="bin", binwidth= 1, linetype = 1, size = 2) + #
	theme_bw()+ #
	xlab("Age (years)")+ ylab("Number of buffalo")+#
	theme(panel.border = element_blank(), #
        panel.margin = element_blank(),#
        panel.grid.major= element_blank(),#
        panel.grid.minor= element_blank()) + #
	theme(axis.line.x = element_line(colour= "black", size = 2), #
		axis.line.y = element_line(colour= "black", size = 2)) + #
	theme(axis.title = element_blank(), axis.text = element_blank())
png("Age_histogram.png", width = 800, height = 800, units = "px")#
ggplot(d, aes(x=age)) + #
	geom_histogram(data=d, fill= "steelblue", alpha=0.3, #
		colour = "steelblue4", stat="bin", binwidth= 1, linetype = 1, size = 2) + #
	theme_bw()+ #
	xlab("Age (years)")+ ylab("Number of buffalo")+#
	theme(panel.border = element_blank(), #
        panel.margin = element_blank(),#
        panel.grid.major= element_blank(),#
        panel.grid.minor= element_blank()) + #
	theme(axis.line.x = element_line(colour= "black", size = 2), #
		axis.line.y = element_line(colour= "black", size = 2)) + #
	theme(axis.title = element_blank(), axis.text = element_blank())#
dev.off()
getwd()
